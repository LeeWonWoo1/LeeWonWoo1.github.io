<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://leewonwoo1.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://leewonwoo1.github.io/" rel="alternate" type="text/html" /><updated>2021-08-04T19:20:25+09:00</updated><id>https://leewonwoo1.github.io/feed.xml</id><title type="html">LWW’s Tech Blog</title><subtitle>꾸준히 기록하는 블로그</subtitle><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><entry><title type="html">[정보처리기사 필기] 5-3. 소프트웨어 개발 보안 구축</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp20/" rel="alternate" type="text/html" title="[정보처리기사 필기] 5-3. 소프트웨어 개발 보안 구축" /><published>2021-08-04T18:00:00+09:00</published><updated>2021-08-05T03:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp20</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp20/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 일부 제외&lt;/p&gt;

&lt;h2 id=&quot;1-secure-sdlc--a&quot;&gt;1. Secure SDLC – A&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;SDLC에 보안 강화를 위한 프로세스를 포함&lt;/li&gt;
  &lt;li&gt;유지 보수 단계에서 보안 이슈를 해결하기 위해 소모되는 많은 비용 최소화&lt;/li&gt;
  &lt;li&gt;CLASP, SDL 등&lt;/li&gt;
  &lt;li&gt;SDLC 전체 단계에 걸쳐 수행되어야 할 보안 활동 제시&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--요구사항-분석-단계에서의-보안-활동&quot;&gt;- 요구사항 분석 단계에서의 보안 활동&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;요구사항을 식별하는 작업 수행&lt;/li&gt;
  &lt;li&gt;보안 수준을 보안 요소별로 등급을 구분&lt;/li&gt;
  &lt;li&gt;보안 정책 항목들의 출처, 요구 수준, 세부 내용 등을 문서화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--보안-요소&quot;&gt;- 보안 요소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기밀성 : 인가된 사용자에게만 접근 허용. 노출되더라도 읽을 수 없음&lt;/li&gt;
  &lt;li&gt;무결성 : 인가된 사용자만 수정 가능&lt;/li&gt;
  &lt;li&gt;가용성 : 인가된 사용자는 언제라도 사용 가능&lt;/li&gt;
  &lt;li&gt;인증 : 사용자가 합법적인 사용자인지를 확인하는 모든 행위&lt;/li&gt;
  &lt;li&gt;부인 방지 : 송수신 사실을 부인할 수 없도록 송수신 증거 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--설계-단계에서의-보안-활동&quot;&gt;- 설계 단계에서의 보안 활동&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보안 요구사항들을 S/W 설계서에 반영하고, 보안 설계서 작성&lt;/li&gt;
  &lt;li&gt;위협 식별&lt;/li&gt;
  &lt;li&gt;보안통제 기준 수립하여 설계에 반영&lt;/li&gt;
  &lt;li&gt;네트워크 : 네트워크를 분리하거나 방화벽 설치&lt;/li&gt;
  &lt;li&gt;서버 : 보안이 뛰어난 운영체제 사용, 접근통제 등 실시&lt;/li&gt;
  &lt;li&gt;물리적 보안 : 출입통제, 개발 공간 제한, 폐쇄회로 등의 감시설비 설치&lt;/li&gt;
  &lt;li&gt;개발 프로그램 : 허가되지 않은 프로그램 통제. 지속적인 데이터 무결성 검사 실시&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--구현-단계에서의-보안-활동&quot;&gt;- 구현 단계에서의 보안 활동&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;표준 코딩 정의서 및 S/W 개발 보안 가이드 준수&lt;/li&gt;
  &lt;li&gt;설계서에 따라 보안 요구사항 구현&lt;/li&gt;
  &lt;li&gt;지속적인 단위 테스트를 통해 보안 취약점 최소화&lt;/li&gt;
  &lt;li&gt;코드 점검, 소스 코드 진단 작업&lt;/li&gt;
  &lt;li&gt;시큐어 코딩&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-단계에서의-보안-활동&quot;&gt;- 테스트 단계에서의 보안 활동&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보안 설계서를 바탕으로 보안 사항들이 정확히 반영되고 동작되는지 점검&lt;/li&gt;
  &lt;li&gt;동적 분석 도구 또는 모의 침투테스트를 통해 위협의 해결여부 검증&lt;/li&gt;
  &lt;li&gt;위협과 취약점들을 점검할 수 있도록 테스트 계획을 수립하고 시행&lt;/li&gt;
  &lt;li&gt;모든 결과는 문서화. 개발자에게 피드백&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--유지보수-단계에서의-보안-활동&quot;&gt;- 유지보수 단계에서의 보안 활동&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이전 과정을 모두 수행하였음에도 발생할 수 있는 보안사고들 식별&lt;/li&gt;
  &lt;li&gt;사고 발생 시 이를 해결하고 보안 패치 실시&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-세션-통제--b&quot;&gt;2. 세션 통제 – B&lt;/h2&gt;

&lt;h3 id=&quot;--세션-통제의-개요&quot;&gt;- 세션 통제의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;세션은 서버와 클라이언트의 연결&lt;/li&gt;
  &lt;li&gt;세션 통제는 세션의 연결과 연결로 인해 발생하는 정보를 관리하는 것&lt;/li&gt;
  &lt;li&gt;요구사항 분석 및 설계 단계에서 진단&lt;/li&gt;
  &lt;li&gt;불충분한 세션 관리, 잘못된 세션에 의한 정보 노출&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--불충분한-세션-관리&quot;&gt;- 불충분한 세션 관리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;규칙이 존재하는 세션 ID가 발급되거나 타임아웃이 너무 긴 경우 발생&lt;/li&gt;
  &lt;li&gt;세션 하이재킹 같은 공격을 통해 중요한 정보에 접근할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--잘못된-세션에-의한-정보-노출&quot;&gt;- 잘못된 세션에 의한 정보 노출&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다중 스레드 환경에서 멤버 변수에 정보를 저장할 때 발생하는 보안 약점&lt;/li&gt;
  &lt;li&gt;싱글톤 패턴에서 발생하는 레이스컨디션으로 동기화 오류가 발생. 멤버 변수 정보 노출&lt;/li&gt;
  &lt;li&gt;멤버 변수보다 지역 변수를 활용하여 변수의 범위를 제한함으로써 방지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--세션-설계시-고려-사항&quot;&gt;- 세션 설계시 고려 사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모든 페이지에서 로그아웃이 가능하도록 UI 구성&lt;/li&gt;
  &lt;li&gt;로그아웃 요청 시 할당된 세션이 완전히 제거되도록 함&lt;/li&gt;
  &lt;li&gt;세션 타임아웃은 중요도가 높으면 2~5분, 낮으면 15~30분으로 설정&lt;/li&gt;
  &lt;li&gt;이전 세션이 종료되지 않으면 새 세션이 생성되지 못하도록 설계&lt;/li&gt;
  &lt;li&gt;중복 로그인을 허용하지 않은 경우 클라이언트의 중복 접근에 대한 세션 관리 정책 수립&lt;/li&gt;
  &lt;li&gt;패스워드 변경 시 활성화된 세션을 삭제하고 재할당&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--세션id의-관리-방법&quot;&gt;- 세션ID의 관리 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;안전한 서버에서 최소 128비트의 길이로 생성&lt;/li&gt;
  &lt;li&gt;예측이 불가능하도록 안전한 난수 알고리즘 적용&lt;/li&gt;
  &lt;li&gt;세션 ID가 노출되지 않도록 URL Rewrite 기능을 사용하지 않는 방향으로 설계&lt;/li&gt;
  &lt;li&gt;로그인 시 로그인 전의 세션ID를 삭제하고 재할당&lt;/li&gt;
  &lt;li&gt;장기간 접속하고 있는 세션ID는 주기적으로 재할당&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-입력-데이터-검증-및-표현--b&quot;&gt;3. 입력 데이터 검증 및 표현 – B&lt;/h2&gt;

&lt;h3 id=&quot;--입력-데이터-검증-및-표현의-개요&quot;&gt;- 입력 데이터 검증 및 표현의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;입력 데이터로 인해 발생하는 문제들을 예방하기 위해 구현 단계에서 검증해야 하는 보안 점검 항목&lt;/li&gt;
  &lt;li&gt;개발의 구현 단계에서 유효성 검증 체계를 갖춤&lt;/li&gt;
  &lt;li&gt;검증되지 않은 데이터가 입력되는 경우 이를 처리할 수 있도록 구현&lt;/li&gt;
  &lt;li&gt;자료형 올바른지 확인, 일관된 언어셋 사용하도록 코딩&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--입력-데이터-검증-및-표현의-보안-약점&quot;&gt;- 입력 데이터 검증 및 표현의 보안 약점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;SQL 삽입
    &lt;ul&gt;
      &lt;li&gt;입력란에 SQL을 삽입하여 무단으로 DB를 조회하거나 조작&lt;/li&gt;
      &lt;li&gt;동적 쿼리에 사용되는 입력 데이터에 예약어 및 특수문자가 입력되지 않게 필터링&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;경로 조작 및 자원 삽입
    &lt;ul&gt;
      &lt;li&gt;데이터 입출력 경로를 조작하여 서버 자원을 수정, 삭제할 수 있는 보안 약점&lt;/li&gt;
      &lt;li&gt;경로 순회 공격을 막는 필터를 사용하여 방지&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;크로스사이트 스크립팅(XSS)
    &lt;ul&gt;
      &lt;li&gt;악의적인 스크립트를 삽입하여 방문자들의 정보 탈취, 비정상적 기능 수행 유발&lt;/li&gt;
      &lt;li&gt;HTML 태그 사용 제한하거나 삽입되지 않도록 &amp;lt;, &amp;gt;, &amp;amp;등의 문자를 다른문자로 치환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;운영체제 명령어 삽입
    &lt;ul&gt;
      &lt;li&gt;외부 입력값을 통해 시스템 명령어의 실행을 유도함으로써 권한을 탈취, 장애 유발&lt;/li&gt;
      &lt;li&gt;웹 인터페이스를 통해 시스템 명령어가 전달되지 않도록 함&lt;/li&gt;
      &lt;li&gt;외부 입력값을 검증 없이 내부 명령어로 사용하지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;위험한 형식 파일 업로드
    &lt;ul&gt;
      &lt;li&gt;악의적인 명령어가 포함된 스크립트 파일을 업로드하여 시스템에 손상, 제어&lt;/li&gt;
      &lt;li&gt;파일의 확장자 제한, 파일명 암호화, 웹사이트와 파일 서버 경로 분리, 실행 속성 제거&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;신뢰되지 않는 URL 주소로 연결
    &lt;ul&gt;
      &lt;li&gt;방문자를 피싱 사이트로 유도하는 보안 약점&lt;/li&gt;
      &lt;li&gt;외부사이트의 주소를 화이트 리스트로 관리하여 방지&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-보안-기능--b&quot;&gt;4. 보안 기능 – B&lt;/h2&gt;

&lt;h3 id=&quot;--보안-기능의-개요&quot;&gt;- 보안 기능의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W 개발의 구현 단계에서 코딩하는 기능인 인증, 접근제어, 기밀성, 암호화 등을 올바르게 구현하기 위한 보안 점검 항목&lt;/li&gt;
  &lt;li&gt;서비스 환경이나 취급 데이터 맞게 처리될 수 있도록 구현&lt;/li&gt;
  &lt;li&gt;데이터에 접근하려는 사용자별로 중요도를 구분. 차별화된 인증 방안을 적용&lt;/li&gt;
  &lt;li&gt;개별적으로 접근 권한을 부여하여 인가되지 않은 기능과 데이터로의 접근 차단&lt;/li&gt;
  &lt;li&gt;안전한 암호화 기술을 적용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--보안-기능의-보안-약점&quot;&gt;- 보안 기능의 보안 약점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;적절한 인증 없이 중요기능 허용
    &lt;ul&gt;
      &lt;li&gt;보안검사를 우회하여 인증과정 없이 중요한 정보 또는 기능에 접근 및 변경이 가능&lt;/li&gt;
      &lt;li&gt;중요 기능을 수행하는 페이지에는 재인증 기능을 수행하도록 하여 방지&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;부적절한 인가
    &lt;ul&gt;
      &lt;li&gt;접근제어 기능이 없는 실행경로를 통해 정보 또는 권한을 탈취할 수 있음&lt;/li&gt;
      &lt;li&gt;모든 실행경로에 대해 접근제어 검사를 수행. 반드시 필요한 접근 권한만을 부여&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;중요한 자원에 대한 잘못된 권한 설정
    &lt;ul&gt;
      &lt;li&gt;권한 설정이 잘못된 자원에 접근하여 해당 자원을 임의로 사용할 수 있음&lt;/li&gt;
      &lt;li&gt;S/W 관리자만 자원을 읽고 쓸 수 있도록 설정&lt;/li&gt;
      &lt;li&gt;인가되지 않은 사용자의 중요 자원에 대한 접근 여부를 검사&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;취약한 암호화 알고리즘 사용
    &lt;ul&gt;
      &lt;li&gt;암호화된 환경설정 파일을 해독하여 비밀번호 등의 중요정보 탈취&lt;/li&gt;
      &lt;li&gt;안전한 암호화 알고리즘 이용&lt;/li&gt;
      &lt;li&gt;IT 보안인증사무국이 안정성을 확인한 암호모듈을 이용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;중요정보 평문 저장 및 전송
    &lt;ul&gt;
      &lt;li&gt;암호화되지 않은 평문 데이터를 탈취하여 중요 정보 획득&lt;/li&gt;
      &lt;li&gt;반드시 암호화 과정을 거치도록 하고 HTTPS, SSL 같은 보안 채널 이용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;하드코드 된 비밀번호
    &lt;ul&gt;
      &lt;li&gt;소스코드 유출 시 내부에 하드코드된 패스워드를 이용하여 관리자 권한 탈취&lt;/li&gt;
      &lt;li&gt;패스워드는 암호화하여 별도의 파일에 저장&lt;/li&gt;
      &lt;li&gt;디폴트 패스워드나 디폴트 키의 사용을 피함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-에러-처리--b&quot;&gt;5. 에러 처리 – B&lt;/h2&gt;

&lt;h3 id=&quot;--에러처리의-개요&quot;&gt;- 에러처리의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;오류들을 사전에 정의하여 오류로 인해 발생할 수 있는 문제들을 예방&lt;/li&gt;
  &lt;li&gt;프로그래밍 언어의 예외처리 구문을 통해 오류에 대한 사항 정의&lt;/li&gt;
  &lt;li&gt;예외처리 구문으로 처리하지 못한 오류들은 문제 발생시킬 수 있음&lt;/li&gt;
  &lt;li&gt;오류 메시지를 통한 정보 노출, 오류 상황 대응 부재, 부적절한 예외처리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--오류-메시지를-통한-정보-노출&quot;&gt;- 오류 메시지를 통한 정보 노출&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;오류 발생으로 중요 정보를 S/W가 메시지로 외부에 노출하는 보안 약점&lt;/li&gt;
  &lt;li&gt;예외처리 구문에 예외의 이름이나 스택 트레이스를 출력하도록 코딩한 경우 해커는 소프트웨어의 내부구조를 쉽게 파악할 수 있음&lt;/li&gt;
  &lt;li&gt;오류를 내부에서 처리되도록 하거나 메시지를 출력할 경우 최소한의 정보 또는 사전에 준비된 메시지만 출력되도록 함으로써 방지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--오류-상황-대응-부재&quot;&gt;- 오류 상황 대응 부재&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W 개발 중 예외처리를 하지 않았거나 미비로 인해 발생하는 보안 약점&lt;/li&gt;
  &lt;li&gt;실행이 중단되거나 의도를 벗어난 동작이 유도될 수 있음&lt;/li&gt;
  &lt;li&gt;예외처리 구문을 작성하고, 제어문을 활용하여 오류가 악용되지 않도록 코딩하여 방지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--부적절한-예외처리&quot;&gt;- 부적절한 예외처리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;오류를 세분화하지 않고 한번에 처리하거나, 누락된 예외가 존재할 때 발생하는 보안 약점&lt;/li&gt;
  &lt;li&gt;모든 오류들을 광범위한 예외처리 구문으로 정의하면 예기치 않은 문제 발생&lt;/li&gt;
  &lt;li&gt;예상했던 결과와 다른 값 반환, 예외로 처리되지 않은 경우 잘못된 값으로 문제 발생&lt;/li&gt;
  &lt;li&gt;모든 함수의 반환값이 의도대로 출력되는지 확인하고, 세분화된 예외처리를 수행하여 방지&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-코드-오류--b&quot;&gt;6. 코드 오류 – B&lt;/h2&gt;

&lt;h3 id=&quot;--코드-오류의-개요&quot;&gt;- 코드 오류의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개발자들이 코딩 중 실수하기 쉬운 형변환, 자원 반환 등의 오류를 예방&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--널-포인터-역참조&quot;&gt;- 널 포인터 역참조&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;널 포인터가 가리키는 메모리에 어떠한 값을 저장할 때 발생하는 보안 약점&lt;/li&gt;
  &lt;li&gt;함수들이 오류 발생 시 널 값을 반환하는데, 이 반환값을 포인터로 참조하는 경우 발생&lt;/li&gt;
  &lt;li&gt;널 포인터는 메모리의 첫 주소를 가리키며, 이를 참조할 경우 비정상적으로 종료될 수 있음&lt;/li&gt;
  &lt;li&gt;공격자가 널 포인터 역참조로 발생하는 예외 상황을 악용할 수 있음&lt;/li&gt;
  &lt;li&gt;널이 될 수 있는 포인터를 이용하기 전에 널 값을 갖고 있는지 검사하여 방지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--부적절한-자원-해제&quot;&gt;- 부적절한 자원 해제&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자원을 반환하는 코드를 누락하거나 프로그램 오류로 할당된 자원을 반환하지 못했을 때 발생하는 보안 약점&lt;/li&gt;
  &lt;li&gt;힙 메모리, 소켓 등의 유한한 시스템 자원이 계속 점유하고 있으면 자원 부족으로 인해 새로운 입력을 처리하지 못 할 수 있음&lt;/li&gt;
  &lt;li&gt;자원 반환 코드가 누락되었는지 확인&lt;/li&gt;
  &lt;li&gt;오류로 인해 함수가 중간에 종료되었을 때 예외처리에 관계없이 자원이 반환되도록 코딩&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--해제된-자원-사용&quot;&gt;- 해제된 자원 사용&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이미 사용이 종료되어 반환된 메모리를 참조하는 경우 발생&lt;/li&gt;
  &lt;li&gt;반환된 메모리를 참조하는 경우 예상하지 못한 값 또는 코드를 수행하게 되어 의도하지 않은 결과가 발생할 수 있음&lt;/li&gt;
  &lt;li&gt;반환된 메모리에 접근할 수 없도록 주소를 저장하고 있는 포인터를 초기화함으로써 방지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--초기화되지-않은-변수-사용&quot;&gt;- 초기화되지 않은 변수 사용&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;변수 선언 후 값이 부여되지 않은 변수를 사용할 때 발생하는 보안 약점&lt;/li&gt;
  &lt;li&gt;변수가 선언되어 메모리가 할당되면 해당 메모리에 이전에 사용하던 내용이 계속 남아있어 변수가 외부에 노출되는 경우 중요정보가 악용될 수 있음&lt;/li&gt;
  &lt;li&gt;변수 선언 시 할당된 메모리를 초기화함으로써 방지&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-암호-알고리즘--a&quot;&gt;7. 암호 알고리즘 – A&lt;/h2&gt;

&lt;h3 id=&quot;--암호-알고리즘의-개요&quot;&gt;- 암호 알고리즘의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;중요정보를 보호하기 위해 평문을 암호화된 문장으로 만드는 절차 또는 방법&lt;/li&gt;
  &lt;li&gt;해시를 사용하는 단방향 암호화 방식, 개인키 및 공개키로 분류되는 양방향 암호화 방식
    &lt;blockquote&gt;
      &lt;p&gt;암호화 방식&lt;/p&gt;
      &lt;blockquote&gt;
        &lt;p&gt;양방향&lt;br /&gt;&lt;/p&gt;
        &lt;blockquote&gt;
          &lt;p&gt;개인키&lt;br /&gt;&lt;/p&gt;
          &lt;blockquote&gt;
            &lt;p&gt;Stream 방식&lt;br /&gt;
Block 방식&lt;br /&gt;&lt;/p&gt;
          &lt;/blockquote&gt;
        &lt;/blockquote&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;암호화 방식&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;양방향&lt;br /&gt;&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;공개키&lt;br /&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;암호화 방식&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;단방향&lt;br /&gt;&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;HASH&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;</content><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 5과목 3장</summary></entry><entry><title type="html">[정보처리기사 필기] 5-2. IT프로젝트 정보시스템 구축 관리</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp19/" rel="alternate" type="text/html" title="[정보처리기사 필기] 5-2. IT프로젝트 정보시스템 구축 관리" /><published>2021-08-03T23:00:00+09:00</published><updated>2021-08-04T08:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp19</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp19/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 일부 제외&lt;/p&gt;

&lt;h2 id=&quot;1-네트워크-관련-신기술--a&quot;&gt;1. 네트워크 관련 신기술 – A&lt;/h2&gt;

&lt;h3 id=&quot;--iotinternet-of-things-사물-인터넷&quot;&gt;- IoT(Internet of Things, 사물 인터넷)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다양한 사물들을 인터넷으로 서로 연결&lt;/li&gt;
  &lt;li&gt;환경이나 사물 그 자체가 지능화&lt;/li&gt;
  &lt;li&gt;사람과 사물, 사물과 사물 간에 지능 통신하는 M2M의 개념을 인터넷으로 확장&lt;/li&gt;
  &lt;li&gt;개방형 아키텍처를 필요로 함&lt;/li&gt;
  &lt;li&gt;정보 보안 기술의 적용이 중요&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--m2mmachine-to-machine-사물-통신&quot;&gt;- M2M(Machine to Machine, 사물 통신)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;무선 통신을 이용한 기계와 기계 사이의 통신&lt;/li&gt;
  &lt;li&gt;무선으로 통합하여 상호 작용하는 통신&lt;/li&gt;
  &lt;li&gt;부호 분할 다중 접속, GSM, 무선 데이터 통신 등 다양한 무선 통신망 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--모바일-컴퓨팅mobile-computing&quot;&gt;- 모바일 컴퓨팅(Mobile Computing)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;휴대형 기기로 이동하면서 자유롭게 네트워크에 접속하여 업무 처리&lt;/li&gt;
  &lt;li&gt;휴대기기는 소형 대용량화와 저전력화 진행중&lt;/li&gt;
  &lt;li&gt;네트워크 기술은 무선으로 고속/대용량의 정보를 처리할 수 있는 기술 상용화&lt;/li&gt;
  &lt;li&gt;휴대 기기와 네트워크 기술의 진화로도 가능&lt;/li&gt;
  &lt;li&gt;비즈니스 효율을 극대화하여 경쟁력을 확보&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--클라우드-컴퓨팅cloud-computing&quot;&gt;- 클라우드 컴퓨팅(Cloud Computing)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;컴퓨팅 자원을 중앙 컴퓨터에 두고 인터넷 기능을 갖는 단말기로 언제 어디서나 인터넷을 통해 컴퓨터 작업을 수행할 수 있는 환경&lt;/li&gt;
  &lt;li&gt;중앙 컴퓨터는 가상화 기술로 통합한 대형 데이터 센터로 각종 S/W, 데이터, 보안 솔루션 기능 등 컴퓨팅 자원을 보유&lt;/li&gt;
  &lt;li&gt;사용자는 통신 포트만 연결하면 업무 수행 가능&lt;/li&gt;
  &lt;li&gt;그리드 컴퓨팅과 다른점은 그리드 컴퓨팅이 수많은 컴퓨터를 하나의 컴퓨터처럼 묶어 분산 처리하는 방식으로 기상 예측이나 우주 문제 등 대규모 연산에 사용된다면, 클라우드 컴퓨팅은 중앙의 대형 데이터 센터의 컴퓨팅 자원을 필요한 이들에게 필요한 순간에 빌려주는 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--모바일-클라우드-컴퓨팅mcc-mobild-cloud-computing&quot;&gt;- 모바일 클라우드 컴퓨팅(MCC; Mobild Cloud Computing)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;클라우드 서비스를 이용하여 소비자와 소비자의 파트너가 모바일 기기로 클라우드 컴퓨팅 인프라를 구성하여 여러 가지 정보와 자원을 공유하는 ICT 기술&lt;/li&gt;
  &lt;li&gt;모바일 기기의 기종이나 OS 등과 같은 환경에 구애받지 않고 클라우드의 ICT 자원들을 제약 없이 이용하는 것이 가능&lt;/li&gt;
  &lt;li&gt;모바일의 이동성과 클라우드 컴퓨팅의 경제성 결합&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인터클라우드-컴퓨팅inter-cloud-computing&quot;&gt;- 인터클라우드 컴퓨팅(Inter-Cloud Computing)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;각기 다른 클라우드 서비스를 연동하거나 컴퓨팅 자원의 동적 할당이 가능하도록 여러 클라우드 서비스 제공자들이 제공하는 클라우드 서비스나 자원을 연결하는 기술&lt;/li&gt;
  &lt;li&gt;대등 접속&lt;/li&gt;
  &lt;li&gt;연합&lt;/li&gt;
  &lt;li&gt;중개&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--메시-네트워크mesh-network&quot;&gt;- 메시 네트워크(Mesh Network)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;대규모 디바이스의 네트워크 생성에 최적화&lt;/li&gt;
  &lt;li&gt;무선 랜의 한계를 극복하기 위해 라우터들을 기지국으로 활용&lt;/li&gt;
  &lt;li&gt;모든 구간을 동일한 무선망처럼 구성&lt;/li&gt;
  &lt;li&gt;사용자는 와이파이에 접속하는 것처럼 안정적인 네트워크를 사용할 수 있음&lt;/li&gt;
  &lt;li&gt;디바이스가 유기적으로 연결되어 있어야 하는 건물 자동화, 센서 네트워크 등에 적합&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--와이선wi-sun&quot;&gt;- 와이선(Wi-SUN)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;장거리 무선 통신을 필요로 하는 사물 인터넷 서비스를 위한 저전력 장거리 통신기술&lt;/li&gt;
  &lt;li&gt;짧은 시간 동안 데이터 전송이 빈번한 검침 분야에 유용&lt;/li&gt;
  &lt;li&gt;낮은 지연 속도, 메시 네트워크 기반 확장성, 펌웨어 업그레이드 용이성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ndnnamed-data-networking&quot;&gt;- NDN(Named Data Networking)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;콘텐츠 자체의 정보와 라우터 기능만으로 데이터 전송을 수행하는 기술&lt;/li&gt;
  &lt;li&gt;콘텐츠 중심 네트워킹과 같은 개념&lt;/li&gt;
  &lt;li&gt;콘텐츠에 담겨 있는 정보와 라우터 기능만으로 목적지를 확정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ngnnext-generation-network-차세대-통신망&quot;&gt;- NGN(Next Generation Network, 차세대 통신망)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;유선망 기반의 차세대 통신망&lt;/li&gt;
  &lt;li&gt;이동 사용자를 목표로 함&lt;/li&gt;
  &lt;li&gt;이동통신에서 제공하는 완전한 이동성 제공을 목표로 개발&lt;/li&gt;
  &lt;li&gt;인터넷 프로토콜을 기반으로 구축&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--sdnsoftware-defined-networking&quot;&gt;- SDN(Software Defined Networking)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;네트워크를 컴퓨터처럼 모델링하여 여러 사용자가 각각의 S/W로 네트워킹을 가상화하여 제어하고 관리하는 네트워크&lt;/li&gt;
  &lt;li&gt;네트워크 비용 및 복잡성을 해결할 수 있는 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--nfcnear-field-communication-근거리-무선-통신&quot;&gt;- NFC(Near Field Communication, 근거리 무선 통신)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;고주파를 이용한 근거리 무선 통신 기술&lt;/li&gt;
  &lt;li&gt;RFID 기술의 일종&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--uwbultra-wideband-초광대역&quot;&gt;- UWB(Ultra WideBand, 초광대역)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;짧은 거리에서 많은 양의 디지털 데이터를 낮은 전력으로 전송하기 위한 무선 기술&lt;/li&gt;
  &lt;li&gt;블루투스와 비교되는 기술&lt;/li&gt;
  &lt;li&gt;땅 속이나 벽면 뒤로도 전송 가능&lt;/li&gt;
  &lt;li&gt;전파 탐지기 기능으로 인명 구조를 할 수 있는 등 응용 범위 넓음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--피코넷piconet&quot;&gt;- 피코넷(PICONET)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;여러 개의 독립된 통신장치가 블루투스 기술이나 UWB 통신 기술을 사용하여 통신망을 형성하는 무선 네트워크 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--wbanwireless-body-area-network&quot;&gt;- WBAN(Wireless Body Area Network)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;웨어러블 또는 몸에 심는 형태의 센서나 기기를 무선으로 연결하는 개인 영역 네트워킹 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--gisgeographic-information-system-지리-정보-시스템&quot;&gt;- GIS(Geographic Information System, 지리 정보 시스템)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;위성을 이용해 모든 사물의 위치 정보를 제공해 주는 것&lt;/li&gt;
  &lt;li&gt;공간 의사 결정에 도움&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--usnubiquitous-sensor-network&quot;&gt;- USN(Ubiquitous Sensor Network)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;센서로 수집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크&lt;/li&gt;
  &lt;li&gt;모든 것에 RFID 태그를 부착&lt;/li&gt;
  &lt;li&gt;사물의 인식 정보는 물론 주변의 환경정보까지 탐지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--sonself-organizing-network&quot;&gt;- SON(Self Organizing Network)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;주변 상황에 맞추어 스스로 망을 구성하는 네트워크&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--애드-혹-네트워크ad-hoc-network&quot;&gt;- 애드 혹 네트워크(Ad-hoc Network)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;별도의 고정된 유선망을 구축할 수 없는 장소에서 모바일 호스트만을 이용해 구성한 네트워크&lt;/li&gt;
  &lt;li&gt;망을 구성한 후 단기간 사용되는 경우나 유선망을 구성하기 어려운 경우에 적합&lt;/li&gt;
  &lt;li&gt;빠른 망 구성과 저렴한 비용이 장점&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--네트워크-슬라이승network-slicing&quot;&gt;- 네트워크 슬라이승(Network Slicing)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;물리적인 코어 네트워크 인프라를 독립된 다수의 가상 네트워크로 분리하여 각각의 네트워크를 통해 다양한 고객 맞춤형 서비스를 제공하는 것을 목적으로 하는 네트워크&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--저전력-블루투스-기술ble-bluetooth-low-energy&quot;&gt;- 저전력 블루투스 기술(BLE; Bluetooth Low Energy)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;연결되지 않은 대기 상태에서는 절전 모드를 유지하는 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--지능형-초연결망&quot;&gt;- 지능형 초연결망&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;스마트 시티 등 급격하게 증가하는 데이터 트래픽을 효과적으로 수용하기 위해 시행되는 정부 주관 사업&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-네트워크-구축--a&quot;&gt;2. 네트워크 구축 – A&lt;/h2&gt;

&lt;h3 id=&quot;--네트워크-설치-구조&quot;&gt;- 네트워크 설치 구조&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정보를 전달하기 위해서 통신 규약에 의해 연결한 통신 설비의 집합&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--성형star-중앙-집중형&quot;&gt;- 성형(Star, 중앙 집중형)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;중앙 컴퓨터가 있고, 이를 중심으로 단말장치들이 연결되는 중앙 집중식 네트워크&lt;/li&gt;
  &lt;li&gt;포인트 투 포인트 방식&lt;/li&gt;
  &lt;li&gt;각 단말장치들은 중앙 컴퓨터를 통해 데이터를 교환&lt;/li&gt;
  &lt;li&gt;단말장치의 추가/제거가 쉬움&lt;/li&gt;
  &lt;li&gt;중앙 컴퓨터가 고장나면 전체 통신망의 기능이 정지&lt;/li&gt;
  &lt;li&gt;교환 노드의 수가 가장 적음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--링형ring-루프형&quot;&gt;- 링형(Ring, 루프형)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;컴퓨터와 단말장치들을 서로 이웃하는 것끼리 포인트 투 포인트 방식으로 연결&lt;/li&gt;
  &lt;li&gt;분산 및 집중 제어 모두 가능&lt;/li&gt;
  &lt;li&gt;단말장치의 추가/제거 및 기밀 보호가 어려움&lt;/li&gt;
  &lt;li&gt;전송 지연 발생 가능&lt;/li&gt;
  &lt;li&gt;중계기의 수가 많아짐&lt;/li&gt;
  &lt;li&gt;데이터는 단방향 혹은 양방향으로 전송 가능&lt;/li&gt;
  &lt;li&gt;단방향의 경우 고장나면 전체 통신망에 영향&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--버스형bus&quot;&gt;- 버스형(Bus)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;한 개의 통신 회선에 여러 대의 단말장치가 연결&lt;/li&gt;
  &lt;li&gt;물리적 구조가 간단, 단말장치의 추가/제거 용이&lt;/li&gt;
  &lt;li&gt;고장나더라도 통신망 전체에 영향을 주지 않아 신뢰성을 높일 수 있음&lt;/li&gt;
  &lt;li&gt;기밀 보장이 어렵고, 통신 회선 길이에 제한&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--계층형tree-분산형&quot;&gt;- 계층형(Tree, 분산형)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;중앙 컴퓨터와 일정 지역의 단말장치까지는 하나의 통신 회선으로 연결&lt;/li&gt;
  &lt;li&gt;이웃하는 단말장치는 일정 지역 내에 설치된 중간 단말장치로부터 다시 연결&lt;/li&gt;
  &lt;li&gt;분산 처리 시스템을 구성하는 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--망형mesh&quot;&gt;- 망형(Mesh)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모든 지점의 컴퓨터와 단말장치를 서로 연결한 형태. 노드의 연결성 높음&lt;/li&gt;
  &lt;li&gt;많은 단말장치로부터 많은 양의 통신을 필요로 하는 경우에 유리&lt;/li&gt;
  &lt;li&gt;공중 데이터 통신망에서 사용. 통신 회선의 총 경로가 가장 김&lt;/li&gt;
  &lt;li&gt;통신 회선 장애 시 다른 경로를 통하여 데이터 전송 가능&lt;/li&gt;
  &lt;li&gt;n(n-1)/2, n-1&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--네트워크-분류&quot;&gt;- 네트워크 분류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;근거리 통신망(LAN)
    &lt;ul&gt;
      &lt;li&gt;가까운 거리&lt;/li&gt;
      &lt;li&gt;자원 공유를 목적으로 사용&lt;/li&gt;
      &lt;li&gt;데이터 전송 속도가 빠르고, 에러 발생률 낮음&lt;/li&gt;
      &lt;li&gt;버스형, 링형 구조 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;광대역 통신망(WAN)
    &lt;ul&gt;
      &lt;li&gt;멀리 떨어진 사이트들을 연결하여 구성&lt;/li&gt;
      &lt;li&gt;통신 속도가 느리고, 에러 발생률 높음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-스위치--b&quot;&gt;3. 스위치 – B&lt;/h2&gt;

&lt;h3 id=&quot;--스위치-분류&quot;&gt;- 스위치 분류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;브리지와 같이 LAN과 LAN을 연결하여 훨씬 더 큰 LAN을 만드는 장치&lt;/li&gt;
  &lt;li&gt;L2 스위치
    &lt;ul&gt;
      &lt;li&gt;OSI 2계층에 속하는 장비&lt;/li&gt;
      &lt;li&gt;MAC 주소를 기반으로 프레임 전송&lt;/li&gt;
      &lt;li&gt;동일 네트워크 간의 연결만 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;L3 스위치
    &lt;ul&gt;
      &lt;li&gt;OSI 3계층에 속하는 장비&lt;/li&gt;
      &lt;li&gt;L2 + 라우터 기능. IP 주소를 기반으로 패킷 전송&lt;/li&gt;
      &lt;li&gt;서로 다른 네트워크 간의 연결 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;L4 스위치
    &lt;ul&gt;
      &lt;li&gt;OSI 4계층에 속하는 장비&lt;/li&gt;
      &lt;li&gt;L3 + 로드밸런서&lt;/li&gt;
      &lt;li&gt;IP주소 및 TCP/UDP를 기반으로 사용자들의 요구를 서버의 부하가 적은 곳에 배분&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;L7 스위치
    &lt;ul&gt;
      &lt;li&gt;OSI 7계층에 속하는 장비&lt;/li&gt;
      &lt;li&gt;IP주소, TCP/UDP 포트 정보에 패킷 내용까지 참조하여 세밀하게 로드밸런싱&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--스위칭-방식&quot;&gt;- 스위칭 방식&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Store and Forwarding : 데이터를 모두 받은 후 스위칭&lt;/li&gt;
  &lt;li&gt;Cut-through : 데이터의 목적지 주소만을 확인한 후 바로 스위칭&lt;/li&gt;
  &lt;li&gt;Fragment Free : 위 두개 장점 결합&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--백본-스위치&quot;&gt;- 백본 스위치&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;네트워크들을 연결할 때 중추적 역할을 하는 네트워크를 백본이라고 함&lt;/li&gt;
  &lt;li&gt;백본에서 스위칭 역할을 하는 장비를 백본 스위치라고 함&lt;/li&gt;
  &lt;li&gt;모든 패킷이 지나가는 네트워크의 중심에 배치&lt;/li&gt;
  &lt;li&gt;대규모 트래픽을 처리하려면 고성능의 백본 스위치를 사용해야 함&lt;/li&gt;
  &lt;li&gt;L3 스위치가 백본 스위치의 역할을 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--hierarchical-3-layer-모델&quot;&gt;- Hierarchical 3 Layer 모델&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;액세스 계층
    &lt;ul&gt;
      &lt;li&gt;네트워크에 접속할 때 최초로 연결되는 지점&lt;/li&gt;
      &lt;li&gt;통신을 집약해서 디스트리뷰션 계층으로 전송&lt;/li&gt;
      &lt;li&gt;장비 성능은 낮아도 되지만 포트수는 사용자수 만큼 있어야 함&lt;/li&gt;
      &lt;li&gt;L2 스위치 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;디스트리뷰션 계층
    &lt;ul&gt;
      &lt;li&gt;액세스 계층의 장치들이 연결되는 지점&lt;/li&gt;
      &lt;li&gt;오는 통신을 집약해서 코어 계층으로 전송&lt;/li&gt;
      &lt;li&gt;LAN 간에 라우팅 기능 수행&lt;/li&gt;
      &lt;li&gt;라우터, L3 스위치 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;코어 계층
    &lt;ul&gt;
      &lt;li&gt;디스트리뷰션 계층에서 오는 통신을 집약해 인터넷에 연결&lt;/li&gt;
      &lt;li&gt;백본 계층이라고도 함&lt;/li&gt;
      &lt;li&gt;전자우편, 인터넷 접속, 화상 회의 등의 기능 수행&lt;/li&gt;
      &lt;li&gt;백본 스위치 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-경로-제어--트래픽-제어--b&quot;&gt;4. 경로 제어 / 트래픽 제어 – B&lt;/h2&gt;

&lt;h3 id=&quot;--경로-제어의-개요&quot;&gt;- 경로 제어의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;최적 패킷 교환 경로를 결정하는 기능&lt;/li&gt;
  &lt;li&gt;한 경로에 데이터의 양이 집중하는 것을 피하면서, 최저의 비용으로 최단 시간에 송신&lt;/li&gt;
  &lt;li&gt;경로 제어표를 참조. 라우터에 의해 수행&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--경로-제어-프로토콜&quot;&gt;- 경로 제어 프로토콜&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;효율적인 경로 제어를 위해 네트워크 정보를 생성, 교환, 제어&lt;/li&gt;
  &lt;li&gt;IGP
    &lt;ul&gt;
      &lt;li&gt;하나의 자율 시스템 내의 라우팅에 사용&lt;/li&gt;
      &lt;li&gt;RIP
        &lt;ul&gt;
          &lt;li&gt;가장 널리 사용됨&lt;/li&gt;
          &lt;li&gt;소규모 동종의 네트워크 내에서 효율적&lt;/li&gt;
          &lt;li&gt;대규모 네트워크에서는 사용할 수 없음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;OSPF
        &lt;ul&gt;
          &lt;li&gt;대규모 네트워크에서 많이 사용&lt;/li&gt;
          &lt;li&gt;라우팅 정보에 변화가 생길 경우, 변화된 정보만 네트워크 모든 라우터에 알림&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;EGP
    &lt;ul&gt;
      &lt;li&gt;자율 시스템 간의 라우팅, 즉 게이트웨이 간의 라우팅에 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;BGP
    &lt;ul&gt;
      &lt;li&gt;자율 시스템 간의 라우팅 프로토콜&lt;/li&gt;
      &lt;li&gt;EGP의 단점 보완&lt;/li&gt;
      &lt;li&gt;초기에는 전체 경로 제어표 교환, 이후에는 변화된 정보만 교환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--트래픽-제어의-개요&quot;&gt;- 트래픽 제어의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;전송되는 패킷의 흐름 또는 그 양을 조절하는 기능&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-흐름-제어&quot;&gt;@ 흐름 제어&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;송수신 측 사이에 전송되는 패킷의 양이나 속도를 규제하는 기능&lt;/li&gt;
  &lt;li&gt;수신 측 버퍼의 오버플로를 방지하기 위한 기능&lt;/li&gt;
  &lt;li&gt;정지-대기
    &lt;ul&gt;
      &lt;li&gt;수신 측의 확인 신호(ACK)를 받은 후에 다음 패킷 전송&lt;/li&gt;
      &lt;li&gt;한 번에 하나의 패킷만을 전송&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;슬라이딩 윈도우
    &lt;ul&gt;
      &lt;li&gt;수신 통지를 이용하여 송신 데이터의 양을 조절&lt;/li&gt;
      &lt;li&gt;미리 정해진 패킷의 수만큼 연속적으로 전송&lt;/li&gt;
      &lt;li&gt;여러 개의 패킷을 전송할 수 있어 전송 효율이 좋음&lt;/li&gt;
      &lt;li&gt;긍정 ACK이 전달된 경우 윈도우 크기 증가&lt;/li&gt;
      &lt;li&gt;부정 ACK이 전달된 경우 윈도우 크기 감소&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-폭주혼잡-제어&quot;&gt;@ 폭주(혼잡) 제어&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;네트워크 내의 패킷 수를 조절하여 네트워크 오버플로 방지&lt;/li&gt;
  &lt;li&gt;느린 시작
    &lt;ul&gt;
      &lt;li&gt;윈도우의 크기를 2배씩 증가시켜 초기에는 느리지만 갈수록 빨라짐&lt;/li&gt;
      &lt;li&gt;전송 데이터의 크기가 임계 값에 도덜하면 혼잡 회피 단계로 넘어감&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;혼잡 회피
    &lt;ul&gt;
      &lt;li&gt;노린 시작의 지수적 증가가 임계값에 도달되면 혼잡으로 간주&lt;/li&gt;
      &lt;li&gt;회피를 위해 윈도우의 크기를 1씩 증가시켜 혼잡을 예방&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-교착상태-방지&quot;&gt;@ 교착상태 방지&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;교환기 내에 패킷들을 축적하는 기억 공간이 꽉 차 있을 때 다음 패킷들이 기억 공간에 들어가기 위해 무한정 기다리는 현상&lt;/li&gt;
  &lt;li&gt;패킷이 같은 목적지를 갖지 않도록 할당&lt;/li&gt;
  &lt;li&gt;교착상태 발생 시에는 교착상태에 있는 한 단말장치를 선택하여 패킷 버퍼 폐기&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-sw-관련-신기술--a&quot;&gt;5. SW 관련 신기술 – A&lt;/h2&gt;

&lt;h3 id=&quot;--인공-지능ai&quot;&gt;- 인공 지능(AI)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;컴퓨터 스스로 인간지능적인 작업을 수행하는 시스템&lt;/li&gt;
  &lt;li&gt;유연한 문제 해결을 지원&lt;/li&gt;
  &lt;li&gt;개발 언어로 리스프, 프롤로그 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--뉴럴링크neuralink&quot;&gt;- 뉴럴링크(Neuralink)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사람의 뇌와 컴퓨터를 결합하는 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--딥-러닝&quot;&gt;- 딥 러닝&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;인간의 두뇌를 모델로 만들어진 인공 신경망&lt;/li&gt;
  &lt;li&gt;기계 학습 기술&lt;/li&gt;
  &lt;li&gt;스스로 필요한 데이터를 수집, 분석하여 고속으로 처리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--전문가-시스템expert-system&quot;&gt;- 전문가 시스템(Expert System)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;특정 분야의 전문가가 수행하는 고도의 업무를 지원하기 위한 응용 프로그램&lt;/li&gt;
  &lt;li&gt;지식 베이스&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--증강현실ar&quot;&gt;- 증강현실(AR)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;실제 촬영한 화면에 가상의 정보를 부가하여 보여주는 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--블록체인&quot;&gt;- 블록체인&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;P2P 네트워크를 이용하여 금융 거래 정보를 참여자의 디지털 장비에 분산 저장&lt;/li&gt;
  &lt;li&gt;보안 및 거래 안정성 향상&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--분산-원장-기술dlt-distributed-ledger-technology&quot;&gt;- 분산 원장 기술(DLT; Distributed Ledger Technology)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;중앙 데이터 저장소가 존재하지 않고 P2P 망내의 참여자들에게 모든 거래 목록이 분산 저장되어 거래가 발생할 때마다 지속적으로 갱신&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--해시hash&quot;&gt;- 해시(Hash)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;임의의 길이의 입력 데이터나 메시지를 고정된 길이의 값이나 키로 변환&lt;/li&gt;
  &lt;li&gt;데이터 무결성 검증 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--양자-암호키-분배qkd-quantum-key-distribution&quot;&gt;- 양자 암호키 분배(QKD; Quantum Key Distribution)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;양자 통신을 위해 비밀키를 분배하여 관리하는 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--프라이버시-강화-기술pet&quot;&gt;- 프라이버시 강화 기술(PET)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개인정보 위험 관리 기술&lt;/li&gt;
  &lt;li&gt;다양한 사용자 프라이버시 보호 기술을 통칭&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--디지털-저작권-관리drm&quot;&gt;- 디지털 저작권 관리(DRM)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터의 저작권 보호를 위해 데이터의 안전한 배포를 활성화하거나 불법 배포 방지&lt;/li&gt;
  &lt;li&gt;디지털 워터마크 사용 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--공통-평가-기준cc-common-criteria&quot;&gt;- 공통 평가 기준(CC; Common Criteria)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정보 보호 제품 평가 기준&lt;/li&gt;
  &lt;li&gt;정보화 제품의 정보보호 기능과 이에 대한 사용 환경 등급을 정한 기준&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--개인정보-영향평가-제도pia-privacy-impact-assessment&quot;&gt;- 개인정보 영향평가 제도(PIA; Privacy Impact Assessment)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개인정보를 활용하는 새로운 정보시스템의 도입&lt;/li&gt;
  &lt;li&gt;기존 정보시스템의 중요한 변경 시 시스템의 구축, 운영이 기업의 고객은 물론 국민의 사생활에 미칠 영향에 대해 미리 조사, 분석, 평가하는 제도&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--그레이웨어grayware&quot;&gt;- 그레이웨어(Grayware)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자 입장에서는 유용할 수도 있고 악의적일 수도 있는 S/W&lt;/li&gt;
  &lt;li&gt;애드웨어, 트랙웨어, 기타 악성 코드나 악성 공유웨어&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--매시업meshup&quot;&gt;- 매시업(Meshup)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;웹에서 제공하는 정보 및 서비스를 이용하여 새로운 S/W나 서비스, DB 만드는 기술&lt;/li&gt;
  &lt;li&gt;다수의 정보원이 제공하는 콘텐츠를 조합하여 하나의 서비스로 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--리치-인터넷-애플리케이션ria&quot;&gt;- 리치 인터넷 애플리케이션(RIA)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기존 HTML 보다 역동적인 웹페이지를 제공하는 플래시 웹페이지 제작 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--시맨틱-웹semantic-web&quot;&gt;- 시맨틱 웹(Semantic Web)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;컴퓨터가 사람을 대신하여 정보를 읽고 이해하고 가공하여 새로운 정보를 만들어 낼 수 있도록 이해하기 쉬운 의미를 가진 차세대 지능형 웹&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--증발품vaporware&quot;&gt;- 증발품(Vaporware)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;판매 계획 또는 배포 계획은 발표되었으나 실제로 판매, 배포되지 않는 S/W&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--오픈-그리드-서비스-아키텍처ogsa&quot;&gt;- 오픈 그리드 서비스 아키텍처(OGSA)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;애플리케이션 공유를 위한 웹 서비스를 그리드 상에서 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--서비스-지향-아키텍처soa&quot;&gt;- 서비스 지향 아키텍처(SOA)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정보시스템을 공유와 재사용이 가능한 서비스 단위나 컴포넌트 중심으로 구축하는 정보기술 아키텍처&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--서비스형-소프트웨어saas&quot;&gt;- 서비스형 소프트웨어(SaaS)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자가 필요로 하는 서비스만 이용할 수 있도록 한 S/W&lt;/li&gt;
  &lt;li&gt;S/W 유통 방식의 근본적인 변화를 설명하는 개념&lt;/li&gt;
  &lt;li&gt;하나의 플랫폼을 이용해 다수의 고객에게 S/W 서비스를 제공&lt;/li&gt;
  &lt;li&gt;이용한 만큼 돈을 지급&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--소프트웨어-에스크로escrow&quot;&gt;- 소프트웨어 에스크로(Escrow)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W를 안정적으로 사용 및 유지보수 받을 수 있도록 소스 프로그램과 기술 정보 등을 제 3의 기관에 보관하는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--복잡-이벤트-처리cep-complex-event-processing&quot;&gt;- 복잡 이벤트 처리(CEP; Complex Event Processing)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;실시간으로 발생하는 의미 있는 사건만을 추출할 수 있도록 사건 발생 조건을 정의하는 데이터 처리 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--디지털-트윈&quot;&gt;- 디지털 트윈&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;현실속의 사물을 S/W로 가상화한 모델&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-소프트웨어-개발-직무별-보안-활동--b&quot;&gt;6. 소프트웨어 개발 직무별 보안 활동 – B&lt;/h2&gt;

&lt;h3 id=&quot;--프로젝트-관리자&quot;&gt;- 프로젝트 관리자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보안 전략을 조직 구성원들에게 전달&lt;/li&gt;
  &lt;li&gt;응용 프로그램 보안 영향을 이해시킴&lt;/li&gt;
  &lt;li&gt;조직의 상태 모니터링&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--요구사항-분석가&quot;&gt;- 요구사항 분석가&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보안 관련 비즈니스 요구사항 설명&lt;/li&gt;
  &lt;li&gt;구조 정의, 자원에 대한 보안 요구사항 정의&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--아키텍트&quot;&gt;- 아키텍트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보안 기술 문제를 충분히 이해&lt;/li&gt;
  &lt;li&gt;사용되는 모든 리소스 정의, 각 리소스별로 적절한 보안 요구사항 적용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--설계자&quot;&gt;- 설계자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보안 요구사항의 만족성 여부 확인&lt;/li&gt;
  &lt;li&gt;최선의 문제 해결 방법 결정&lt;/li&gt;
  &lt;li&gt;보안 수준에 대한 품질 측정 지원&lt;/li&gt;
  &lt;li&gt;수정 요구사항을 최소화하기 위한 방법 제공&lt;/li&gt;
  &lt;li&gt;발생할 수 있는 보안 위험에 대해 이해&lt;/li&gt;
  &lt;li&gt;발견된 보안 위협에 대해 적절히 대응&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--구현-개발자&quot;&gt;- 구현 개발자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시큐어 코딩 표준을 준수하여 개발&lt;/li&gt;
  &lt;li&gt;S/W 안전 여부를 쉽게 확인할 수 있도록 문서화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-분석가&quot;&gt;- 테스트 분석가&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;요구사항과 구현 결과를 반복적으로 확인&lt;/li&gt;
  &lt;li&gt;보안 위험에 대한 학습이나 툴 사용법 정도는 숙지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--보안-감사자&quot;&gt;- 보안 감사자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;현재 상태의 보안을 보장&lt;/li&gt;
  &lt;li&gt;요구사항의 적합성과 완전성을 확인&lt;/li&gt;
  &lt;li&gt;프로젝트의 전체 단계에서 활동&lt;/li&gt;
  &lt;li&gt;설계 단계에서는 보안 문제로 이어질 수 있는 사항이 있는지 확인&lt;/li&gt;
  &lt;li&gt;구현 단계에서는 보안 문제가 있는지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-hw-관련-신기술--a&quot;&gt;7. HW 관련 신기술 – A&lt;/h2&gt;

&lt;h3 id=&quot;--고가용성ha-high-availability&quot;&gt;- 고가용성(HA; High Availability)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;장애 발생 시 즉시 다른 시스템으로 대체 가능한 환경을 구축하는 메커니즘&lt;/li&gt;
  &lt;li&gt;클러스터, 이중화 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--3d-printing&quot;&gt;- 3D Printing&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;손으로 만질 수 있는 실제 물체로 만들어내는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--4d-printing&quot;&gt;- 4D Printing&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;특정 시간이나 조건이 갖추어지면 스스로 형태를 변화시키거나 제조되는 자가 조립 기술이 적용된 제품을 3D Printing하는 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--raid&quot;&gt;- RAID&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;여러 개의 하드디스크로 디스크 배열을 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--4k-해상도&quot;&gt;- 4K 해상도&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;차세대 고화질 모니터의 해상도를 지칭&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--앤-스크린&quot;&gt;- 앤 스크린&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;N개의 서로 다른 단말기에서 동일한 콘텐츠를 자유롭게 이용하는 서비스&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--컴패니언-스크린&quot;&gt;- 컴패니언 스크린&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;앤 스크린의 한 종류&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--신-클라이언트-pc&quot;&gt;- 신 클라이언트 PC&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하드디스크나 주변장치 없이 기본적인 메모리만 갖추고 서버와 네트워크로 운용되는 개인용 컴퓨터&lt;/li&gt;
  &lt;li&gt;서버 기반 컴퓨팅&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--패블릿&quot;&gt;- 패블릿&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;폰 + 태블릿&lt;/li&gt;
  &lt;li&gt;태블릿 기능을 포함한 5인치 이상의 대화면 스마트폰&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--c형-usb&quot;&gt;- C형 USB&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;크기가 작고, 어느 방향으로든 연결 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--멤스mems-micro-electro-mechanical-systems&quot;&gt;- 멤스(MEMS; Micro-Electro Mechanical Systems)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기계 구조를 다양한 기술로 미세 가공하여 전기기계적 동작을 할 수 있도록 한 초미세 장치&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--트러스트존-기술&quot;&gt;- 트러스트존 기술&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 프로세서 내에 일반 애플리케이션을 처리하는 일반 구역과 보안이 필요한 애플리케이션을 처리하는 보안구역으로 분할하여 관리하는 하드웨어 기반의 보안 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--엠디스크&quot;&gt;- 엠디스크&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;한 번의 기록만으로 자료를 영구 보관할 수 있는 광 저장 장치&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--멤리스터memristor&quot;&gt;- 멤리스터(Memristor)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;메모리 + 레지스터&lt;/li&gt;
  &lt;li&gt;전류의 방향과 양등 기존의 경험을 모두 기억하는 특별한 소자&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-secure-os--b&quot;&gt;8. Secure OS – B&lt;/h2&gt;

&lt;h3 id=&quot;--secure-os의-개요&quot;&gt;- Secure OS의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보안 기능을 갖춘 커널을 이식하여 시스템 자원을 보호하는 운영체제&lt;/li&gt;
  &lt;li&gt;보안 커널은 TCB를 기반으로 참조 모니터의 개념을 구현하고 집행&lt;/li&gt;
  &lt;li&gt;메모리, 보조기억장치, 데이터, 하드웨어, 자료 구조, 명령어 등 보호&lt;/li&gt;
  &lt;li&gt;구현하기 복잡한 것
    &lt;ul&gt;
      &lt;li&gt;암호적 분리 : 내부 정보 암호화&lt;/li&gt;
      &lt;li&gt;논리적 분리 : 논리적 구역을 지정하여 구역을 벗어나는 행위를 제한&lt;/li&gt;
      &lt;li&gt;시간적 분리 : 동시 실행으로 발생하는 보안 취약점 제거&lt;/li&gt;
      &lt;li&gt;물리적 분리 : 사용자별로 특정 장비만 사용하도록 제한&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;참조 모니터
    &lt;ul&gt;
      &lt;li&gt;보호대상의 객체에 대한 접근통제를 수행하는 추상머신&lt;/li&gt;
      &lt;li&gt;이것을 실제로 구현한 것이 보안 커널&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;참조 모니터와 보안 커널의 특징
    &lt;ul&gt;
      &lt;li&gt;격리성 : 부정 조작 불가능&lt;/li&gt;
      &lt;li&gt;검증가능성 : 적절히 구현되었다는 것을 확인할 수 있어야 함&lt;/li&gt;
      &lt;li&gt;완전성 : 우회가 불가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--secure-os의-보안-기능&quot;&gt;- Secure OS의 보안 기능&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;식별 및 인증&lt;/li&gt;
  &lt;li&gt;임의적 접근 통제&lt;/li&gt;
  &lt;li&gt;강제적 접근 통제&lt;/li&gt;
  &lt;li&gt;객체 재사용 보호&lt;/li&gt;
  &lt;li&gt;완전한 조정&lt;/li&gt;
  &lt;li&gt;신뢰 경로&lt;/li&gt;
  &lt;li&gt;감사 및 감사기록 축소&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;9-db-관련-신기술--a&quot;&gt;9. DB 관련 신기술 – A&lt;/h2&gt;

&lt;h3 id=&quot;--빅데이터&quot;&gt;- 빅데이터&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;막대한 양의 정형 또는 비정형 데이터 집합&lt;/li&gt;
  &lt;li&gt;미래를 예측해 최적의 대응 방안을 찾고, 수익으로 연결하여 새로운 가치 창출&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--브로드-데이터&quot;&gt;- 브로드 데이터&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;소비자와 상호 작용을 통해 생성된 기업 마케팅에 효율적인 데이터&lt;/li&gt;
  &lt;li&gt;소비자의 SNS 활동이나 위치 정보 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--메타-데이터&quot;&gt;- 메타 데이터&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;일련의 데이터를 정의하고 설명해 주는 데이터&lt;/li&gt;
  &lt;li&gt;빠르게 검색하거나 내용을 간략하고 체계적으로 하기 위해 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--디지털-아카이빙&quot;&gt;- 디지털 아카이빙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;디지털 정보 자원을 장기적으로 보존하기 위한 작업&lt;/li&gt;
  &lt;li&gt;아날로그 콘텐츠를 디지털로 변환 후 압축해서 저장&lt;/li&gt;
  &lt;li&gt;디지털 콘텐츠도 체계적으로 분류하고 메타 데이터를 만들어 DB화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--하둡hadoop&quot;&gt;- 하둡(Hadoop)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;오픈 소스를 기반으로 한 분산 컴퓨팅 플랫폼&lt;/li&gt;
  &lt;li&gt;가상화된 대형 스토리지를 형성&lt;/li&gt;
  &lt;li&gt;거대 데이터 세트를 병렬로 처리할 수 있도록 개발된 자바 S/W 프레임워크&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--타조tajo&quot;&gt;- 타조(Tajo)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;아파치 하둡 기반의 분산 데이터 웨어하우스 프로젝트&lt;/li&gt;
  &lt;li&gt;빅데이터를 분석할 때 맵리듀스를 사용하지 않고 SQL 사용&lt;/li&gt;
  &lt;li&gt;대규모 데이터 처리와 실시간 상호 분석에 모두 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-다이어트&quot;&gt;- 데이터 다이어트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터를 삭제하는 것이 아니라 압축&lt;/li&gt;
  &lt;li&gt;중복 배제하고 새로운 기준에 따라 나누어 저장&lt;/li&gt;
  &lt;li&gt;방대한 정보를 효율적으로 관리하기 위해 대두된 방안&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;10-회복--병행제어--b&quot;&gt;10. 회복 / 병행제어 – B&lt;/h2&gt;

&lt;h3 id=&quot;--회복&quot;&gt;- 회복&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;장애로 DB가 손상됐을 때, 손상되기 이전의 정상 상태로 복구하는 작업&lt;/li&gt;
  &lt;li&gt;장애의 유형
    &lt;ul&gt;
      &lt;li&gt;트랜잭션 장애&lt;/li&gt;
      &lt;li&gt;시스템 장애&lt;/li&gt;
      &lt;li&gt;미디어 장애&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;회복 관리기
    &lt;ul&gt;
      &lt;li&gt;DBMS의 구성 요소&lt;/li&gt;
      &lt;li&gt;트랜잭션 실행이 완료되지 못하면 모든 변화를 취소하고 원래 상태로 복구&lt;/li&gt;
      &lt;li&gt;메모리 덤프, 로그를 이용해 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--병행제어&quot;&gt;- 병행제어&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다수의 트랜잭션을 병행수행할 때, 트랜잭션 간의 상호 작용을 제어&lt;/li&gt;
  &lt;li&gt;병행제어의 목적
    &lt;ul&gt;
      &lt;li&gt;DB 공유 최대화&lt;/li&gt;
      &lt;li&gt;시스템 활용도 최대화&lt;/li&gt;
      &lt;li&gt;DB 일관성 유지&lt;/li&gt;
      &lt;li&gt;응답 시간 최소화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--병행수행의-문제점&quot;&gt;- 병행수행의 문제점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;갱신 분실(Lost Update)&lt;/li&gt;
  &lt;li&gt;비완료 의존성(Uncommitted Dependency)&lt;/li&gt;
  &lt;li&gt;모순성(Inconsistency)&lt;/li&gt;
  &lt;li&gt;연쇄 복귀(Cascading Rollback)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;11-데이터-표준화--a&quot;&gt;11. 데이터 표준화 – A&lt;/h2&gt;

&lt;h3 id=&quot;--데이터-표준화의-정의&quot;&gt;- 데이터 표준화의 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시스템을 구성하는 데이터 요소의 명칭, 정의, 형식, 규칙에 대한 원칙 수립, 적용&lt;/li&gt;
  &lt;li&gt;데이터 이름이 중복되지 않고 공통된 의미로 전달되도록 표준 항목명 부여&lt;/li&gt;
  &lt;li&gt;데이터 요소에서 사용되는 단어에 대해 일정한 규칙이 적용되도록 해야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-표준&quot;&gt;- 데이터 표준&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 모델이나 DB에서 정의할 수 있는 모든 오브젝트를 대상으로 표준화 수행&lt;/li&gt;
  &lt;li&gt;데이터 표준의 종류
    &lt;ul&gt;
      &lt;li&gt;표준 단어&lt;/li&gt;
      &lt;li&gt;표준 도메인&lt;/li&gt;
      &lt;li&gt;표준 코드&lt;/li&gt;
      &lt;li&gt;표준 용어&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-관리-조직&quot;&gt;- 데이터 관리 조직&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 표준 원칙이나 데이터 표준의 준수 여부 등을 관리하는 사람들&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터 관리자(DA)&lt;/th&gt;
      &lt;th&gt;DB 관리자(DBA)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;관리 대상&lt;/td&gt;
      &lt;td&gt;데이터 모델, 각종 표준&lt;/td&gt;
      &lt;td&gt;DB&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;주요 업무&lt;/td&gt;
      &lt;td&gt;요구사항 반영, 메터 데이터 정의&lt;/td&gt;
      &lt;td&gt;DB 관리&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;품질 관리&lt;/td&gt;
      &lt;td&gt;데이터 표준 관리 및 적용&lt;/td&gt;
      &lt;td&gt;데이터 정합성 관리&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;--데이터-표준화-전략&quot;&gt;- 데이터 표준화 전략&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;표준화 요구사항 수집 -&amp;gt; 표준 정의 -&amp;gt; 표준 확정 -&amp;gt; 표준 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-표준화의-대상&quot;&gt;- 데이터 표준화의 대상&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 명칭&lt;/li&gt;
  &lt;li&gt;데이터 정의&lt;/li&gt;
  &lt;li&gt;데이터 형식&lt;/li&gt;
  &lt;li&gt;데이터 규칙&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-표준화의-기대-효과&quot;&gt;- 데이터 표준화의 기대 효과&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;명확한 의사소통 가능&lt;/li&gt;
  &lt;li&gt;데이터의 의미나 위치 등을 쉽게 파악&lt;/li&gt;
  &lt;li&gt;입력 오류를 방지하고 의사 결정의 오류를 줄여 데이터 품질 향상&lt;/li&gt;
  &lt;li&gt;시스템 간 데이터 공유 시 데이터 변환이나 정제 작업을 수행하지 않아도 됨&lt;/li&gt;
  &lt;li&gt;데이터 유지보수 및 운영의 효율성, 관리 비용 절감&lt;/li&gt;
&lt;/ul&gt;</content><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 5과목 2장</summary></entry><entry><title type="html">[Git &amp;amp; Github] Markdown</title><link href="https://leewonwoo1.github.io/git/etc-git-markdown/" rel="alternate" type="text/html" title="[Git &amp;amp; Github] Markdown" /><published>2021-08-03T17:00:00+09:00</published><updated>2021-08-04T02:00:00+09:00</updated><id>https://leewonwoo1.github.io/git/etc-git-markdown</id><content type="html" xml:base="https://leewonwoo1.github.io/git/etc-git-markdown/">&lt;h2 id=&quot;1-제목header&quot;&gt;1. 제목(Header)&lt;/h2&gt;

&lt;p&gt;#의 개수에 따라 h1 ~ h6 태그의 크기로 Header이 적용&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 제목1
## 제목2
### 제목3
#### 제목4
##### 제목5
###### 제목6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;제목1header&quot;&gt;제목1(Header)&lt;/h1&gt;
&lt;h2 id=&quot;제목2&quot;&gt;제목2&lt;/h2&gt;
&lt;h3 id=&quot;제목3&quot;&gt;제목3&lt;/h3&gt;
&lt;h4 id=&quot;제목4&quot;&gt;제목4&lt;/h4&gt;
&lt;h5 id=&quot;제목5&quot;&gt;제목5&lt;/h5&gt;
&lt;h6 id=&quot;제목6&quot;&gt;제목6&lt;/h6&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-문장paragraph&quot;&gt;2. 문장(Paragraph)&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;가나다라 마바사아
자차카타 파하.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가나다라 마바사아
자차카타 파하.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-줄바꿈line-breaks&quot;&gt;3. 줄바꿈(Line Breaks)&lt;/h2&gt;

&lt;h3 id=&quot;--띄어쓰기-2회&quot;&gt;- 띄어쓰기 2회&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;가나다라 마바사아  
자차카타 파하
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가나다라 마바사아&lt;br /&gt;
자차카타 파하.&lt;/p&gt;

&lt;h3 id=&quot;--br태그&quot;&gt;- br태그&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;가나다라 마바사아 &amp;lt;br&amp;gt; 자차카타 파하.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가나다라 마바사아 &lt;br /&gt; 자차카타 파하.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-강조emphasis&quot;&gt;4. 강조(Emphasis)&lt;/h2&gt;

&lt;h3 id=&quot;--두껍게&quot;&gt;- 두껍게&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**두껍게**
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;두껍게&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;--이텔릭기울임&quot;&gt;- 이텔릭(기울임)&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*이텔릭*
_이텔릭_
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;이텔릭&lt;/em&gt; &lt;br /&gt;
&lt;em&gt;이텔릭&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;--취소선&quot;&gt;- 취소선&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~취소선~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;del&gt;취소선&lt;/del&gt;&lt;/p&gt;

&lt;h3 id=&quot;--밑줄&quot;&gt;- 밑줄&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;권장되지 않음&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;u&amp;gt;밑줄&amp;lt;/u&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;u&gt;밑줄&lt;/u&gt;&lt;/p&gt;

&lt;h3 id=&quot;--색상&quot;&gt;- 색상&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;span style=&quot;color: red&quot;&amp;gt;색상&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;span style=&quot;color: red&quot;&gt;색상&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-목록list&quot;&gt;5. 목록(List)&lt;/h2&gt;

&lt;h3 id=&quot;--순서가-필요한-목록&quot;&gt;- 순서가 필요한 목록&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 순서가 필요한 목록1
2. 순서가 필요한 목록2
3. 순서가 필요한 목록3
    1. 순서가 필요한 목록1
        1. 순서가 필요한 목록1
        2. 순서가 필요한 목록2
    2. 순서가 필요한 목록2
4. 순서가 필요한 목록4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;순서가 필요한 목록1&lt;/li&gt;
  &lt;li&gt;순서가 필요한 목록2&lt;/li&gt;
  &lt;li&gt;순서가 필요한 목록3
    &lt;ol&gt;
      &lt;li&gt;순서가 필요한 목록1
        &lt;ol&gt;
          &lt;li&gt;순서가 필요한 목록1&lt;/li&gt;
          &lt;li&gt;순서가 필요한 목록2&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;순서가 필요한 목록2&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;순서가 필요한 목록4&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;--순서가-필요하지-않은-목록&quot;&gt;- 순서가 필요하지 않은 목록&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 순서가 필요하지 않은 목록
- 순서가 필요하지 않은 목록
- 순서가 필요하지 않은 목록
    - 순서가 필요하지 않은 목록
        - 순서가 필요하지 않은 목록
        - 순서가 필요하지 않은 목록
    - 순서가 필요하지 않은 목록
- 순서가 필요하지 않은 목록
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;순서가 필요하지 않은 목록&lt;/li&gt;
  &lt;li&gt;순서가 필요하지 않은 목록&lt;/li&gt;
  &lt;li&gt;순서가 필요하지 않은 목록
    &lt;ul&gt;
      &lt;li&gt;순서가 필요하지 않은 목록
        &lt;ul&gt;
          &lt;li&gt;순서가 필요하지 않은 목록&lt;/li&gt;
          &lt;li&gt;순서가 필요하지 않은 목록&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;순서가 필요하지 않은 목록&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;순서가 필요하지 않은 목록&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--체크-리스트&quot;&gt;- 체크 리스트&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- [X] 체크
- [ ] 체크X
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;체크&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;체크X&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-링크links&quot;&gt;6. 링크(Links)&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;https://google.com&quot;&amp;gt;GOOGLE&amp;lt;/a&amp;gt;
&amp;lt;br&amp;gt;
[GOOGLE](https://google.com)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://google.com&quot;&gt;GOOGLE&lt;/a&gt;
&lt;br /&gt;
&lt;a href=&quot;https://google.com&quot;&gt;GOOGLE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;title : 링크에 마우스를 올렸을 때 나타나는 메시지&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;https://naver.com&quot; title=&quot;NAVER로 이동!&quot;&amp;gt;NAVER&amp;lt;/a&amp;gt;
&amp;lt;br&amp;gt;
[NAVER](https://naver.com &quot;NAVER로 이동!&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://naver.com&quot; title=&quot;NAVER로 이동!&quot;&gt;NAVER&lt;/a&gt;
&lt;br /&gt;
&lt;a href=&quot;https://naver.com&quot; title=&quot;NAVER로 이동!&quot;&gt;NAVER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;target=”_blank” : 링크를 클릭했을 때 창이 새 탭에 열림&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;https://naver.com&quot; title=&quot;NAVER로 이동!&quot; target=&quot;_blank&quot;&amp;gt;NAVER&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://naver.com&quot; title=&quot;NAVER로 이동!&quot; target=&quot;_blank&quot;&gt;NAVER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-이미지image&quot;&gt;7. 이미지(Image)&lt;/h2&gt;

&lt;h3 id=&quot;--일반&quot;&gt;- 일반&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![이미지](경로)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/62803763/127985715-0184cb33-7457-4cf9-b988-97b1ba9b092f.jpg&quot; alt=&quot;ggam1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--이미지에-링크-걸기&quot;&gt;- 이미지에 링크 걸기&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[![이미지](경로)](링크 url)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;사진 클릭하면 구글로 이동&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://google.com&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/62803763/127985728-a9c23902-b17c-4d97-9b47-b3481735f854.jpg&quot; alt=&quot;ggam2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-인용문&quot;&gt;8. 인용문&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; 남의 말이나 글에서 직접 또는 간접으로 따온 문장.  
&amp;gt; (네이버 국어 사전)

&amp;gt; 인용문을 작성하세요!
&amp;gt;&amp;gt; 중첩된 인용문
&amp;gt;&amp;gt;&amp;gt; 중중첩된 인용문 1
&amp;gt;&amp;gt;&amp;gt; 중중첩된 인용문 2
&amp;gt;&amp;gt;&amp;gt; 중중첩된 인용문 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;남의 말이나 글에서 직접 또는 간접으로 따온 문장.&lt;br /&gt;
(네이버 국어 사전)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;인용문을 작성하세요!&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;중첩된 인용문&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;중중첩된 인용문 1
중중첩된 인용문 2
중중첩된 인용문 3&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;9-인라인inline-코드-강조&quot;&gt;9. 인라인(inline) 코드 강조&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;백틱기호 ` `를 사용해 강조

CSS에서 `background` 혹은 `background-image` 속성으로 요소에 배경 이미지를 삽입할 수 있습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CSS에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background&lt;/code&gt; 혹은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background-image&lt;/code&gt; 속성으로 요소에 배경 이미지를 삽입할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;10-블록block-코드-강조&quot;&gt;10. 블록(block) 코드 강조&lt;/h2&gt;

&lt;p&gt;백틱기호 3개(‘’’) 언어 이름(html, css, javascript, java, c, bash, python…)
코드
백틱기호 3개(‘’’)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'''html
\&amp;lt;a href=&quot;https://www.google.co.kr/&quot; target=&quot;_blank&quot;&amp;gt;GOOGLE&amp;lt;/a&amp;gt;
'''
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.google.co.kr/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;GOOGLE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'''css
.list &amp;gt; li {
  position: absolute;
  top: 40px;
}
'''
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'''javascript
function func() {
  var a = 'AAA'
  return a;
}
'''
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;AAA&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'''bash
$ git commit -m 'Study Markdown'
'''
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Study Markdown'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'''plaintext
가나다라 마바사아  
자차카타 파하
'''
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;가나다라 마바사아  
자차카타 파하
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;11-표table&quot;&gt;11. 표(Table)&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|:--| : 왼쪽 정렬
|--:| : 오른쪽 정렬
|:--:| : 가운데 정렬


position 속성

값 | 의미 | 기본값
--|:--:|--:
static | 기준 없음 | O
relative | 요소 자신 | X
absolute | 위치 상 부모 요소 | X
fixed | 뷰포트 | X
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;position 속성&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;값&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;의미&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;기본값&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;static&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;기준 없음&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;O&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;relative&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;요소 자신&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;X&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;absolute&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;위치 상 부모 요소&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;X&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fixed&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;뷰포트&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;X&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;12-원시-htmlraw-html&quot;&gt;12. 원시 HTML(Raw HTML)&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;동해물과 &amp;lt;u&amp;gt;백두산&amp;lt;/u&amp;gt;이 마르고 닳도록&amp;lt;br/&amp;gt;
&amp;lt;span style=&quot;text-decoration: underline;&quot;&amp;gt;하느님&amp;lt;/span&amp;gt;이 보우하사 우리나라 만세

&amp;lt;a href=&quot;https://naver.com&quot; title=&quot;NAVER로 이동!&quot; target=&quot;_blank&quot;&amp;gt;NAVER&amp;lt;/a&amp;gt;

&amp;lt;img width=&quot;500&quot; src=&quot;https://user-images.githubusercontent.com/62803763/127985736-2879d5fd-621b-4872-8b9b-0b0ce9141c7a.jpg&quot; alt=&quot;ggam4&quot; /&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;동해물과 &lt;u&gt;백두산&lt;/u&gt;이 마르고 닳도록&lt;br /&gt;
&lt;span style=&quot;text-decoration: underline;&quot;&gt;하느님&lt;/span&gt;이 보우하사 우리나라 만세&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://naver.com&quot; title=&quot;NAVER로 이동!&quot; target=&quot;_blank&quot;&gt;NAVER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;500&quot; src=&quot;https://user-images.githubusercontent.com/62803763/127985736-2879d5fd-621b-4872-8b9b-0b0ce9141c7a.jpg&quot; alt=&quot;ggam4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;13-수평선horizontal-rule&quot;&gt;13. 수평선(Horizontal Rule)&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---

&amp;lt;br&amp;gt;

***
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;</content><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><category term="Git" /><category term="Github" /><category term="Git" /><category term="Markdown" /><summary type="html">Markdown 문법 정리</summary></entry><entry><title type="html">[정보처리기사 필기] 5-1. 소프트웨어 개발 방법론 활용</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp18/" rel="alternate" type="text/html" title="[정보처리기사 필기] 5-1. 소프트웨어 개발 방법론 활용" /><published>2021-08-03T09:00:00+09:00</published><updated>2021-08-03T18:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp18</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp18/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 일부 제외&lt;/p&gt;

&lt;h2 id=&quot;1-소프트웨어-개발-방법론--a&quot;&gt;1. 소프트웨어 개발 방법론 – A&lt;/h2&gt;

&lt;h3 id=&quot;--소프트웨어-개발-방법론의-개요&quot;&gt;- 소프트웨어 개발 방법론의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W 개발, 유지보수 등에 필요한 일들의 수행 방법과 일들을 효율적으로 수행하기 위해 필요한 각종 기법 및 도구를 체계적으로 정리하여 표준화한 것&lt;/li&gt;
  &lt;li&gt;목적은 S/W 생산성과 품질 향상&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--구조적-방법론&quot;&gt;- 구조적 방법론&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정형화된 분석 잘차에 따라 사용자 요구사항을 파악하여 문서화하는 처리 중심의 방법론&lt;/li&gt;
  &lt;li&gt;쉬운 이해 및 검증이 가능한 프로그램 코드를 생성하는 것이 목적&lt;/li&gt;
  &lt;li&gt;분할과 정복 원리 적용&lt;/li&gt;
  &lt;li&gt;타당성 검토 -&amp;gt; 계획 -&amp;gt; 요구사항 -&amp;gt; 설계 -&amp;gt; 구현 -&amp;gt; 시험 -&amp;gt; 운용/유지보수&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--정보공학-방법론&quot;&gt;- 정보공학 방법론&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정보 시스템의 개발을 위해 계획, 분석, 설계, 구축에 정형화된 기법들을 상호 연관성 있게 통합 및 적용하는 자료 중심의 방법론&lt;/li&gt;
  &lt;li&gt;대규모 정보 시스템을 구축하는데 적합&lt;/li&gt;
  &lt;li&gt;정보 전략 계획 수립 -&amp;gt; 업무 영역 분석 -&amp;gt; 업무 시스템 설계 -&amp;gt; 업무 시스템 구축&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--객체지향-방법론&quot;&gt;- 객체지향 방법론&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개체를 하나의 객체로 만들어 부품을 조립하듯 S/W를 개발하는 방법론&lt;/li&gt;
  &lt;li&gt;구조적 기법의 문제점으로 인한 S/W 위기의 해결책&lt;/li&gt;
  &lt;li&gt;객체, 클래스, 메시지&lt;/li&gt;
  &lt;li&gt;캡슐화, 정보 은닉, 추상화, 상속성, 다형성&lt;/li&gt;
  &lt;li&gt;요구 분석 -&amp;gt; 설계 -&amp;gt; 구현 -&amp;gt; 테스트 및 검증 -&amp;gt; 인도&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--컴포넌트-기반-방법론&quot;&gt;- 컴포넌트 기반 방법론&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기존의 시스템이나 S/W를 구성하는 컴포넌트를 조립하여 하나의 새로운 앱을 만드는 방법론&lt;/li&gt;
  &lt;li&gt;컴포넌트의 재사용이 가능하여 시간과 노력을 절감&lt;/li&gt;
  &lt;li&gt;유지 보수 비용을 최소화하고 생산성 및 품질을 향상&lt;/li&gt;
  &lt;li&gt;개발 준비 -&amp;gt; 분석 -&amp;gt; 설계 -&amp;gt; 구현 -&amp;gt; 테스트 -&amp;gt; 전개 -&amp;gt; 인도&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--애자일-방법론&quot;&gt;- 애자일 방법론&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;고객의 요구사항 변화에 유연하게 대응할 수 있도록 주기를 반복하며 개발하는 방법론&lt;/li&gt;
  &lt;li&gt;소규모 프로젝트, 고도로 숙달된 개발자, 급변하는 요구사항에 적합&lt;/li&gt;
  &lt;li&gt;XP, 스크럼, 칸반, 크리스탈 등&lt;/li&gt;
  &lt;li&gt;사용자 스토리 -&amp;gt; 계획 -&amp;gt; 개발 -&amp;gt; 승인&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--제품-계열-방법론&quot;&gt;- 제품 계열 방법론&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;특정 제품에 적용하고 싶은 공통된 기능을 정의하여 개발&lt;/li&gt;
  &lt;li&gt;임베디드 S/W를 만드는데 적합&lt;/li&gt;
  &lt;li&gt;영역공학과 응용공학으로 구분
    &lt;ul&gt;
      &lt;li&gt;영역공학 : 영역 분석, 영역 설계, 핵심 자산을 구현하는 영역&lt;/li&gt;
      &lt;li&gt;응용공학 : 제품 요구 분석, 제품 설계, 제품을 구현하는 영역&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;제품의 요구사항, 아키텍처, 조립 생산이 필요&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-비용-산정-기법--a&quot;&gt;2. 비용 산정 기법 – A&lt;/h2&gt;

&lt;h3 id=&quot;--소프트웨어-비용-산정의-개요&quot;&gt;- 소프트웨어 비용 산정의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개발에 필요한 비용을 산정하는 것&lt;/li&gt;
  &lt;li&gt;비용을 높게 산정할 경우 예산 낭비와 일의 효율성 저하를 초래&lt;/li&gt;
  &lt;li&gt;비용을 낮게 산정할 경우 개발자의 부담이 가중되고 품질문제 발생&lt;/li&gt;
  &lt;li&gt;하향식 비용 산정 기법, 상향식 비용 산정 기법&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--소프트웨어-비용-결정-요소&quot;&gt;- 소프트웨어 비용 결정 요소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개발하는 S/W, S/W 개발에 투입되는 자원, S/W 생산성에 따라 결정&lt;/li&gt;
  &lt;li&gt;프로젝트 요소
    &lt;ul&gt;
      &lt;li&gt;제품 복잡도&lt;/li&gt;
      &lt;li&gt;시스템 크기&lt;/li&gt;
      &lt;li&gt;요구되는 신뢰도&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;자원 요소
    &lt;ul&gt;
      &lt;li&gt;인적 자원&lt;/li&gt;
      &lt;li&gt;하드웨어 자원&lt;/li&gt;
      &lt;li&gt;S/W 자원&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;생산성 요소
    &lt;ul&gt;
      &lt;li&gt;개발자 능력&lt;/li&gt;
      &lt;li&gt;개발 기간&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-비용-산정-기법--하향식--a&quot;&gt;3. 비용 산정 기법 : 하향식 – A&lt;/h2&gt;

&lt;h3 id=&quot;--하향식-비용-산정-기법의-개요&quot;&gt;- 하향식 비용 산정 기법의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;과거의 유사한 경험을 바탕으로 전문 지식이 많은 개발자들이 참여한 회의를 통해 비용을 산정하는 비과학적 방법&lt;/li&gt;
  &lt;li&gt;프로젝트 전체 비용을 산정한 후 각 작업별로 비용을 세분화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--전문가-감정-기법&quot;&gt;- 전문가 감정 기법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;경험이 많은 두 명 이상의 전문가에게 비용 산정 의뢰&lt;/li&gt;
  &lt;li&gt;편리하고 신속. 의뢰자로부터 신뢰 얻을 수 있음&lt;/li&gt;
  &lt;li&gt;과거의 프로젝트와 다른 요소들이 있다는 것을 간과할 수 있음&lt;/li&gt;
  &lt;li&gt;유사한 프로젝트에 대한 경험이 없을 수 있음&lt;/li&gt;
  &lt;li&gt;개인적, 주관적&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--델파이-기법&quot;&gt;- 델파이 기법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;많은 전문가의 의견을 종합하여 산정하는 기법&lt;/li&gt;
  &lt;li&gt;한 명의 조정자와 여러 전문가로 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-비용-산정-기법--상향식--a&quot;&gt;4. 비용 산정 기법 : 상향식 – A&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트의 세부적인 작업 단위별로 비용 산정 후 집계하여 전체 비용 산정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--loc원시-코드-라인-수-기법&quot;&gt;- LOC(원시 코드 라인 수) 기법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기능의 원시 코드 라인 수의 비관치, 낙관치, 기대치를 측정하여 예측치를 구해 비용 산정&lt;/li&gt;
  &lt;li&gt;측정이 용이하고 이해하기 쉬움&lt;/li&gt;
  &lt;li&gt;예측치를 이용하여 생산성, 노력, 개발 기간등의 비용 산정&lt;/li&gt;
  &lt;li&gt;예측치 = (낙관치 + 4 * 기대치(중간치) + 비관치) / 6&lt;/li&gt;
  &lt;li&gt;노력 = 개발 기간 * 투입 인원 = LOC / 1인당 월평균 생산 코드 라인 수&lt;/li&gt;
  &lt;li&gt;개발 비용 = 노력 * 단위 비용&lt;/li&gt;
  &lt;li&gt;개발 기간 = 노력 / 투입 인원&lt;/li&gt;
  &lt;li&gt;생산성 = LOC / 노력&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--개발-단계별-인원수-기법&quot;&gt;- 개발 단계별 인원수 기법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;각 기능을 구현하는 데 필요한 노력을 생명 주기의 각 단계별로 산정&lt;/li&gt;
  &lt;li&gt;LOC 기법보다 더 정확&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-수학적-산정-기법--a&quot;&gt;5. 수학적 산정 기법 – A&lt;/h2&gt;

&lt;h3 id=&quot;--수학적-산정-기법의-개요&quot;&gt;- 수학적 산정 기법의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;상향식 비용 산정 기법&lt;/li&gt;
  &lt;li&gt;경험적 추정 모형, 실험적 추정 모형이라고도 함&lt;/li&gt;
  &lt;li&gt;개발 비용 산정의 자동화를 목표로 함&lt;/li&gt;
  &lt;li&gt;공식은 과거 유사한 프로젝트를 기반으로하여 경험적으로 유도된 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--cocomo-모형-개요&quot;&gt;- COCOMO 모형 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;LOC에 의한 비용 산정 기법&lt;/li&gt;
  &lt;li&gt;규모(LOC)를 예측한 후 비용 산정 방정식에 대입하여 비용 산정&lt;/li&gt;
  &lt;li&gt;유연성이 높아 개발비 견적에 널리 통용&lt;/li&gt;
  &lt;li&gt;성격에 따라 비용이 다르게 산정&lt;/li&gt;
  &lt;li&gt;비용 산정 결과는 노력으로 나타남&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--cocomo의-소프트웨어-개발-유형&quot;&gt;- COCOMO의 소프트웨어 개발 유형&lt;/h3&gt;

&lt;h4 id=&quot;-조직형organic-mode&quot;&gt;@ 조직형(Organic Mode)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;5만(50KDSI) 라인 이하의 S/W 개발하는 유형&lt;/li&gt;
  &lt;li&gt;일괄 자료 처리, 과학 기술 계산용, 비즈니스 자료 처리용&lt;/li&gt;
  &lt;li&gt;사무 처리용, 업무용, 과학용 응용 S/W 개발에 적합&lt;/li&gt;
  &lt;li&gt;노력(MM) = 2.4 * KDSI^1.05&lt;/li&gt;
  &lt;li&gt;개발 기간(TDEV) = 2.5 * MM^0.38&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-반분리형semi-detached-mode&quot;&gt;@ 반분리형(Semi-Detached Mode)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;30만(300KDSI) 라인 이하의 S/W 개발하는 유형&lt;/li&gt;
  &lt;li&gt;트랜잭션 처리 시스템, 운영체제, DBMS&lt;/li&gt;
  &lt;li&gt;컴파일러, 인터프리터와 같은 유틸리티 개발에 적합&lt;/li&gt;
  &lt;li&gt;노력(MM) = 3.0 * KDSI^1.12&lt;/li&gt;
  &lt;li&gt;개발기간(TDEV) = 2.5 * MM^0.35&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-내장형embedded-mode&quot;&gt;@ 내장형(Embedded Mode)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;30만(300KDSI) 라인 이상의 S/W 개발하는 유형&lt;/li&gt;
  &lt;li&gt;최대형 규모의 트랜잭션 처리 시스템, 운영체제&lt;/li&gt;
  &lt;li&gt;신호기 제어 시스템, 미사일 유도 시스템, 실시간 처리 시스템&lt;/li&gt;
  &lt;li&gt;시스템 프로그램 개발에 적합&lt;/li&gt;
  &lt;li&gt;노력(MM) = 3.6 * KDSI^1.20&lt;/li&gt;
  &lt;li&gt;개발 기간(TDEV) = 2.5 * MM^0.32&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--cocomo-모형의-종류&quot;&gt;- COCOMO 모형의 종류&lt;/h3&gt;

&lt;h4 id=&quot;-기본형-cocomo&quot;&gt;@ 기본형 COCOMO&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;S/W의 크기와 개발 유형만을 이용하여 비용 산정&lt;/li&gt;
  &lt;li&gt;개발 노력(MM) = a * KDSI^b&lt;/li&gt;
  &lt;li&gt;개발 기간(TDEV) = c * MM^d&lt;/li&gt;
  &lt;li&gt;적정 투입 인원(FPS) = MM / TDEV&lt;/li&gt;
  &lt;li&gt;인적 비용(COST) = MM * 1인당 월평균 급여&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-중간형-cocomo&quot;&gt;@ 중간형 COCOMO&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기본형 COCOMO의 공식을 토대로 사용&lt;/li&gt;
  &lt;li&gt;제품의 특성&lt;/li&gt;
  &lt;li&gt;컴퓨터의 특성&lt;/li&gt;
  &lt;li&gt;개발 요원의 특성&lt;/li&gt;
  &lt;li&gt;프로젝트 특성&lt;/li&gt;
  &lt;li&gt;개발 노력(MM) = 기본 COCOMO의 MM * 요인별 노력 승수&lt;/li&gt;
  &lt;li&gt;개발 기간(TDEV) = c * MM^d&lt;/li&gt;
  &lt;li&gt;적정 투입 인원(FPS) = MM / TDEV&lt;/li&gt;
  &lt;li&gt;인적 비용(COST) = MM * 1인당 월평균 급여&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-발전형-cocomo&quot;&gt;@ 발전형 COCOMO&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;보다 자세하고 정확하게 노력을 산출하여 비용을 산정&lt;/li&gt;
  &lt;li&gt;S/W 환경과 구성 요소가 사전에 정의되어 있어야 함&lt;/li&gt;
  &lt;li&gt;개발 과정의 후반부에 주로 적용&lt;/li&gt;
  &lt;li&gt;중간형 COCOMO 산정 공식을 그대로 사용&lt;/li&gt;
  &lt;li&gt;노력 승수 = 개발 공정별 노력 승수 * 개발 공정별 가중치&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--putnam-모형&quot;&gt;- Putnam 모형&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W 생명 주기의 전 과정 동안에 사용될 노력의 분포를 가정해주는 모형&lt;/li&gt;
  &lt;li&gt;생명 주기 예측 모형이라고도 함&lt;/li&gt;
  &lt;li&gt;Rayleigh-Norden 곡선의 노력 분포도를 기초로 함&lt;/li&gt;
  &lt;li&gt;대형 프로젝트의 노력 분포 산정에 이용&lt;/li&gt;
  &lt;li&gt;개발 기간이 늘어날수록 프로젝트 적용 인원의 노력이 감소&lt;/li&gt;
  &lt;li&gt;개발 노력(MM) = 원시코드 라인수^3 / (환경상수^3 * 개발기간^4)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--기능-점수fp-모형&quot;&gt;- 기능 점수(FP) 모형&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W의 기능을 증대시키는 요인별로 가중치를 부여&lt;/li&gt;
  &lt;li&gt;요인별 가중치를 합산하여 총 기능 점수를 산출&lt;/li&gt;
  &lt;li&gt;총 기능 점수와 영향도를 이용하여 기능 점수를 구하고 이를 이용해서 비용 산정&lt;/li&gt;
  &lt;li&gt;기능 점수(FP) = 총 기능 점수 * (0.65 +(0.1 * 총 영향도))&lt;/li&gt;
  &lt;li&gt;유용성과 간편성으로 비용 산정 기법 가운데 최선의 평가를 받음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--자동화-추정-도구&quot;&gt;- 자동화 추정 도구&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;비용 산정의 자동화를 위해 개발된 도구&lt;/li&gt;
  &lt;li&gt;SLIM : Rayleigh-Norden 곡선과 Putnam 예측 모델을 기초로 함&lt;/li&gt;
  &lt;li&gt;ESTIMACS : FP 모형을 기초로 함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-소프트웨어-개발-표준--b&quot;&gt;6. 소프트웨어 개발 표준 – B&lt;/h2&gt;

&lt;h3 id=&quot;--소프트웨어-개발-표준의-개요&quot;&gt;- 소프트웨어 개발 표준의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W 개발 단계에서 수행하는 품질 관리에 사용되는 국제 표준&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--isoiec-12207&quot;&gt;- ISO/IEC 12207&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W 개발, 운영, 유지보수 등을 체계적으로 관리하기 위한 S/W 생명 주기 표준 제공&lt;/li&gt;
  &lt;li&gt;기본 생명 주기 프로세스&lt;/li&gt;
  &lt;li&gt;지원 생명 주기 프로세스&lt;/li&gt;
  &lt;li&gt;조직 생명 주기 프로세스&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--cmmicapability-maturity-model-integration&quot;&gt;- CMMI(Capability Maturity Model Integration)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W 개발 조직의 업무 능력 및 조직의 성숙도를 평가하는 모델&lt;/li&gt;
  &lt;li&gt;초기 -&amp;gt; 관리 -&amp;gt; 정의 -&amp;gt; 정량적 관리 -&amp;gt; 최적화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--spicesoftware-process-improvement-and-capability-determination&quot;&gt;- SPICE(Software Process Improvement and Capability dEtermination)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정보 시스템 분야에서 S/W 품질 및 생산성 향상을 위하 S/W 프로세스를 평가 및 개선&lt;/li&gt;
  &lt;li&gt;공식 명칭은 ISO/IEC 15504&lt;/li&gt;
  &lt;li&gt;목적
    &lt;ul&gt;
      &lt;li&gt;프로세스 개선을 위해 개발 기관이 스스로 평가하는 것&lt;/li&gt;
      &lt;li&gt;요구조건의 만족여부를 개발 조직이 스스로 평가하는 것&lt;/li&gt;
      &lt;li&gt;계약 체결을 위해 수탁 기관의 프로세스를 평가하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;고객-공급자 프로세스&lt;/li&gt;
  &lt;li&gt;공학 프로세스&lt;/li&gt;
  &lt;li&gt;지원 프로세스&lt;/li&gt;
  &lt;li&gt;관리 프로세스&lt;/li&gt;
  &lt;li&gt;조직 프로세스&lt;/li&gt;
  &lt;li&gt;불완전 -&amp;gt; 수행 -&amp;gt; 관리 -&amp;gt; 확립 -&amp;gt; 예측 -&amp;gt; 최적화&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-소프트웨어-개발-방법론-테일러링--b&quot;&gt;7. 소프트웨어 개발 방법론 테일러링 – B&lt;/h2&gt;

&lt;h3 id=&quot;--소프트웨어-개발-방법론-테일러링의-개요&quot;&gt;- 소프트웨어 개발 방법론 테일러링의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트 상황 및 특성에 맞도록 정의된 S/W 개발 방법론의 절차, 사용기법 등으 ㄹ수정 및 보완하는 작업&lt;/li&gt;
  &lt;li&gt;프로젝트 특징 정의 -&amp;gt; 표준 프로세스 선정 및 검증 -&amp;gt; 상위 수준의 커스터마이징 -&amp;gt; 세부 커스터마이징 -&amp;gt; 테일러링 문서화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--소프트웨어-개발-방법론-테일러링-고려사항&quot;&gt;- 소프트웨어 개발 방법론 테일러링 고려사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;내부적 요건
    &lt;ul&gt;
      &lt;li&gt;목표 환경&lt;/li&gt;
      &lt;li&gt;요구사항&lt;/li&gt;
      &lt;li&gt;프로젝트 규모&lt;/li&gt;
      &lt;li&gt;보유 기술&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;외부적 요건
    &lt;ul&gt;
      &lt;li&gt;법적 제약사항&lt;/li&gt;
      &lt;li&gt;표준 품질 기준&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--소프트웨어-개발-방법론-테일러링-기법&quot;&gt;- 소프트웨어 개발 방법론 테일러링 기법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트 규모와 복잡도에 따른 테일러링 기법&lt;/li&gt;
  &lt;li&gt;프로젝트 구성원에 따른 테일러링 기법&lt;/li&gt;
  &lt;li&gt;팀내 방법론 지원에 따른 테일러링 기법&lt;/li&gt;
  &lt;li&gt;자동화에 따른 테일러링 기법&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-소프트웨어-개발-프레임워크--b&quot;&gt;8. 소프트웨어 개발 프레임워크 – B&lt;/h2&gt;

&lt;h3 id=&quot;--소프트웨어-개발-프레임워크의-개요&quot;&gt;- 소프트웨어 개발 프레임워크의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W 개발에 공통적으로 사용되는 구성 요소와 아키텍처를 일반화하여 손쉽게 구현할 수 있도록 여러 가지 기능들을 제공해주는 반제품 형태의 S/W 시스템&lt;/li&gt;
  &lt;li&gt;예외 처리, 트랜잭션 처리, 메모리 공유, 데이터 소스 관리, 서비스 관리, 쿼리 서비스, 로깅 서비스, 사용자 인증 서비스 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--스프링-프레임워크&quot;&gt;- 스프링 프레임워크&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자바 플랫폼을 위한 오픈 소스 경량형 애플리케이션 프레임워크&lt;/li&gt;
  &lt;li&gt;동적인 웹 사이트의 개발을 위해 다양한 서비스 제공&lt;/li&gt;
  &lt;li&gt;전자정부 표준 프레임워크의 기반 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--전자정부-프레임워크&quot;&gt;- 전자정부 프레임워크&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;공공부문 정보화 사업 시 효율적인 정보 시스템의 구축을 지원하기 위해 필요한 기능 및 아키텍처를 제공하는 프레임워크&lt;/li&gt;
  &lt;li&gt;응용 S/W의 표준화, 품질 및 재사용성의 향상을 목적으로 함&lt;/li&gt;
  &lt;li&gt;오픈 소스 기반의 범용화와 공개된 기술을 활용하여 특정 업체의 종속성 배제&lt;/li&gt;
  &lt;li&gt;사업별 공통 컴포넌트의 중복 개발 방지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--닷넷-프레임워크&quot;&gt;- 닷넷 프레임워크&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 프로그램 개발 및 실행 환경을 제공하는 프레임워크&lt;/li&gt;
  &lt;li&gt;통합 인터넷 전략을 위해 개발&lt;/li&gt;
  &lt;li&gt;코드 실행을 관리하는 CLR이라는 이름의 가상머신 상에서 작동&lt;/li&gt;
  &lt;li&gt;메모리 관리, 유형 및 메모리 안정성, 보안, 네트워크 작업 등 제공&lt;/li&gt;
&lt;/ul&gt;</content><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 5과목 1장</summary></entry><entry><title type="html">[Git &amp;amp; Github] Branch</title><link href="https://leewonwoo1.github.io/git/etc-git-branch/" rel="alternate" type="text/html" title="[Git &amp;amp; Github] Branch" /><published>2021-08-03T03:00:00+09:00</published><updated>2021-08-03T12:00:00+09:00</updated><id>https://leewonwoo1.github.io/git/etc-git-branch</id><content type="html" xml:base="https://leewonwoo1.github.io/git/etc-git-branch/">&lt;h2 id=&quot;1-branch란&quot;&gt;1. Branch란?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;독립적인 Working Directory&lt;/li&gt;
  &lt;li&gt;새로운 작업공간으로 서로 다른 작업과 테스트가 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-branch-model&quot;&gt;2. Branch Model&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;master branch
    &lt;ul&gt;
      &lt;li&gt;프로젝트의 기본 branch&lt;/li&gt;
      &lt;li&gt;git init으로 자동 생성&lt;/li&gt;
      &lt;li&gt;배포용 branch&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;develop branch
    &lt;ul&gt;
      &lt;li&gt;메인 branch&lt;/li&gt;
      &lt;li&gt;통합 branch&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;feature branch
    &lt;ul&gt;
      &lt;li&gt;topic branch 역할&lt;/li&gt;
      &lt;li&gt;버그의 수정과 새로운 기능 개발&lt;/li&gt;
      &lt;li&gt;원격으로 관리하지 않음&lt;/li&gt;
      &lt;li&gt;개발이 완료되면, develop branch로 merge&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;release branch
    &lt;ul&gt;
      &lt;li&gt;버그 수정 작업 후 정상적으로 동작해 배포 가능하면 master branch로 merge&lt;/li&gt;
      &lt;li&gt;‘release-‘를 branch 이름 앞에 붙임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;hotfix branch
    &lt;ul&gt;
      &lt;li&gt;배포한 버전에 수정이 필요할 경우&lt;/li&gt;
      &lt;li&gt;‘hotfix-‘를 branch 이름 앞에 붙임&lt;/li&gt;
      &lt;li&gt;변경 사항을 develop branch에 merge&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-명령어&quot;&gt;3. 명령어&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 원하는 이름의 branch 생성&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch 이름

&lt;span class=&quot;c&quot;&gt;# 로컬 저장소 branch list 확인&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch

&lt;span class=&quot;c&quot;&gt;# 원격 저장소 branch list 확인&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 로컬, 원격 저장소 branch list 확인&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 생성된 branch로 이동&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout 이름

&lt;span class=&quot;c&quot;&gt;# 생성과 동시에 branch로 이동&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; 이름

&lt;span class=&quot;c&quot;&gt;# 원격 저장소에 있는 branch를 가져와서 해당 branch로 이동&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 이름

&lt;span class=&quot;c&quot;&gt;# 로컬 저장소에서 branch 삭제&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; 이름
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-branch-working-flow&quot;&gt;4. Branch Working Flow&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch login
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; login
개발
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Add login in new branch'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin login
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout master
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git pull origin login
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin master
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><category term="Git" /><category term="Github" /><category term="Git" /><summary type="html">독립적인 Working Directory, Branch</summary></entry><entry><title type="html">[Git &amp;amp; Github] 버전 관리</title><link href="https://leewonwoo1.github.io/git/etc-git-versionmanage/" rel="alternate" type="text/html" title="[Git &amp;amp; Github] 버전 관리" /><published>2021-08-03T02:00:00+09:00</published><updated>2021-08-03T11:00:00+09:00</updated><id>https://leewonwoo1.github.io/git/etc-git-versionmanage</id><content type="html" xml:base="https://leewonwoo1.github.io/git/etc-git-versionmanage/">&lt;h2 id=&quot;1-git이란&quot;&gt;1. Git이란?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;컴퓨터 파일의 변경사항을 추적&lt;/li&gt;
  &lt;li&gt;여러 사용자들 간에 해당 파일 작업을 조율&lt;/li&gt;
  &lt;li&gt;대표적인 버전 관리 시스템(VCS)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-git-사용-준비&quot;&gt;2. Git 사용 준비&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 개행 문자(Newline) 설정&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# macOS, Linux&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; core.autocrlf input
&lt;span class=&quot;c&quot;&gt;# Windows&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; core.autocrlf &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 사용자 정보&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# commit(버전 생성)을 위한 정보 등록&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name &lt;span class=&quot;s1&quot;&gt;'Github 계정 이름'&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email &lt;span class=&quot;s1&quot;&gt;'Github 이메일'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 구성 확인&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Q키를 눌러서 종료&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-git-명령어&quot;&gt;3. Git 명령어&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 현재 프로젝트에서 변경사항 추적(버전관리) 시작&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init

&lt;span class=&quot;c&quot;&gt;# 원격 저장소를 로컬 저장소로 복사&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone 원격 저장소 url

&lt;span class=&quot;c&quot;&gt;# 변경사항을 추적할 특정 파일을 지정&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add 파일 이름

&lt;span class=&quot;c&quot;&gt;# 모든 파일의 변경사항을 추적하도록 지정&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 버전관리 상태 확인&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git status

&lt;span class=&quot;c&quot;&gt;# 메시지(-m)와 함께 버전을 생성&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'메시지'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# commit list 확인&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log

&lt;span class=&quot;c&quot;&gt;# 한 버전 뒤로 되돌리기&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset &lt;span class=&quot;nt&quot;&gt;--hard&lt;/span&gt; HEAD~1

&lt;span class=&quot;c&quot;&gt;# N 버전 뒤로 되돌리기&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset &lt;span class=&quot;nt&quot;&gt;--hard&lt;/span&gt; HEAD~N

&lt;span class=&quot;c&quot;&gt;# 되돌린 버전 원상복귀&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset &lt;span class=&quot;nt&quot;&gt;--hard&lt;/span&gt; ORIG_HEAD

&lt;span class=&quot;c&quot;&gt;# origin이라는 별칭으로 원격 저장소를 연결&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote add origin 원격 저장소 url

&lt;span class=&quot;c&quot;&gt;# origin이란 별칭의 원격 저장소로 버전 내역 전송&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin master

&lt;span class=&quot;c&quot;&gt;# 원격 저장소의 master 브랜치 내역 당겨오기&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git pull origin master

&lt;span class=&quot;c&quot;&gt;# 병합 없이 원격 저장소의 최신 내용으로 업데이트&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git fetch

&lt;span class=&quot;c&quot;&gt;# 파일이 삭제 됐거나 원격 서버에 반영하지 않음&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;삭제할 파일

&lt;span class=&quot;c&quot;&gt;# Stage Area에서만 제거하고 Working Directory 상태는 유지&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--cached&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 아직 add 되지 않은 Working Directory 파일을 스택에 임시 저장&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash

&lt;span class=&quot;c&quot;&gt;# git stash 목록 확인&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash list

&lt;span class=&quot;c&quot;&gt;# 가장 최근의 stash 적용&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash apply
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><category term="Git" /><category term="Github" /><category term="Git" /><summary type="html">Git과 Github을 사용한 프로젝트 버전 관리 방법</summary></entry><entry><title type="html">[Javascript] 조건문, DOM API, 메소드 체이닝</title><link href="https://leewonwoo1.github.io/javascript/frontend-javascript-ifdomchain/" rel="alternate" type="text/html" title="[Javascript] 조건문, DOM API, 메소드 체이닝" /><published>2021-08-03T01:00:00+09:00</published><updated>2021-08-03T10:00:00+09:00</updated><id>https://leewonwoo1.github.io/javascript/frontend-javascript-ifdomchain</id><content type="html" xml:base="https://leewonwoo1.github.io/javascript/frontend-javascript-ifdomchain/">&lt;h2 id=&quot;1-조건문&quot;&gt;1. 조건문&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;조건의 결과에 따라 다른 코드를 실행하는 구문&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isShow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Show&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Checked&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isShow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Show&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hide&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-dom-api&quot;&gt;2. DOM API&lt;/h2&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;box&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Box!!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// HTML 요소 1개 검색&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// HTML 요소에 적용할 수 있는 메소드&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 인수 추가 가능&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 1 - 이벤트(Event, 상황)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 2 - 핸들러(Handler, 실행할 함수)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Click!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// HTML 요소 1개 검색&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 요소의 클래스 정보 객체 활용&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isContains&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isContains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;isContains&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isContains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// HTML 요소 모두 검색&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boxEls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boxEls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 찾은 요소들 반복해서 함수 실행&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 익명 함수를 인수로 추가&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;boxEls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 첫 번째 매개변수 : 반복 중인 요소&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 두 번째 매개변수 : 반복 중인 번호&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;boxEls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 출력&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;boxEls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`order-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Getter, 값을 얻는 용도&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// BOX!!&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Setter, 값을 지정하는 용도&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Change!!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boxEl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Change!!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-메소드-체이닝&quot;&gt;3. 메소드 체이닝&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// split : 문자를 인수 기준으로 쪼개서 배열로 반환&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// reverse : 배열 뒤집기&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// join : 배열을 인수 기준으로 문자로 병합해 반환&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 메소드 체이닝&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Hello!&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// !olleH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><category term="Javascript" /><category term="Javascript" /><category term="Programming" /><category term="Web" /><summary type="html">if, else, Document Object Model, Method Chaining 정리</summary></entry><entry><title type="html">[Javascript] 변수, 함수</title><link href="https://leewonwoo1.github.io/javascript/frontend-javascript-varifunc/" rel="alternate" type="text/html" title="[Javascript] 변수, 함수" /><published>2021-08-03T00:00:00+09:00</published><updated>2021-08-03T09:00:00+09:00</updated><id>https://leewonwoo1.github.io/javascript/frontend-javascript-varifunc</id><content type="html" xml:base="https://leewonwoo1.github.io/javascript/frontend-javascript-varifunc/">&lt;h2 id=&quot;1-변수&quot;&gt;1. 변수&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;데이터를 저장하고 참조하는 데이터의 이름&lt;/li&gt;
  &lt;li&gt;var, let, const&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--let&quot;&gt;- let&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 재사용 가능&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 7&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// -3&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 10&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 0.4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 값의 재할당 가능&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 12&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 999&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--const&quot;&gt;- const&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 값의 재할당 불가&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 12&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// TypeError: Assignment to constant variable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-함수&quot;&gt;2. 함수&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;특정 동작을 수행하는 일부 코드의 집합&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 함수 선언&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;helloFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 실행 코드&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 함수 호출&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;helloFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Hello&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returnFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ruturn&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;777&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returnFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 777&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// a, b는 매개변수(Parameters)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 재사용&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 1, 2는 인수(Arguments)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 3, 7, 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 기명 함수&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 익명함수&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;world&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Hello&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// World&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 객체 데이터&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lww&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;LWW&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 메소드&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hisName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lww&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hisName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// LWW&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 혹은&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lww&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// LWW&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-예약어&quot;&gt;3. 예약어&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;특별한 의미를 가지고 있어, 변수나 함수 이름 등으로 사용할 수 없는 단어&lt;/li&gt;
  &lt;li&gt;break, case, catch, continue, default, delete, do, else, false, finally, for, function, if, in, instanceof, new, null, return, switch, this, throw, true, try, typeof, var, void, while, with, abstract, boolean, byte, char, class, const, debugger, double, enum, export, extends, final, float, goto, implements, import, int, interface, long, native, package, private, protected, public, short, static, super, synchronized, throws, transient, volatile, as, is, namespace, use, arguments, Array, Boolean, Date, decodeURI, decodeURIComponent, encodeURI, Error, escape, eval, EvalError, Function, Infinity, isFinite, isNaN, Math, NaN, Number, Object, parseFloat, parseInt, RangeError, ReferenceError, RegExp, String, SyntaxError, TypeError, undefined, unescape, URIError …&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// SyntaxError&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// SyntaxError&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// SyntaxEr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><category term="Javascript" /><category term="Javascript" /><category term="Programming" /><category term="Web" /><summary type="html">데이터를 저장하고 참조하는 변수, 동작을 수행하는 코드인 함수</summary></entry><entry><title type="html">[정보처리기사 필기] 4-3. 응용 SW 기초 기술 활용</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp17/" rel="alternate" type="text/html" title="[정보처리기사 필기] 4-3. 응용 SW 기초 기술 활용" /><published>2021-08-02T20:00:00+09:00</published><updated>2021-08-03T05:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp17</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp17/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 일부 제외&lt;/p&gt;

&lt;h2 id=&quot;1-운영체제의-개념--a&quot;&gt;1. 운영체제의 개념 – A&lt;/h2&gt;

&lt;h3 id=&quot;--운영체제os-operating-system의-정의&quot;&gt;- 운영체제(OS; Operating System)의 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시스템의 자원을 효율적으로 관리&lt;/li&gt;
  &lt;li&gt;컴퓨터를 편리하고 효과적으로 사용할 수 있도록 환경을 제공&lt;/li&gt;
  &lt;li&gt;사용자와 하드웨어 간의 인터페이스로서 동작하는 시스템 S/W&lt;/li&gt;
  &lt;li&gt;응용 프로그램이 유용한 작업을 할 수 있도록 환경 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--운영체제의-목적&quot;&gt;- 운영체제의 목적&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;처리 능력 : 일정 시간 내에 시스템이 처리하는 일의 양&lt;/li&gt;
  &lt;li&gt;반환 시간 : 작업을 의뢰한 시간부터 처리가 완료될 때까지 걸린 시간&lt;/li&gt;
  &lt;li&gt;사용 가능도 : 즉시 사용 가능한 정도&lt;/li&gt;
  &lt;li&gt;신뢰도 : 문제를 정확하게 해결하는 정도&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--운영체제의-기능&quot;&gt;- 운영체제의 기능&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세서, 기억장치, 입출력장치, 파일 및 정보 등의 자원 관리&lt;/li&gt;
  &lt;li&gt;자원의 스케줄링 기능 제공&lt;/li&gt;
  &lt;li&gt;편리한 인터페이스 제공&lt;/li&gt;
  &lt;li&gt;각종 하드웨어와 네트워크를 관리 및 제어&lt;/li&gt;
  &lt;li&gt;데이터를 관리하고 데이터 및 자원의 공유 기능 제공&lt;/li&gt;
  &lt;li&gt;시스템의 오류를 검사하고 복구&lt;/li&gt;
  &lt;li&gt;자원 보호 기능 제공&lt;/li&gt;
  &lt;li&gt;입출력에 대한 보조 기능 제공&lt;/li&gt;
  &lt;li&gt;가상 계산기 기능 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--운영체제의-주요-자원-관리&quot;&gt;- 운영체제의 주요 자원 관리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세스 관리 : 스케줄링 및 동기화 관리, 생성과 제거, 시작과 정지, 메시지 전달&lt;/li&gt;
  &lt;li&gt;기억장치 관리 : 프로세스에게 메모리 할당 및 회수 관리&lt;/li&gt;
  &lt;li&gt;주변장치 관리 : 입출력장치 스케줄링 및 전반적인 관리&lt;/li&gt;
  &lt;li&gt;파일 관리 : 파일의 생성과 삭제, 변경, 유지 등의 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--운영체제의-종류&quot;&gt;- 운영체제의 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Windows : MS사 개발. GUI&lt;/li&gt;
  &lt;li&gt;UNIX : AT&amp;amp;T 벨 연구소, MIT, General Electric 공동 개발. CLI&lt;/li&gt;
  &lt;li&gt;LINUX : UNIX와 호환이 가능한 커널. 누구나 제한 없이 활용 및 재배포 가능. CLI&lt;/li&gt;
  &lt;li&gt;MacOS : 애플사가 UNIX를 기반으로 개발. GUI&lt;/li&gt;
  &lt;li&gt;MS-DOS : Windows 이전에 사용되던 운영체제. CLI&lt;/li&gt;
  &lt;li&gt;단일 작업 처리 시스템에는 MS-DOS&lt;/li&gt;
  &lt;li&gt;다중 작업 처리 시스템에는 Windows, UNIX, LINUX, MacOS 등&lt;/li&gt;
  &lt;li&gt;개인용 운영체제는 Windows, MacOS, MS-DOS&lt;/li&gt;
  &lt;li&gt;서버용 운영체제는 UNIX, LINUX&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-windows--c&quot;&gt;2. Windows – C&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;GUI&lt;/li&gt;
  &lt;li&gt;선점형 멀티태스킹&lt;/li&gt;
  &lt;li&gt;PnP(Plug and Play, 자동 감지 기능)&lt;/li&gt;
  &lt;li&gt;OLE&lt;/li&gt;
  &lt;li&gt;255자의 긴 파일명&lt;/li&gt;
  &lt;li&gt;Single-User 시스템&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-unixlinuxmacos--a&quot;&gt;3. UNIX/LINUX/MacOS – A&lt;/h2&gt;

&lt;h3 id=&quot;--unix의-개요-및-특징&quot;&gt;- UNIX의 개요 및 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;대화식 운영체제. 소스가 공개된 개방형 시스템&lt;/li&gt;
  &lt;li&gt;C언어로 작성되어 이식성이 높으며 장치, 프로세스 간의 호환성이 높음&lt;/li&gt;
  &lt;li&gt;크기가 작고 이해하기 쉬움&lt;/li&gt;
  &lt;li&gt;Multi-User, Multi-Tasking 지원&lt;/li&gt;
  &lt;li&gt;많은 네트워킹 기능을 제공하므로 통신망 관리용 운영체제로 적합&lt;/li&gt;
  &lt;li&gt;트리 구조의 파일 시스템&lt;/li&gt;
  &lt;li&gt;전문적인 프로그램 개발에 용이&lt;/li&gt;
  &lt;li&gt;다양한 유틸리티 프로그램 존재&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--unix-시스템의-구성&quot;&gt;- UNIX 시스템의 구성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;커널
    &lt;ul&gt;
      &lt;li&gt;컴퓨터가 부팅될 때 주기억장치에 적재된 후 상주하며 실행&lt;/li&gt;
      &lt;li&gt;하드웨어를 보호하고, 프로그램과 하드웨어 간의 인터페이스 역할&lt;/li&gt;
      &lt;li&gt;프로세스 관리, 기억장치 관리, 파일 관리, 입출력 관리, 프로세스간 통신, 데이터 전송 및 변환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;쉘
    &lt;ul&gt;
      &lt;li&gt;명령어를 인식하여 프로그램을 호출하고 명령을 수행하는 명령어 해석기&lt;/li&gt;
      &lt;li&gt;시스템과 사용자 간의 인터페이스 역할&lt;/li&gt;
      &lt;li&gt;DOS의 COMMAND.COM과 같은 기능&lt;/li&gt;
      &lt;li&gt;주기억장치에 상주하지 않고, 명령어가 포함된 파일 형태로 존재&lt;/li&gt;
      &lt;li&gt;보조 기억장치에서 교체 처리 가능&lt;/li&gt;
      &lt;li&gt;파이프라인 기능을 지원하고 입출력 재지정을 통해 출력과 입력의 방향을 변경 가능&lt;/li&gt;
      &lt;li&gt;공용 쉘이나 사용자 자신이 만든 쉘을 사용할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Utility Program
    &lt;ul&gt;
      &lt;li&gt;일반 사용자가 작성한 응용 프로그램을 처리&lt;/li&gt;
      &lt;li&gt;DOS에서의 외부 명령어에 해당&lt;/li&gt;
      &lt;li&gt;에디터, 컴파일러, 인터프리터, 디버거 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--unix에서의-프로세스-간-통신&quot;&gt;- UNIX에서의 프로세스 간 통신&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;각 프로세스는 시스템 호출을 통해 커널의 기능을 사용&lt;/li&gt;
  &lt;li&gt;시그널, 파이프, 소켓 등을 사용&lt;/li&gt;
  &lt;li&gt;시그널 : 간단한 메시지를 이용하여 통신. 초기 UNIX 시스템에서 사용됨&lt;/li&gt;
  &lt;li&gt;파이프 : 한 프로세스의 출력이 다른 프로세스의 입력으로 사용되는 단방향 통신 방식&lt;/li&gt;
  &lt;li&gt;소켓 : 프로세스 사이의 대화를 가능하게 하는 쌍방향 통신 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--linux의-개요-및-특징&quot;&gt;- LINUX의 개요 및 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;UNIX를 기반으로 개발&lt;/li&gt;
  &lt;li&gt;프로그램 소스 코드가 무료로 공개되어 원하는 기능을 추가할 수 있음&lt;/li&gt;
  &lt;li&gt;다양한 플랫폼에 설치하여 사용 가능. 재배포 가능&lt;/li&gt;
  &lt;li&gt;UNIX와 완벽하게 호환&lt;/li&gt;
  &lt;li&gt;대부분의 특지잉 UNIX와 동일&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--macos의-개요-및-특징&quot;&gt;- MacOS의 개요 및 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;애플사가 UNIX를 기반으로 개발&lt;/li&gt;
  &lt;li&gt;애플 사에서 생산하는 제품에서만 사용 가능&lt;/li&gt;
  &lt;li&gt;드라이버 설치 및 install과 uninstall의 과정이 단순&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-기억장치-관리의-개요--a&quot;&gt;4. 기억장치 관리의 개요 – A&lt;/h2&gt;

&lt;h3 id=&quot;--기억장치-계층-구조의-특징&quot;&gt;- 기억장치 계층 구조의 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;레지스터 - 캐시 기억장치 - 주기억장치 - 보조기억장치&lt;/li&gt;
  &lt;li&gt;상위의 기억장치일수록 접근 속도와 접근 시간이 빠르지만, 기억 용량이 적고 고가&lt;/li&gt;
  &lt;li&gt;주기억장치는 각기 자신의 주소를 갖는 워드 또는 바이트들로 구성. 주소를 이용한 액세스 가능&lt;/li&gt;
  &lt;li&gt;레지스터, 캐시 기억장치, 주기억장치의 프로그램과 데이터는 CPU가 직접 액세스 할 수 있음&lt;/li&gt;
  &lt;li&gt;보조기억장치에 있는 프로그램이나 데이터는 CPU가 직접 액세스 할 수 없음&lt;/li&gt;
  &lt;li&gt;보조기억장치에 있는 데이터는 주기억장치에 적재된 후 CPU에 의해 액세스 될 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--기억장치-관리-전략의-개요&quot;&gt;- 기억장치 관리 전략의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보조기억장치의 프로그램이나 데이터를 주기억장치에 적재시키는 시기, 적재 위치등을 지정&lt;/li&gt;
  &lt;li&gt;한정된 주기억장치의 공간을 효율적으로 사용하기 위한 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-반입fetch-전략&quot;&gt;@ 반입(Fetch) 전략&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;보조기억장치에 보관중인 프로그램이나 데이터를 언제 주기억장치로 적재할 것인지를 결정&lt;/li&gt;
  &lt;li&gt;요구반입 : 실행중인 프로그램이 특정 프로그램이나 데이터 등의 참조를 요구할 때 적재&lt;/li&gt;
  &lt;li&gt;예상반입 : 참조될 프ㅗ그램이나 데이터를 미리 예상하여 적재&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-배치placement-전략&quot;&gt;@ 배치(Placement) 전략&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;새로 반입되는 프로그램이나 데이터를 주기억장치의 어디에 위치시킬 것인지를 결정&lt;/li&gt;
  &lt;li&gt;최초 적합 : 빈 영역 중에서 첫 번째 분할 영역에 배치&lt;/li&gt;
  &lt;li&gt;최적 적합 : 빈 영역 중에서 단편화를 가장 작게 남기는 분할 영역에 배치&lt;/li&gt;
  &lt;li&gt;최악 적합 : 빈 영역 중에서 단편화를 가장 많이 남기는 분할 영역에 배치&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-교체replacement-전략&quot;&gt;@ 교체(Replacement) 전략&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;모든 영역이 이미 사용중인 상태에서, 어느 영역을 교체하여 사용할 것인지를 결정&lt;/li&gt;
  &lt;li&gt;FIFO, OPT, LRU, LFU, NUR, SCR 등&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-가상기억장치-구현-기법--페이지-교체-알고리즘--a&quot;&gt;5. 가상기억장치 구현 기법 / 페이지 교체 알고리즘 – A&lt;/h2&gt;

&lt;h3 id=&quot;--가상기억장치의-개요&quot;&gt;- 가상기억장치의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보조기억장치의 일부를 주기억장치처럼 사용하는 것&lt;/li&gt;
  &lt;li&gt;프로그램을 여러 개의 작은 블록 단위로 나누어서 가상 기억장치에 보관&lt;/li&gt;
  &lt;li&gt;프로그램 실행 시 요구되는 블록만 주기억장치에 불연속적으로 할당하여 처리&lt;/li&gt;
  &lt;li&gt;주기억장치의 용량보다 큰 프로그램을 실행하기 위해 사용&lt;/li&gt;
  &lt;li&gt;주기억장치의 이용률과 다중 프로그래밍의 효율을 높일 수 있음&lt;/li&gt;
  &lt;li&gt;가상기억장치의 주소를 주기억장치의 주소로 바꾸는 주소 변환작업이 필요&lt;/li&gt;
  &lt;li&gt;연속 할당 방식에서 발생할 수 있는 단편화를 해결&lt;/li&gt;
  &lt;li&gt;블록의 종류에 따라 페이징 기법과 세그멘테이션 기법으로 나눔&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--페이징paging-기법&quot;&gt;- 페이징(Paging) 기법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;가상기억장치에 보관되어 있는 프로그램과 주기억장치의 영역을 동일한 크기로 나눔&lt;/li&gt;
  &lt;li&gt;나눠진 프로그램을 동일하게 나눠진 주기억장치의 영역에 적재시켜 실행&lt;/li&gt;
  &lt;li&gt;프로그램을 일정한 크기로 나눈 단위를 Page라고 함&lt;/li&gt;
  &lt;li&gt;Page 크기로 일정하게 나누어진 주기억장치의 단위를 Page Frame이라고 함&lt;/li&gt;
  &lt;li&gt;외부 단편화는 발생하지 않으나 내부 단편화는 발생할 수 있음&lt;/li&gt;
  &lt;li&gt;주소 변환을 위해서 페이지의 위치 정보를 가지고 있는 Page Map Table이 필요&lt;/li&gt;
  &lt;li&gt;Page Map Table 사용으로 비용이 증가되고, 처리 속도가 감소&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--세그멘테이션segmentation-기법&quot;&gt;- 세그멘테이션(Segmentation) 기법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;가상기억장치에 보관되어 있는 프로그램을 다양한 크기의 논리적 단위로 나눈 후 주기억장치에 적재시켜 실행&lt;/li&gt;
  &lt;li&gt;프로그램을 배열이나 함수 등과 같은 논리적인 크기로 나눈 단위를 Segment라고 함&lt;/li&gt;
  &lt;li&gt;각 Segment는 고유한 이름과 크기를 가짐&lt;/li&gt;
  &lt;li&gt;기억장치의 사용자 관점을 보존하는 기억장치 관리 기법&lt;/li&gt;
  &lt;li&gt;기억공간을 절약하기 위함&lt;/li&gt;
  &lt;li&gt;주소 변환을 위해서 Segment가 존재하는 위치 정보를 가지고 있는 Segment Map Table 필요&lt;/li&gt;
  &lt;li&gt;Segment가 주기억장치에 적재될 때 다른 Segment에게 할당된 영역을 침범할 수 없음. 기억장치 보호키 필요&lt;/li&gt;
  &lt;li&gt;내부 단편화는 발생하지 않으나 외부 단편화는 발생할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--페이지-교체-알고리즘&quot;&gt;- 페이지 교체 알고리즘&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;페이지 부재가 발생했을 때 가상기억장치의 필요한 페이지를 주기억장치에 적재해야 하는데, 이때 주기억장치의 모든 페이지 프레임이 사용중이면 어떤 페이지 프레임을 선택하여 교체할 것인지를 결정&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-opt최적-교체&quot;&gt;@ OPT(최적 교체)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;앞으로 가장 오랫동안 사용하지 않을 페이지를 교체&lt;/li&gt;
  &lt;li&gt;페이지 부재 횟수가 가장 적게 발생하는 가장 효율적인 알고리즘&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-fifo&quot;&gt;@ FIFO&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;가장 먼저 들어와서 가장 오래 있었던 페이지를 교체&lt;/li&gt;
  &lt;li&gt;이해하기 쉽고, 프로그래밍 및 설계가 간단&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-lruleast-recently-used&quot;&gt;@ LRU(Least Recently Used)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;최근에 가장 오랫동안 사용하지 않은 페이지를 교체&lt;/li&gt;
  &lt;li&gt;각 페이지마다 계수기나 스택을 두어 현 시점에서 가장 오랫동안 사용하지 않은 페이지 교체&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-lfuleast-frequently-used&quot;&gt;@ LFU(Least Frequently Used)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;사용 빈도가 가장 적은 페이지를 교체&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-nurnot-used-recently&quot;&gt;@ NUR(Not Used Recently)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;최근에 사용하지 않은 페이지를 교체&lt;/li&gt;
  &lt;li&gt;LRU에서 나타나는 시간적인 오버헤드를 줄일 수 있음&lt;/li&gt;
  &lt;li&gt;각 페이지마다 참조 비트와 변형 비트를 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-scrsecond-chance-replacement-2차-기회-교체&quot;&gt;@ SCR(Second Chance Replacement, 2차 기회 교체)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;가장 오랫동안 주기억장치에 있던 페이지 중 자주 사용되는 페이지의 교체를 방지하기 위함&lt;/li&gt;
  &lt;li&gt;FIFO기법의 단점을 보완&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-가상기억장치-기타-관리-사항--a&quot;&gt;6. 가상기억장치 기타 관리 사항 – A&lt;/h2&gt;

&lt;h3 id=&quot;--페이지-크기&quot;&gt;- 페이지 크기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;페이지 크기가 작을 경우
    &lt;ul&gt;
      &lt;li&gt;페이지 단편화가 감소, 한 개의 페이지를 주기억장치로 이동하는 시간이 줄어듬&lt;/li&gt;
      &lt;li&gt;효율적인 워킹 셋을 유지&lt;/li&gt;
      &lt;li&gt;기억장치 효율이 높아짐&lt;/li&gt;
      &lt;li&gt;Page Map Table의 크기가 커지고, Mapping 속도가 늦어짐&lt;/li&gt;
      &lt;li&gt;전체적인 입출력 시간은 늘어남&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;페이지 크기가 클 경우
    &lt;ul&gt;
      &lt;li&gt;페이지 단편화가 증가, 한 개의 페이지를 주기억장치로 이동하는 시간이 늘어남&lt;/li&gt;
      &lt;li&gt;불필요한 내용까지도 주기억장치에 적재&lt;/li&gt;
      &lt;li&gt;Page Map Table의 크기가 작아지고, Mapping 속도가 빨라짐&lt;/li&gt;
      &lt;li&gt;전체적인 이불력의 효율성 증가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--locality&quot;&gt;- Locality&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세스가 실행되는 동안 주기억장치를 참조할 때 일부 페이지만 집중적으로 참조하는 성질&lt;/li&gt;
  &lt;li&gt;스래싱을 방지하기 위한 워킹 셋 이론의 기반&lt;/li&gt;
  &lt;li&gt;프로세스가 집중적으로 사용하는 페이지를 알아내는 방법. 가상기억장치 관리의 이론적 근거&lt;/li&gt;
  &lt;li&gt;Denning에 의해 구역성의 개념이 증명. 캐시 메모리 시스템의 이론적 근거&lt;/li&gt;
  &lt;li&gt;시간 구역성
    &lt;ul&gt;
      &lt;li&gt;하나의 페이지를 일정 시간 동안 집중적으로 액세스 하는 현상&lt;/li&gt;
      &lt;li&gt;참조한 페이지는 가까운 시간 내에 계속 참조할 가능성이 높음&lt;/li&gt;
      &lt;li&gt;Loop, Stack, Sub Routine, Counting, Totaling에 사용되는 변수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;공간 구역성
    &lt;ul&gt;
      &lt;li&gt;일정 위치의 페이지를 집중적으로 액세스 하는 현상&lt;/li&gt;
      &lt;li&gt;참조한 페이지 근처의 페이지를 계속 참조할 가능성이 높음&lt;/li&gt;
      &lt;li&gt;배열 순회, 순차적 코드의 실행, 관련된 변수를 근처에 선언하여 할당되는 기억장소, 같은 영역에 있는 변수를 참조할 때&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--워킹-셋working-set&quot;&gt;- 워킹 셋(Working Set)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세스가 일정 시간 동안 자주 참조하는 페이지들의 집합&lt;/li&gt;
  &lt;li&gt;프로그램의 Locality 특징을 이용&lt;/li&gt;
  &lt;li&gt;자주 참조되는 워킹 셋을 주기억장치에 상주시킴으로써 페이지 부재 및 페이지 교체 현상이 줄어들어 프로세스의 기억장치 사용이 안정됨&lt;/li&gt;
  &lt;li&gt;자주 참조하는 페이지들의 집합이 변화하기 때문에 워킹 셋은 시간에 따라 변경됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--페이지-부재-빈도-방식&quot;&gt;- 페이지 부재 빈도 방식&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;페이지 부재는 프로세스 실행 시 참조할 페이지가 주기억장치에 없는 현상&lt;/li&gt;
  &lt;li&gt;페이지 부재 빈도는 페이지 부재가 일어나는 횟수&lt;/li&gt;
  &lt;li&gt;페이지 프레임의 수를 늘리거나 줄여 페이지 부재율을 적정 수준으로 유지하는 방식&lt;/li&gt;
  &lt;li&gt;운영체제는 임의의 페이지 프레임을 할당하고, 부재율이 상한선을 넘어가면 좀더 많은 페이지 프레임을 할당하고, 부재율이 하한선을 넘어가면 페이지 프레임을 회수&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--프리페이징prepaging&quot;&gt;- 프리페이징(Prepaging)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;처음의 과도한 페이지 부재를 방지하기 위해 필요할 것 같은 모든 페이지를 한번에 페이지 프레임에 적재&lt;/li&gt;
  &lt;li&gt;사용되지 않는 페이지가 많을 수도 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--스래싱thrashing&quot;&gt;- 스래싱(Thrashing)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세스의 처리 시간보다 페이지 교체에 소요되는 시간이 더 많아지는 현상&lt;/li&gt;
  &lt;li&gt;자주 페이지 부재가 발생함으로써 나타나는 현상. 시스템의 성능이 저하됨&lt;/li&gt;
  &lt;li&gt;다중 프로그래밍의 정도가 높아짐에 따라 CPU의 이용률은 특정 시점까지는 높아짐&lt;/li&gt;
  &lt;li&gt;정도가 더욱 커지면 스래싱이 나타나고, CPU 이용률은 급격히 감소&lt;/li&gt;
  &lt;li&gt;스래싱 현상 방지 방법
    &lt;ul&gt;
      &lt;li&gt;다중 프로그래밍의 정도를 적정 수준으로 유지&lt;/li&gt;
      &lt;li&gt;페이지 부재 빈도를 조절하여 사용&lt;/li&gt;
      &lt;li&gt;워킹 셋을 유지&lt;/li&gt;
      &lt;li&gt;부족한 자원을 증설하고, 일부 프로세스를 중단시킴&lt;/li&gt;
      &lt;li&gt;CPU 성능에 대한 자료의 지속적 관리 및 분석으로 임계치를 예상하여 운영&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-프로세스의-개요--a&quot;&gt;7. 프로세스의 개요 – A&lt;/h2&gt;

&lt;h3 id=&quot;--프로세스의-정의&quot;&gt;- 프로세스의 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세서에 의해 처리되는 사용자 프로그램, 시스템 프로그램, 실행중인 프로그램&lt;/li&gt;
  &lt;li&gt;작업, 태스크라고도 함&lt;/li&gt;
  &lt;li&gt;PCB를 가진 프로그램&lt;/li&gt;
  &lt;li&gt;실기억장치에 저장된 프로그램&lt;/li&gt;
  &lt;li&gt;프로세서가 할당되는 실체. 디스패치가 가능한 단위&lt;/li&gt;
  &lt;li&gt;프로시저가 활동중인 것&lt;/li&gt;
  &lt;li&gt;비동기적 행위를 일으키는 주체&lt;/li&gt;
  &lt;li&gt;지정된 결과를 얻기 위한 일련의 계통적 동작&lt;/li&gt;
  &lt;li&gt;목적 또는 결과에 따라 발생되는 사건들의 과정&lt;/li&gt;
  &lt;li&gt;운영체제가 관리하는 실행 단위&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--pcbprocess-control-block-프로세스-제어-블록&quot;&gt;- PCB(Process Control Block, 프로세스 제어 블록)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;운영체제가 프로세스에 대한 정요한 정보를 저장해 놓는 곳&lt;/li&gt;
  &lt;li&gt;각 프로세스가 생성될 때마다 고유의 PCB가 생성. 프로세스가 완료되면 PCB 제거&lt;/li&gt;
  &lt;li&gt;PCB에 저장된 정보
    &lt;ul&gt;
      &lt;li&gt;프로세스의 현재 상태&lt;/li&gt;
      &lt;li&gt;포인터&lt;/li&gt;
      &lt;li&gt;프로세스 고유 식별자&lt;/li&gt;
      &lt;li&gt;스케줄링 및 프로세스의 우선순위&lt;/li&gt;
      &lt;li&gt;CPU 레지스터 정보&lt;/li&gt;
      &lt;li&gt;주기억장치 관리 정보&lt;/li&gt;
      &lt;li&gt;입출력 상태 정보&lt;/li&gt;
      &lt;li&gt;계정 정보&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--프로세스-상태-전이&quot;&gt;- 프로세스 상태 전이&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세스가 시스템 내에 존재하는 동안 프로세스의 상태가 변하는 것&lt;/li&gt;
  &lt;li&gt;제출(Submit)
    &lt;ul&gt;
      &lt;li&gt;작업을 시스템에 제출한 상태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;접수(Hold)
    &lt;ul&gt;
      &lt;li&gt;제출된 작업이 스풀 공간인 디스크의 할당 위치에 저장된 상태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;준비(Ready)
    &lt;ul&gt;
      &lt;li&gt;프로세스가 프로세서를 할당받기 위해 기다리고 있는 상태&lt;/li&gt;
      &lt;li&gt;프로세스는 준비상태 큐에서 실행을 준비&lt;/li&gt;
      &lt;li&gt;접수 상태에서 준비 상태로의 전이는 Job 스케줄러에 의해 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;실행(Run)
    &lt;ul&gt;
      &lt;li&gt;준비상태 큐에 있는 프로세스가 프로세서를 할당받아 실행되는 상태&lt;/li&gt;
      &lt;li&gt;할당 시간이 종료되면 프로세스는 준비 상태로 전이&lt;/li&gt;
      &lt;li&gt;입출력 처리가 필요하면 실행중인 프로세스는 대기 상태로 전이&lt;/li&gt;
      &lt;li&gt;준비 상태에서 실행 상태로의 전이는 CPU 스케줄러에 의해 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;종료(Terminated, Exit)
    &lt;ul&gt;
      &lt;li&gt;프로세스의 실행으 끝나고 프로세스 할당이 해제된 상태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--프로세스-상태-전이-관련-용어&quot;&gt;- 프로세스 상태 전이 관련 용어&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Dispatch : 준비 상태에서 대기하고 이쓴 프로세스 중 하나가 프로세서를 할당받아 실행 상태로 전이&lt;/li&gt;
  &lt;li&gt;Wake Up : 입출력 작업이 완료되어 프로세스가 대기 상태에서 준비 상태로 전이&lt;/li&gt;
  &lt;li&gt;Spooling : 다중 프로그래밍 시스템의 성능을 향상시키기 위해 입출력 데이터를 직접 입출력 장치에 보내지 않고 나중에 한꺼번에 입출력하기 위해 디스크에 저장&lt;/li&gt;
  &lt;li&gt;교통량 제어기(Traffic Controller) : 프로세스의 상태에 대한 조사와 통보 담당&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--스레드thread&quot;&gt;- 스레드(Thread)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세스 내에서의 작업 단위. 시스템의 여러 자원을 할당받아 실행하는 프로그램의 단위&lt;/li&gt;
  &lt;li&gt;하나의 프로세스에 하나의 스레드가 존재하는 경우에는 단일 스레드&lt;/li&gt;
  &lt;li&gt;하나 이상의 스레드가 존재하는 경우에는 다중 스레드&lt;/li&gt;
  &lt;li&gt;프로세스의 일부 특성을 갖고 있어 경량 프로세스라고도 함&lt;/li&gt;
  &lt;li&gt;스레드 기반 시스템에서 스레드는 독립적인 스케줄링의 최소 단위로서 프로세스의 역할 담당&lt;/li&gt;
  &lt;li&gt;동일 프로세스 환경에서 서로 독립적인 다중 수행 가능&lt;/li&gt;
  &lt;li&gt;분류
    &lt;ul&gt;
      &lt;li&gt;사용자 수준의 스레드
        &lt;ul&gt;
          &lt;li&gt;사용자가 만든 라이브러리를 사용하여 스레드 운용&lt;/li&gt;
          &lt;li&gt;속도는 빠르지만 구현이 어려움&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;커널 수준의 스레드
        &lt;ul&gt;
          &lt;li&gt;운영체제의 커널에 의해 스레드를 운용&lt;/li&gt;
          &lt;li&gt;구현이 쉽지만 속도가 느림&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;스레드 사용의 장점
    &lt;ul&gt;
      &lt;li&gt;하나의 프로세스를 여러 개의 스레드로 생성하여 병행성을 증진&lt;/li&gt;
      &lt;li&gt;하드웨어, 운영체제의 성능과 응용 프로그램의 처리율을 향상&lt;/li&gt;
      &lt;li&gt;응용 프로그램의 응답 시간을 단축&lt;/li&gt;
      &lt;li&gt;실행 환경을 공유시켜 기억장소의 낭비가 줄어듬&lt;/li&gt;
      &lt;li&gt;프로세스들 간의 통신 향상&lt;/li&gt;
      &lt;li&gt;공통적으로 접근 가능한 기억장치를 통해 효율적으로 통신함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-스케줄링--b&quot;&gt;8. 스케줄링 – B&lt;/h2&gt;

&lt;h3 id=&quot;--스케줄링의-개요&quot;&gt;- 스케줄링의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시스템의 여러 자원을 해당 프로세스에게 할당하는 작업&lt;/li&gt;
  &lt;li&gt;장기 스케줄링
    &lt;ul&gt;
      &lt;li&gt;어떤 프로세스가 시스템의 자원을 차지하게 할 것인가 결정하여 준비상태 큐로 보내는 작업&lt;/li&gt;
      &lt;li&gt;작업 스케줄링, 상위 스케줄링이라고도 함. 작업 스케줄러에 의해 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;중기 스케줄링
    &lt;ul&gt;
      &lt;li&gt;어떤 프로세스들이 CPU를 할당받을 것인지를 결정하는 작업&lt;/li&gt;
      &lt;li&gt;할당받으려는 프로세스가 많으면 일시 보류시킨 후 활성화해서 일시적으로 부하 조절&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단기 스케줄링
    &lt;ul&gt;
      &lt;li&gt;프로세스가 실행되기 위해 CPU를 할당받는 시기와 특정 프로세스를 지정하는 작업&lt;/li&gt;
      &lt;li&gt;프로세서 스케줄링, 하위 스케줄링이라고도 함&lt;/li&gt;
      &lt;li&gt;프로세서 스케줄링 및 문맥 교환은 프로세서 스케줄러에 의해 수행됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--스케줄링의-목적&quot;&gt;- 스케줄링의 목적&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CPU나 자원을 효율적으로 사용하기 위한 정책&lt;/li&gt;
  &lt;li&gt;공정성&lt;/li&gt;
  &lt;li&gt;처리율 증가&lt;/li&gt;
  &lt;li&gt;CPU 이용률 증가&lt;/li&gt;
  &lt;li&gt;우선순위 제도&lt;/li&gt;
  &lt;li&gt;오버헤드 최소화&lt;/li&gt;
  &lt;li&gt;응답 시간 최소화&lt;/li&gt;
  &lt;li&gt;반환 시간 최소화&lt;/li&gt;
  &lt;li&gt;대기 시간 최소화&lt;/li&gt;
  &lt;li&gt;균형 있는 자원의 사용&lt;/li&gt;
  &lt;li&gt;무한 연기 회피&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--프로세스-스케줄링의-기법&quot;&gt;- 프로세스 스케줄링의 기법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;비선점(Non-Preemptive) 스케줄링
    &lt;ul&gt;
      &lt;li&gt;할당된 CPU를 다른 프로세스가 강제로 빼앗아 사용할 수 없는 기법&lt;/li&gt;
      &lt;li&gt;할당되면 해당 프로세스가 완료될 때까지 CPU 사용&lt;/li&gt;
      &lt;li&gt;모든 프로세스에 대한 요구를 공정하게 처리 가능&lt;/li&gt;
      &lt;li&gt;응답 시간의 예측이 용이. 일괄 처리 방식에 적합&lt;/li&gt;
      &lt;li&gt;중요한 작업이 중요하지 않은 작업을 기다리는 경우 발생 가능&lt;/li&gt;
      &lt;li&gt;FCFS, SJF, 우선순위, HRN, 기한부 등의 알고리즘 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;선점(Preemptive) 스케줄링
    &lt;ul&gt;
      &lt;li&gt;할당된 CPU를 우선순위가 높은 다른 프로세스가 강제로 빼앗아 사용할 수 있는 기법&lt;/li&gt;
      &lt;li&gt;우선순위가 높은 프로세스를 빠르게 처리 가능&lt;/li&gt;
      &lt;li&gt;빠른 응답 시간을 요구하는 대화식 시분할 시스템에 사용&lt;/li&gt;
      &lt;li&gt;많은 오버헤드를 초래&lt;/li&gt;
      &lt;li&gt;선점이 가능하도록 일정 시간 배당에 대한 인터럽트용 타이머 클록이 필요&lt;/li&gt;
      &lt;li&gt;Round Robin, SRT, 선점 우선순위, 다단계 큐, 다단계 피드백 큐 등의 알고리즘 존재&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;9-운영체제-기본-명령어--b&quot;&gt;9. 운영체제 기본 명령어 – B&lt;/h2&gt;

&lt;h3 id=&quot;--운영체제-기본-명령어의-개요&quot;&gt;- 운영체제 기본 명령어의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CLI : 키보드로 명령어를 직접 입력하여 작업&lt;/li&gt;
  &lt;li&gt;GUI : 마우스로 아이콘이나 메뉴를 선택하여 작업&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--windows-기본-명령어&quot;&gt;- Windows 기본 명령어&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CLI 기본 명령어
    &lt;ul&gt;
      &lt;li&gt;DIR : 파일 목록 표시&lt;/li&gt;
      &lt;li&gt;COPY : 파일 복사&lt;/li&gt;
      &lt;li&gt;TYPE : 파일 내용 표시&lt;/li&gt;
      &lt;li&gt;REN : 파일 이름 변경&lt;/li&gt;
      &lt;li&gt;DEL : 파일 삭제&lt;/li&gt;
      &lt;li&gt;MD : 디렉터리 생성&lt;/li&gt;
      &lt;li&gt;CD : 디렉터리 위치 변경&lt;/li&gt;
      &lt;li&gt;CLS : 화면 내용 지움&lt;/li&gt;
      &lt;li&gt;ATTRIB : 파일 속성 변경&lt;/li&gt;
      &lt;li&gt;FIND : 파일 찾음&lt;/li&gt;
      &lt;li&gt;CHKDSK : 디스크 상태 점검&lt;/li&gt;
      &lt;li&gt;FORMAT : 디스크 표면을 트랙과 섹터로 나누어 초기화&lt;/li&gt;
      &lt;li&gt;MOVE : 파일 이동&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GUI 기본 명령어
    &lt;ul&gt;
      &lt;li&gt;마우스로 작업&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--unixlinux-기본-명령어&quot;&gt;- UNIX/LINUX 기본 명령어&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CLI 기본 명령어
    &lt;ul&gt;
      &lt;li&gt;cat : 파일 내용 표시&lt;/li&gt;
      &lt;li&gt;chdir : 디렉터리 위치 변경&lt;/li&gt;
      &lt;li&gt;chmod : 파일의 보호모드를 설정하여 파일의 사용 허가를 지정&lt;/li&gt;
      &lt;li&gt;chown : 소유자 변경&lt;/li&gt;
      &lt;li&gt;cp : 파일 복사&lt;/li&gt;
      &lt;li&gt;exec : 새로운 프로세스 수행&lt;/li&gt;
      &lt;li&gt;find : 파일 참음&lt;/li&gt;
      &lt;li&gt;fork : 새로운 프로세스를 생성&lt;/li&gt;
      &lt;li&gt;fsck : 파일 시스템을 검사하고 보수&lt;/li&gt;
      &lt;li&gt;getpid : 자신의 프로세스 아이디를 얻음&lt;/li&gt;
      &lt;li&gt;getppid : 부모 프로세스 아이디를 얻음&lt;/li&gt;
      &lt;li&gt;ls : 디렉터리 내의 파일 목록 확인&lt;/li&gt;
      &lt;li&gt;mount/unmount : 파일 시스템을 마운팅/마운팅 해제&lt;/li&gt;
      &lt;li&gt;rm : 파일 삭제&lt;/li&gt;
      &lt;li&gt;wait : fork후 exec에 의해 실행되는 하위 프로세스 종료 등의 event를 기다림&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GUI 기본 명령어
    &lt;ul&gt;
      &lt;li&gt;X Window라는 별도의 프로그램을 설치하여 운영 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;10-인터넷--a&quot;&gt;10. 인터넷 – A&lt;/h2&gt;

&lt;h3 id=&quot;--인터넷의-개요&quot;&gt;- 인터넷의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;TCP/IP 프로토콜을 기반으로 컴퓨터와 네트워크들이 연결된 광범위한 컴퓨터 통신망&lt;/li&gt;
  &lt;li&gt;미 국방성의 ARPANET에서 시작됨&lt;/li&gt;
  &lt;li&gt;UNIX 운영체제를 기반으로 함&lt;/li&gt;
  &lt;li&gt;시간과 장소에 구애받지 않고 정보 교환 가능&lt;/li&gt;
  &lt;li&gt;모든 컴퓨터는 고유한 IP 주소를 가짐&lt;/li&gt;
  &lt;li&gt;컴퓨터 또는 네트워크를 서로 연결하기 위해 브리지, 라우더, 게이트웨이가 사용됨&lt;/li&gt;
  &lt;li&gt;중추적 역할을 하는 네트워크. 인터넷의 주가 되는 기간망을 Backbone라고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ip-주소internet-protocol-address&quot;&gt;- IP 주소(Internet Protocol Address)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;인터넷에 연결된 모든 컴퓨터 자원을 구분하기 위한 고유한 주소&lt;/li&gt;
  &lt;li&gt;8비트씩 4부분, 총 32비트로 구성&lt;/li&gt;
  &lt;li&gt;네트워크 부분의 길이에 따라 5단계로 구성&lt;/li&gt;
  &lt;li&gt;A Class : 국가나 대형 통신망에 사용(0~127). 2^24개의 호스트 사용 가능&lt;/li&gt;
  &lt;li&gt;B Class : 중대형 통신망에 사용(128~191). 2^16개의 호스트 사용 가능&lt;/li&gt;
  &lt;li&gt;C Class : 소규모 통신망에 사용(192~223). 2^8개의 호스트 사용 가능&lt;/li&gt;
  &lt;li&gt;D Class : 멀티캐스트 용으로 사용(224~239)&lt;/li&gt;
  &lt;li&gt;E Class : 실험적 주소이며 공용되지 않음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--서브네팅subnetting&quot;&gt;- 서브네팅(Subnetting)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;할당된 네트워크 주소를 다시 여러 개의 작은 네트워크로 나누어 사용하는 것&lt;/li&gt;
  &lt;li&gt;4Byte의 IP 주소 중 네트워크 주소와 호스트 주소를 구분하기 위한 비트를 서브넷 마스크라고 하며, 이를 변경하여 네트워크 주소를 여러 개로 분할하여 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ipv6의-개요&quot;&gt;- IPv6의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;현재 사용하고 있는 IPv4의 주소 부족 문제를 해결하기 위해 개발&lt;/li&gt;
  &lt;li&gt;128비트의 긴 주소 사용. 자료 전송 속도가 빠름&lt;/li&gt;
  &lt;li&gt;인증성, 기밀성, 데이터 무결성의 지원으로 보안 문제를 해결&lt;/li&gt;
  &lt;li&gt;IPv4와 호환성이 뛰어남&lt;/li&gt;
  &lt;li&gt;주소의 확장성, 융통성, 연동성이 뛰어남. 실시간 흐름 제어로 향상된 멀티미디어 기능 지원&lt;/li&gt;
  &lt;li&gt;Traffic Class, Flow Label을 이용하여 등급별, 서비스별로 패킷을 구분할 수 있어 품질 보장 용이&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ipv6-구성&quot;&gt;- IPv6 구성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;16비트씩 8부분, 총 128비트&lt;/li&gt;
  &lt;li&gt;각 부분을 16진수로 표현하고 : 으로 구분&lt;/li&gt;
  &lt;li&gt;유니캐스트 : 1:1 통신에 사용&lt;/li&gt;
  &lt;li&gt;멀티캐스트 : 1:다 통신에 사용&lt;/li&gt;
  &lt;li&gt;애니캐스트 : 가장 가까이 있는 단일 수산자 간의 통신. 1:1 통신에 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--도메인-네임&quot;&gt;- 도메인 네임&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;숫자로 된 IP주소를 사람이 이해하기 쉬운 문자 형태로 표현&lt;/li&gt;
  &lt;li&gt;호스트 컴퓨터 이름, 소속 기관 이름, 소속 기관 종류, 국가명 순으로 구성&lt;/li&gt;
  &lt;li&gt;왼쪽에서 오른쪽으로 갈수록 상위 도메인 의미&lt;/li&gt;
  &lt;li&gt;문자로 된 도메인 네임을 컴퓨터가 이해할 수 있는 IP주소로 변환하는 시스템을 DNS라 함&lt;/li&gt;
  &lt;li&gt;이 역할을 하는 서버를 DNS 서버라고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;11-osi-참조-모델--a&quot;&gt;11. OSI 참조 모델 – A&lt;/h2&gt;

&lt;h3 id=&quot;--osi-참조-모델의-개요&quot;&gt;- OSI 참조 모델의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다른 시스템 간의 원활한 통신을 위해 ISO에서 제안한 통신 규약&lt;/li&gt;
  &lt;li&gt;7단계로 표준화하여 규정&lt;/li&gt;
  &lt;li&gt;1~3 계층을 하위 계층, 4~7 계층을 상위 계층&lt;/li&gt;
  &lt;li&gt;하위 계층 : 물리 -&amp;gt; 데이터 링크 -&amp;gt; 네트워크&lt;/li&gt;
  &lt;li&gt;상위 게층 : 전송 -&amp;gt; 세션 -&amp;gt; 표현 -&amp;gt; 응용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--osi-참조-모델의-목적&quot;&gt;- OSI 참조 모델의 목적&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;서로 다른 시스템 간을 상호 접속하기 위한 개념을 규정&lt;/li&gt;
  &lt;li&gt;OSI 규격을 개발하기 위한 범위를 정함&lt;/li&gt;
  &lt;li&gt;관련 규정의 적합성을 조절하기 위한 공통적 기반 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--osi-참조-모델에서의-데이터-단위&quot;&gt;- OSI 참조 모델에서의 데이터 단위&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로토콜 데이터 단위(PDU; Protocol Data Unit)
    &lt;ul&gt;
      &lt;li&gt;동일 계층 간에 교환되는 정보의 단위&lt;/li&gt;
      &lt;li&gt;물리 : 비트&lt;/li&gt;
      &lt;li&gt;데이터 링크 : 프레임&lt;/li&gt;
      &lt;li&gt;네트워크 : 패킷&lt;/li&gt;
      &lt;li&gt;전송 : 세그먼트&lt;/li&gt;
      &lt;li&gt;세션, 표현, 응용 : 메시지&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;서비스 데이터 단위(SDU; Service Data Unit)
    &lt;ul&gt;
      &lt;li&gt;서비스 접근점(SAP)을 통해 상하위 계층끼리 주고받는 정보의 단위&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--물리-계층physical-layer&quot;&gt;- 물리 계층(Physical Layer)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;전송에 필요한 장치 간의 실제 접속과 절단 등 기계적, 전기적, 기능적, 절차적 특성에 대한 규칙 정의&lt;/li&gt;
  &lt;li&gt;물리적 전송 매체와 전송 신호 방식을 정의&lt;/li&gt;
  &lt;li&gt;RS-232C, X.21 등의 표준&lt;/li&gt;
  &lt;li&gt;관련 장비 : 리피터, 허브&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-링크-계층data-link-layer&quot;&gt;- 데이터 링크 계층(Data Link Layer)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;인접한 개방 시스템들 간에 신뢰성 있고 효율적인 정보 전송을 할 수 있도록 함&lt;/li&gt;
  &lt;li&gt;송신 측과 수신 측의 속도 차이를 해결하기 위한 흐름 제어 기능&lt;/li&gt;
  &lt;li&gt;프레임의 시작과 끝을 구분하기 위한 프레임의 동기화 기능&lt;/li&gt;
  &lt;li&gt;오류의 검출과 회복을 위한 오류 제어 기능&lt;/li&gt;
  &lt;li&gt;프레임의 순서적 전송을 위한 순서 제어 기능&lt;/li&gt;
  &lt;li&gt;HDLC, LAPB, LLC, MAC, LAPD, PPP 등의 표준&lt;/li&gt;
  &lt;li&gt;관련 장비 : 랜카드, 브리지, 스위치&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--네트워크-계층network-layer-망-계층&quot;&gt;- 네트워크 계층(Network Layer, 망 계층)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개방 시스템들 간의 네트워크 연결을 관리하는 기능과 데이터의 교환 및 중계 기능&lt;/li&gt;
  &lt;li&gt;네트워크 연결을 설정, 유지, 해제하는 기능&lt;/li&gt;
  &lt;li&gt;경로 설정, 데이터 교환 및 중계, 트래픽 제어, 패킷 정보 전송 수행&lt;/li&gt;
  &lt;li&gt;X.25, IP 등의 표준&lt;/li&gt;
  &lt;li&gt;관련 장비 : 라우터&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--전송-계층transport-layer&quot;&gt;- 전송 계층(Transport Layer)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;논리적 안정과 균일한 데이터 전송 서비스 제공. 종단 시스템 간에 투명한 테이터 전송 가능&lt;/li&gt;
  &lt;li&gt;하위 3계층과 상위 3계층의 인터페이스 담당&lt;/li&gt;
  &lt;li&gt;종단 시스템 간의 전송 연결 설정, 데이터 전송, 연결 해제 기능&lt;/li&gt;
  &lt;li&gt;주소 설정, 다중화, 오류 제어, 흐름 제어 수행&lt;/li&gt;
  &lt;li&gt;TCP, UDP 등의 표준&lt;/li&gt;
  &lt;li&gt;관련 장비 : 게이트웨이&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--세션-계층session-layer&quot;&gt;- 세션 계층(Session Layer)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;송수신 측 간의 관련성을 유지하고 대화 제어를 담당&lt;/li&gt;
  &lt;li&gt;대화 구성 및 동기 제어, 데이터 교환 관리 기능&lt;/li&gt;
  &lt;li&gt;전송하는 정보의 일정한 부분에 체크점을 두어 정보의 수신 상태 체크. 체크점을 동기점이라고 함&lt;/li&gt;
  &lt;li&gt;동기점은 오류가 있는 데이터의 회복을 위해 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--표현-계층presentation-layer&quot;&gt;- 표현 계층(Presentation Layer)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;응용 계층으로부터 받은 데이터를 세션 계층에 보내기 전에 통신에 적당한 형태로 변환&lt;/li&gt;
  &lt;li&gt;세션 계층에서 받은 데이터는 응용 계층에 맞게 변환&lt;/li&gt;
  &lt;li&gt;서로 다른 데이터 표현 형태를 갖는 시스템 간의 상호 접속을 위해 필요&lt;/li&gt;
  &lt;li&gt;코드 변환, 데이터 암호화, 데이터 압축, 구문 검색, 정보 형식 변환, 문맥 관리 기능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--응용-계층application-layer&quot;&gt;- 응용 계층(Application Layer)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자가 OSI 환경에 접근할 수 있도록 서비스 제공&lt;/li&gt;
  &lt;li&gt;응용 프로세스 간의 정보 교환, 전자 사서함, 파일 전송, 가상 터미널 등의 서비스 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;12-네트워크-관련-장비--b&quot;&gt;12. 네트워크 관련 장비 – B&lt;/h2&gt;

&lt;h3 id=&quot;--네트워크-인터페이스-카드nic&quot;&gt;- 네트워크 인터페이스 카드(NIC)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;컴퓨터와 컴퓨터 또는 컴퓨터와 네트워크를 연결하는 장치&lt;/li&gt;
  &lt;li&gt;정보 전송 시 정보가 케이블을 통해 전송될 수 있도록 정보 형태를 변경&lt;/li&gt;
  &lt;li&gt;이더넷 카드(LAN 카드) 혹은 네트워크 어댑터라고도 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--허브hub&quot;&gt;- 허브(Hub)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;한 사무실이나 가까운 거리의 컴퓨터들을 연결하는 장치&lt;/li&gt;
  &lt;li&gt;각 회선을 통합적으로 관리. 신호 증폭 기능을 하는 리피터의 역할도 포함&lt;/li&gt;
  &lt;li&gt;더미 허브
    &lt;ul&gt;
      &lt;li&gt;네트워크에 흐르는 모든 데이터를 단순히 연결하는 기능만을 제공&lt;/li&gt;
      &lt;li&gt;LAN이 보유한 대역폭을 컴퓨터 수만큼 나누어 제공&lt;/li&gt;
      &lt;li&gt;네트워크에 연결된 각 노드를 물리적인 성형 구조로 연결&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;스위칭 허브
    &lt;ul&gt;
      &lt;li&gt;네트워크상에 흐르는 데이터의 유무 및 흐름을 제어&lt;/li&gt;
      &lt;li&gt;각각의 노드가 허브의 최대 대역폭을 사용할 수 있는 지능형 허브&lt;/li&gt;
      &lt;li&gt;최근에 사용되는 허브는 대부분 스위칭 허브&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--리피터repeater&quot;&gt;- 리피터(Repeater)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;전송되는 신호가 전송 선로의 특성 및 외부 충격 등의 요인으로 인해 원래의 형태와 다르게 왜곡되거나 약해질 경우 원래의 신호 형태로 재생하여 다시 전송하는 역할&lt;/li&gt;
  &lt;li&gt;OSI 참조 모델의 물리 계층에서 동작하는 장비&lt;/li&gt;
  &lt;li&gt;근접한 네트워크 사이에 신호를 전송하는 역할&lt;/li&gt;
  &lt;li&gt;전송 거리의 연장 또는 배선의 자유도를 높이기 위한 용도&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--브리지bridge&quot;&gt;- 브리지(Bridge)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;LAN과 LAN을 연결하거나 LAN 안에서의 컴퓨터 그룹을 연결하는 기능&lt;/li&gt;
  &lt;li&gt;데이터 링크 계층 중 MAC(Media Access Control) 계층에서 사용됨&lt;/li&gt;
  &lt;li&gt;트래픽 병목 현상을 줄일 수 있음&lt;/li&gt;
  &lt;li&gt;네트워크를 분산적으로 구성할 수 있어 보안성을 높일 수 있음&lt;/li&gt;
  &lt;li&gt;브리지를 이용한 서브넷 구성 시 전송 가능한 회선 수는 브리지가 n개일 때 n(n-1)/2개&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--스위지switch&quot;&gt;- 스위지(Switch)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;LAN과 LAN을 연결하여 훨씬 더 큰 LAN을 만드는 장치&lt;/li&gt;
  &lt;li&gt;하드웨어를 기반으로 처리하므로 전송 속도가 빠름&lt;/li&gt;
  &lt;li&gt;포트마다 각기 다른 전송 속도를 지원하도록 제어 가능. 수십에서 수백 개의 포트 제공&lt;/li&gt;
  &lt;li&gt;OSI 참조 모델의 데이터 링크 계층에서 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--라우터router&quot;&gt;- 라우터(Router)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;LAN과 LAN의 연결 기능에 데이터 전송의 최적 경로를 선택할 수 있는 기능 추가.&lt;/li&gt;
  &lt;li&gt;LAN과 WAN의 연결도 수행&lt;/li&gt;
  &lt;li&gt;OSI 참조 모델의 네트워크 계층에서 동작하는 장비&lt;/li&gt;
  &lt;li&gt;접속 가능한 경로에 대한 정보를 라우팅 제어표에 저장하여 보관&lt;/li&gt;
  &lt;li&gt;프로토콜 변환 기능 수행&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--게이트웨이gateway&quot;&gt;- 게이트웨이(Gateway)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;전 계층의 프로토콜 구조가 다른 네트워크의 연결을 수행&lt;/li&gt;
  &lt;li&gt;데이터 형식 변환, 주소 변환, 프로토콜 변환 등을 수행&lt;/li&gt;
  &lt;li&gt;LAN에서 다른 네트워크에 데이터를 보내거나 다른 네트워크로부터 데이터를 받아들이는 출입구 역할&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--네트워크-장비-설치-시-고려-사항&quot;&gt;- 네트워크 장비 설치 시 고려 사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;네트워크에 설치된 장비를 최대한 활용&lt;/li&gt;
  &lt;li&gt;시스템 확장이나 증설 등을 고려하여 설계&lt;/li&gt;
  &lt;li&gt;최신 버전을 선정&lt;/li&gt;
  &lt;li&gt;트래픽을 분산시킬 수 있도록 설계&lt;/li&gt;
  &lt;li&gt;관리나 유지 보수가 용이하게 설계&lt;/li&gt;
  &lt;li&gt;장애 발생 시 즉시 조치할 수 있도록 여유 포트를 고려하여 설계&lt;/li&gt;
  &lt;li&gt;신기술 도입 시 연동할 수 있는 미래 지향적인 네트워크 시스템 구축&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;13-프로토콜의-개념--b&quot;&gt;13. 프로토콜의 개념 – B&lt;/h2&gt;

&lt;h3 id=&quot;--프로토콜의-정의&quot;&gt;- 프로토콜의 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;서로 다른 기기들 간의 데이터 교환을 원활하게 수행할 수 있도록 표준화한 통신 규약&lt;/li&gt;
  &lt;li&gt;하드웨어와 소프트웨어, 문서를 모두 규정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--프로토콜의-기본-요소&quot;&gt;- 프로토콜의 기본 요소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;구문(Syntax) : 전송하고자 하는 데이터의 형식, 부호화, 신호 레벨 등을 규정&lt;/li&gt;
  &lt;li&gt;의미(Semantics) : 협조 사항과 오류 관리를 위한 제어 정보 규정&lt;/li&gt;
  &lt;li&gt;시간(Timing) : 두 기기 간의 통신 속도, 메시지의 순서 제어 등 규정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--프로토콜의-기능&quot;&gt;- 프로토콜의 기능&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;단편화와 재결합
    &lt;ul&gt;
      &lt;li&gt;송싱 측에서 전송할 데이터를 전송에 알맞은 크기의 작은 블록으로 자르는 작업을 단편화&lt;/li&gt;
      &lt;li&gt;수신 측에서 단편화된 블록을 원래의 데이터로 모으는 것을 재결합&lt;/li&gt;
      &lt;li&gt;단편화된 데이터 블록을 프로토콜 데이터 단위(PDU)라고 함&lt;/li&gt;
      &lt;li&gt;단편화하여 전송하면 전송 시간이 빠르고, 통신중의 오류를 효과적으로 제어 가능&lt;/li&gt;
      &lt;li&gt;너무 작게 단편화할 경우 재결합 시 처리 시간이 길어지고, 부수적인 데이터가 많아져 비효율적&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;캡슐화
    &lt;ul&gt;
      &lt;li&gt;단편화된 데이터에 송수신지 주소, 오류 검출 코드, 프로토콜 기능을 구현하기 위한 프로토콜 제어 정보 등의 정보를 부가하는 것으로 요약화라고도 함&lt;/li&gt;
      &lt;li&gt;데이터 링크 제어 프로토콜의 HDLC 프레임&lt;/li&gt;
      &lt;li&gt;정보 데이터를 오류 없이 정확하게 전송하기 위해 캡슐화 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;흐름 제어
    &lt;ul&gt;
      &lt;li&gt;수신 측의 처리 능력에 따라 송신 측에서 송신하는 데이터의 전송량, 속도를 조절하는 기능&lt;/li&gt;
      &lt;li&gt;정지-대기, 슬라이딩 윈도우 방식을 이용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;오류 제어
    &lt;ul&gt;
      &lt;li&gt;전송중에 발생하는 오류를 검출하고 정정하여 데이터나 제어 정보의 파손에 대비하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;동기화
    &lt;ul&gt;
      &lt;li&gt;송수신 측이 같은 상태를 유지하도록 타이밍을 맞추는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;순서 제어
    &lt;ul&gt;
      &lt;li&gt;전송되는 PDU에 전송 순서를 부여하는 기능&lt;/li&gt;
      &lt;li&gt;연결 위주의 데이터 전송 방식에만 사용&lt;/li&gt;
      &lt;li&gt;데이터들이 순서적으로 전송되도록 하여 흐름 제어 및 오류 제어를 용이하게 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;주소 지정
    &lt;ul&gt;
      &lt;li&gt;데이터가 목적지까지 정확하게 전송될 수 있도록 목적지 이름, 주소, 경로를 부여하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다중화
    &lt;ul&gt;
      &lt;li&gt;한 개의 통신 회선을 여러 가입자들이 동시에 사용하도록 하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;경로 제어
    &lt;ul&gt;
      &lt;li&gt;송수신 측 간의 송신 경로 중에서 최적의 패킷 교환 경로를 설정하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;전송 서비스
    &lt;ul&gt;
      &lt;li&gt;우선순위 : 우선순위를 부여하여 우선순위가 높은 메시지가 먼저 도착하도록 함&lt;/li&gt;
      &lt;li&gt;서비스 등급 : 서비스 등급을 부여하여 서비스&lt;/li&gt;
      &lt;li&gt;보안성 : 액세스 제한과 같은 보안 체제를 구현&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;14-tcpip--a&quot;&gt;14. TCP/IP – A&lt;/h2&gt;

&lt;h3 id=&quot;--tcpip의-개요&quot;&gt;- TCP/IP의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;인터넷에 연결된 서로 다른 기종의 컴퓨터들이 데이터를 주고받을 수 있도록 하는 표준 프로토콜&lt;/li&gt;
  &lt;li&gt;ARPANET에서 사용하기 시작&lt;/li&gt;
  &lt;li&gt;UNIX의 기본 프로토콜로 사용. 현재 인터넷 범용 프로토콜로 사용&lt;/li&gt;
  &lt;li&gt;TCP 프로토콜 + IP 프로토콜&lt;/li&gt;
  &lt;li&gt;TCP
    &lt;ul&gt;
      &lt;li&gt;전송 계층&lt;/li&gt;
      &lt;li&gt;신뢰성 있는 연결형 서비스 제공&lt;/li&gt;
      &lt;li&gt;패킷의 다중화, 순서 제어, 오류 제어, 흐름 제어 기능 제공&lt;/li&gt;
      &lt;li&gt;스트림 전송 기능 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IP
    &lt;ul&gt;
      &lt;li&gt;네트워크 계층&lt;/li&gt;
      &lt;li&gt;데이터그램을 기반으로 하는 비연결형 서비스 제공&lt;/li&gt;
      &lt;li&gt;패킷의 분해/조립, 주소 지정, 경로 선택 기능 제공&lt;/li&gt;
      &lt;li&gt;헤더의 길이는 최소 20Byte에서 최대 60Byte&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--tcpip의-구조&quot;&gt;- TCP/IP의 구조&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;OSI&lt;/td&gt;
      &lt;td&gt;TCP/IP&lt;/td&gt;
      &lt;td&gt;기능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;응용, 표현, 세션&lt;/td&gt;
      &lt;td&gt;응용&lt;/td&gt;
      &lt;td&gt;응용 프로그램 간 데이터 송수신&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;전송&lt;/td&gt;
      &lt;td&gt;전송&lt;/td&gt;
      &lt;td&gt;호스트들 간의 신뢰성 있는 통신&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;네트워크&lt;/td&gt;
      &lt;td&gt;인터넷&lt;/td&gt;
      &lt;td&gt;데이터 전송을 위한 주소 지정, 경로 설정&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;데이터 링크, 물리&lt;/td&gt;
      &lt;td&gt;네트워크 액세스&lt;/td&gt;
      &lt;td&gt;실제 데이터(프레임)를 송수신&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;--응용-계층의-주요-프로토콜&quot;&gt;- 응용 계층의 주요 프로토콜&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;FTP
    &lt;ul&gt;
      &lt;li&gt;파일을 주고받을 수 있도록하는 원격 파일 전송 프로토콜&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;SMTP
    &lt;ul&gt;
      &lt;li&gt;전자 우편을 교환하는 서비스&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;TELNET
    &lt;ul&gt;
      &lt;li&gt;멀리 떨어져 있는 컴퓨터에 접속하여 자신의 컴퓨터처럼 사용&lt;/li&gt;
      &lt;li&gt;시스템 관리 작업을 할 수 있는 가상의 터미널 기능을 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;SNMP
    &lt;ul&gt;
      &lt;li&gt;TCP/IP의 네트워크 관리 프로토콜&lt;/li&gt;
      &lt;li&gt;네트워크 기기의 네트워크 정보를 네트워크 관리 시스템에 보내는 데 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DNS
    &lt;ul&gt;
      &lt;li&gt;도메인 네임을 IP 주소로 Mapping하는 시스템&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HTTP
    &lt;ul&gt;
      &lt;li&gt;WWW에서 HTML 문서를 송수신 하기 위한 표준 프로토콜&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--전송-계층의-주요-프로토콜&quot;&gt;- 전송 계층의 주요 프로토콜&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;TCP
    &lt;ul&gt;
      &lt;li&gt;양방향 연결형 서비스 제공&lt;/li&gt;
      &lt;li&gt;가상 회선 연결 형태의 서비스 제공&lt;/li&gt;
      &lt;li&gt;스트림 위주의 전달(패킷 단위)&lt;/li&gt;
      &lt;li&gt;신뢰성 있는 경로를 확립하고 메시지 전송 감독&lt;/li&gt;
      &lt;li&gt;순서 제어, 오류 제어, 흐름 제어&lt;/li&gt;
      &lt;li&gt;패킷의 분실, 손상, 지연이나 순서가 틀린 것 등이 발생할 때 투명성 보장하는 통신 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;UDP
    &lt;ul&gt;
      &lt;li&gt;비연결형 서비스 제공&lt;/li&gt;
      &lt;li&gt;상대적으로 단순한 헤더 구조를 가져 오버헤드가 적음&lt;/li&gt;
      &lt;li&gt;빠른 속도, 동시에 여러 사용자에게 데이터 전달, 반복해서 전송할 경우 사용&lt;/li&gt;
      &lt;li&gt;실시간 전송에 유리&lt;/li&gt;
      &lt;li&gt;신뢰성보다는 속도가 중요시되는 네트워크에 사용
-RTCP&lt;/li&gt;
      &lt;li&gt;RTP 패킷의 전송 품질을 제어하기 위한 제어 프로토콜&lt;/li&gt;
      &lt;li&gt;세션에 참여한 각 참여자들에게 주기적으로 제어 정보 전송&lt;/li&gt;
      &lt;li&gt;하위 프로토콜은 데이터 패킷과 제어 패킷의 다중화 제공&lt;/li&gt;
      &lt;li&gt;데이터 전송을 모니터링하고 최소한의 제어와 인증 기능만을 제공&lt;/li&gt;
      &lt;li&gt;RTCP 패킷은 항상 32비트의 경계로 끝남&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인터넷-계층의-주요-프로토콜&quot;&gt;- 인터넷 계층의 주요 프로토콜&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;IP
    &lt;ul&gt;
      &lt;li&gt;전송할 데이터에 주소를 지정하고 경로를 설정하는 기능&lt;/li&gt;
      &lt;li&gt;비연결형인 데이터그램 방식을 사용&lt;/li&gt;
      &lt;li&gt;신뢰성이 보장되지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ICMP
    &lt;ul&gt;
      &lt;li&gt;IP와 조합하여 통신중에 발생하는 오류의 처리와 전송 경로 변경 등을 위한 제어 메시지를 관리&lt;/li&gt;
      &lt;li&gt;헤더는 8Byte&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IGMP
    &lt;ul&gt;
      &lt;li&gt;멀티캐스트를 지원하는 호스트나 라우터 사이에서 멀티캐스트 그룹 유지를 위해 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ARP
    &lt;ul&gt;
      &lt;li&gt;호스트의 IP 주소를 호스트와 연결된 네트워크 접속 장치의 물리적 주소(MAC 주소)로 바꿈&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RARP
    &lt;ul&gt;
      &lt;li&gt;ARP와 반대로 물리적 주소를 IP 주소로 변환하는 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--네트워크-액세스-계층의-주요-프로토콜&quot;&gt;- 네트워크 액세스 계층의 주요 프로토콜&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ethernet(IEEE 802.3)
    &lt;ul&gt;
      &lt;li&gt;CSMA/CD 방식의 LAN&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IEEE 802
    &lt;ul&gt;
      &lt;li&gt;LAN을 위한 표준 프로토콜&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HDLC
    &lt;ul&gt;
      &lt;li&gt;비트 위주의 데이터 링크 제어 프로토콜&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;X.25
    &lt;ul&gt;
      &lt;li&gt;패킷 교환망을 통한 DTE와 DCE 간의 인터페이스를 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RS-232C
    &lt;ul&gt;
      &lt;li&gt;공중 전화 교환망(PSTN)을 통한 DTE와 DCE 간의 인터페이스를 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 4과목 3장</summary></entry><entry><title type="html">[정보처리기사 필기] 4-2. 프로그래밍 언어 활용</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp16/" rel="alternate" type="text/html" title="[정보처리기사 필기] 4-2. 프로그래밍 언어 활용" /><published>2021-08-02T18:00:00+09:00</published><updated>2021-08-03T03:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp16</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp16/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 일부 제외&lt;/p&gt;

&lt;h2 id=&quot;1-데이터-타입--b&quot;&gt;1. 데이터 타입 – B&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;변수에 저장될 데이터의 형식&lt;/li&gt;
  &lt;li&gt;데이터 타입의 유형
    &lt;ul&gt;
      &lt;li&gt;Integer : 정수&lt;/li&gt;
      &lt;li&gt;Floating Poing : 소수점 이하가 있는 실수&lt;/li&gt;
      &lt;li&gt;Character : 한 문자. ‘ ‘안에 표시&lt;/li&gt;
      &lt;li&gt;String : 문자열. “ “안에 표시&lt;/li&gt;
      &lt;li&gt;Boolean : True or False. 기본값은 False&lt;/li&gt;
      &lt;li&gt;Array : 같은 타입의 데이터 집합. { }안에 ,로 구분&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--cc의-데이터-타입-크기-및-기억-범위&quot;&gt;- C/C++의 데이터 타입 크기 및 기억 범위&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;종류&lt;/th&gt;
      &lt;th&gt;데이터 타입&lt;/th&gt;
      &lt;th&gt;크기&lt;/th&gt;
      &lt;th&gt;기억 범위&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;문자&lt;/td&gt;
      &lt;td&gt;char&lt;/td&gt;
      &lt;td&gt;1Byte&lt;/td&gt;
      &lt;td&gt;-128 ~ 127&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;부호없는 문자&lt;/td&gt;
      &lt;td&gt;unsigned char&lt;/td&gt;
      &lt;td&gt;1Byte&lt;/td&gt;
      &lt;td&gt;0 ~ 2^8 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;정수&lt;/td&gt;
      &lt;td&gt;short&lt;/td&gt;
      &lt;td&gt;2Byte&lt;/td&gt;
      &lt;td&gt;-2^15 ~ 2^15 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;int&lt;/td&gt;
      &lt;td&gt;4Byte&lt;/td&gt;
      &lt;td&gt;-2^31 ~ 2^31 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;long&lt;/td&gt;
      &lt;td&gt;4Byte&lt;/td&gt;
      &lt;td&gt;-2^31 ~ 2^31 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;long long&lt;/td&gt;
      &lt;td&gt;8Byte&lt;/td&gt;
      &lt;td&gt;-2^63 ~ 2^63 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;부호없는 정수&lt;/td&gt;
      &lt;td&gt;unsigned short&lt;/td&gt;
      &lt;td&gt;2Byte&lt;/td&gt;
      &lt;td&gt;0 ~ 2^16 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;unsigned int&lt;/td&gt;
      &lt;td&gt;4Byte&lt;/td&gt;
      &lt;td&gt;0 ~ 2^32 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;unsigned long&lt;/td&gt;
      &lt;td&gt;4Byte&lt;/td&gt;
      &lt;td&gt;0 ~ 2^64 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;실수&lt;/td&gt;
      &lt;td&gt;float&lt;/td&gt;
      &lt;td&gt;4Byte&lt;/td&gt;
      &lt;td&gt;1.2 * 10^-38 ~ 3.4 * 10^38&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;double&lt;/td&gt;
      &lt;td&gt;8Byte&lt;/td&gt;
      &lt;td&gt;2.2 * 10^-308 ~ 1.8 * 10^308&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;long double&lt;/td&gt;
      &lt;td&gt;8Byte&lt;/td&gt;
      &lt;td&gt;2.2 * 10^-308 ~ 1.8 * 10^308&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;--java의-데이터-타입-크기-및-기억-범위&quot;&gt;- Java의 데이터 타입 크기 및 기억 범위&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;종류&lt;/th&gt;
      &lt;th&gt;데이터 타입&lt;/th&gt;
      &lt;th&gt;크기&lt;/th&gt;
      &lt;th&gt;기억 범위&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;문자&lt;/td&gt;
      &lt;td&gt;char&lt;/td&gt;
      &lt;td&gt;2Byte&lt;/td&gt;
      &lt;td&gt;0 ~ 2^16 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;정수&lt;/td&gt;
      &lt;td&gt;byte&lt;/td&gt;
      &lt;td&gt;1Byte&lt;/td&gt;
      &lt;td&gt;-2^7 ~ 2^7 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;short&lt;/td&gt;
      &lt;td&gt;2Byte&lt;/td&gt;
      &lt;td&gt;-2^15 ~ 2^15 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;int&lt;/td&gt;
      &lt;td&gt;4Byte&lt;/td&gt;
      &lt;td&gt;-2^31 ~ 2~31 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;long&lt;/td&gt;
      &lt;td&gt;8Byte&lt;/td&gt;
      &lt;td&gt;-2^63 ~ 2^63 - 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;실수&lt;/td&gt;
      &lt;td&gt;float&lt;/td&gt;
      &lt;td&gt;4Byte&lt;/td&gt;
      &lt;td&gt;1.4 * 10^-45 ~ 3.4 * 10^38&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;double&lt;/td&gt;
      &lt;td&gt;8Byte&lt;/td&gt;
      &lt;td&gt;4.9 * 10^-324 ~ 1.8 * 10^308&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;논리&lt;/td&gt;
      &lt;td&gt;boolean&lt;/td&gt;
      &lt;td&gt;1Byte&lt;/td&gt;
      &lt;td&gt;true or false&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-변수--a&quot;&gt;2. 변수 – A&lt;/h2&gt;

&lt;h3 id=&quot;--변수명-작성-규칙&quot;&gt;- 변수명 작성 규칙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;영문자, 숫자, 언더바 사용 가능&lt;/li&gt;
  &lt;li&gt;첫 글자는 숫자 올 수 없음&lt;/li&gt;
  &lt;li&gt;글자 수 제한 없음&lt;/li&gt;
  &lt;li&gt;공백이나 특수문자 사용 불가&lt;/li&gt;
  &lt;li&gt;대소문자 구분&lt;/li&gt;
  &lt;li&gt;예약어를 변수명으로 사용할 수 없음&lt;/li&gt;
  &lt;li&gt;변수 선언 시 문장 끝에 반드시 ; 붙어야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--기억-클래스&quot;&gt;- 기억 클래스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기억영역을 결정하는 작업&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;종류&lt;/th&gt;
      &lt;th&gt;기억영역&lt;/th&gt;
      &lt;th&gt;예약어&lt;/th&gt;
      &lt;th&gt;생존기간&lt;/th&gt;
      &lt;th&gt;사용 범위&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;자동 변수&lt;/td&gt;
      &lt;td&gt;메모리(스택)&lt;/td&gt;
      &lt;td&gt;auto&lt;/td&gt;
      &lt;td&gt;일시적&lt;/td&gt;
      &lt;td&gt;지역적&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;레지스터 변수&lt;/td&gt;
      &lt;td&gt;레지스터&lt;/td&gt;
      &lt;td&gt;register&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;정적 변수(내부)&lt;/td&gt;
      &lt;td&gt;메모리(데이터)&lt;/td&gt;
      &lt;td&gt;static&lt;/td&gt;
      &lt;td&gt;영구적&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;정적 변수(외부)&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;전역적&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;외부 변수&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;extern&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;자동 변수
    &lt;ul&gt;
      &lt;li&gt;함수나 코드의 범위를 한정하는 블록 내에서 선언되는 변수&lt;/li&gt;
      &lt;li&gt;함수나 블록을 벗어나면 자동으로 소멸&lt;/li&gt;
      &lt;li&gt;초기화하지 않으면 쓰레기값이 저장됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;외부 변수
    &lt;ul&gt;
      &lt;li&gt;선언된 변수나 함수를 참조하기 위한 변수&lt;/li&gt;
      &lt;li&gt;함수 밖에서 선언&lt;/li&gt;
      &lt;li&gt;함수가 종료된 후에도 값이 소멸되지 않음&lt;/li&gt;
      &lt;li&gt;초기화되지 않으면 자동으로 0으로 초기화&lt;/li&gt;
      &lt;li&gt;다른 파일에서 선언된 변수를 참조할 경우 초기화 할 수 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정적 변수
    &lt;ul&gt;
      &lt;li&gt;함수나 블록 내에서 선언하는 내부 정적 변수, 함수 외부에서 선언하는 외부 정적 변수&lt;/li&gt;
      &lt;li&gt;내부 정적 변수는 함수나 블록 내에서만 사용, 외부 정적 변수는 모든 함수에서 사용&lt;/li&gt;
      &lt;li&gt;함수나 블록이 종료된 뒤에도 값이 소멸되지 않음&lt;/li&gt;
      &lt;li&gt;초기화는 변수 선언 시 한 번만 가능. 초기화를 생략하면 자동으로 0으로 초기화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;레지스터 변수
    &lt;ul&gt;
      &lt;li&gt;메모리가 아닌 CPU 내부의 레지스터에 기억영역을 할당받는 변수&lt;/li&gt;
      &lt;li&gt;자주 사용하는 변수를 레지스터에 저장하여 처리 속도를 높이기 위해 사용&lt;/li&gt;
      &lt;li&gt;함수나 블록을 벗어나면 자동으로 소멸&lt;/li&gt;
      &lt;li&gt;데이터를 저장할 레지스터가 없는 경우 자동 변수로 취급되어 메모리에 할당&lt;/li&gt;
      &lt;li&gt;변수의 주소를 구하는 주소 연산자(&amp;amp;)를 사용할 수 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--변수의-선언&quot;&gt;- 변수의 선언&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자료형 변수명 = 값;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-연산자--a&quot;&gt;3. 연산자 – A&lt;/h2&gt;

&lt;h3 id=&quot;--산술-연산자&quot;&gt;- 산술 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;산술 계산에 사용되는 연산자&lt;/li&gt;
  &lt;li&gt;+, -, *, /, %, ++, –&lt;/li&gt;
  &lt;li&gt;++, –
    &lt;ul&gt;
      &lt;li&gt;전치 : 먼저 변수의 값을 증감시킨 후 변수를 연산에 사용&lt;/li&gt;
      &lt;li&gt;후치 : 변수를 연산에 사용한 후 변수의 값을 증감&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--관계-연산자&quot;&gt;- 관계 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;참, 거짓을 결과로 얻는 연산자&lt;/li&gt;
  &lt;li&gt;==, !=, &amp;gt;, &amp;gt;=, &amp;lt;, &amp;lt;=&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--비트-연산자&quot;&gt;- 비트 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;비트별(0, 1)로 연산하여 결과를 얻는 연산자&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;&amp;amp;, ^,&lt;/td&gt;
          &lt;td&gt;, ~, «, »&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--논리-연산자&quot;&gt;- 논리 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;참, 거짓을 결과로 얻는 연산자&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;&amp;amp;&amp;amp;,&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
          &lt;td&gt;, !&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--대입-연산자&quot;&gt;- 대입 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;연산식을 간략하게 입력할 수 있음&lt;/li&gt;
  &lt;li&gt;산술, 관계, 비트, 논리 연산자에 모두 적용 가능&lt;/li&gt;
  &lt;li&gt;+=, -=, *=, /=, %=, «=, »=&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--조건-연산자&quot;&gt;- 조건 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;조건에 따라 서로 다른 수식을 수행&lt;/li&gt;
  &lt;li&gt;조건 ? 수식1 : 수식2 : 조건의 수식이 참이면 수식1, 거짓이면 수식2 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--기타-연산자&quot;&gt;- 기타 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;sizeof : 자료형의 크기를 표시&lt;/li&gt;
  &lt;li&gt;,(콤마) : 한 줄에 두 개 이상의 수식을 작성하거나 변수를 정의. 순서 연산자&lt;/li&gt;
  &lt;li&gt;(자료형) : 형 변환을 위해 사용. cast 연산자&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--연산자-우선순위&quot;&gt;- 연산자 우선순위&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;대분류&lt;/th&gt;
      &lt;th&gt;중분류&lt;/th&gt;
      &lt;th&gt;연산자&lt;/th&gt;
      &lt;th&gt;결합규칙&lt;/th&gt;
      &lt;th&gt;우선 순위&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;단항 연산자&lt;/td&gt;
      &lt;td&gt;단항 연산자&lt;/td&gt;
      &lt;td&gt;! ~ ++ – sizeof&lt;/td&gt;
      &lt;td&gt;←&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;이항 연산자&lt;/td&gt;
      &lt;td&gt;산술 연산자&lt;/td&gt;
      &lt;td&gt;* / %&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;+ -&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;시프트 연산자&lt;/td&gt;
      &lt;td&gt;« »&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;관계 연산자&lt;/td&gt;
      &lt;td&gt;&amp;lt; &amp;lt;= &amp;gt;= &amp;gt;&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;== !=&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;비트 연산자&lt;/td&gt;
      &lt;td&gt;&amp;amp;&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;^&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;비트 or&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;논리 연산자&lt;/td&gt;
      &lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;논리 or&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
      &lt;td&gt;”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;삼항 연산자&lt;/td&gt;
      &lt;td&gt;조건 연산자&lt;/td&gt;
      &lt;td&gt;? :&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;대입 연산자&lt;/td&gt;
      &lt;td&gt;대입 연산자&lt;/td&gt;
      &lt;td&gt;= += -= *= /= %= «= »= 등&lt;/td&gt;
      &lt;td&gt;←&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;순서 연산자&lt;/td&gt;
      &lt;td&gt;순서 연산자&lt;/td&gt;
      &lt;td&gt;,&lt;/td&gt;
      &lt;td&gt;→&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-제어문--a&quot;&gt;4. 제어문 – A&lt;/h2&gt;

&lt;h3 id=&quot;--단순-if-문&quot;&gt;- 단순 if 문&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;조건이 한 개 일 때 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 조건이 참일 때만 실행&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// 조건이 참일 떄와 거짓 때 실행할 문장이 다름&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--다중-if-문&quot;&gt;- 다중 if 문&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// else if&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// 중첩 if문&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--switch문&quot;&gt;- switch문&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;조건에 따라 분기할 곳이 여러 곳인 경우 간단하게 처리&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;수식&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;레이블&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;레이블&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;default:&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--goto문&quot;&gt;- goto문&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;현재 위치에서 원하는 다른 문장으로 건너뛰어 수행을 계속하기 위해 사용&lt;/li&gt;
  &lt;li&gt;많이 사용하면 프로그램의 이해와 유지 보수가 어려워져 거의 사용하지 않음&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;레이블&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;레이블&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-반복문--a&quot;&gt;5. 반복문 – A&lt;/h2&gt;

&lt;h3 id=&quot;--for문&quot;&gt;- for문&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;초기값, 최종값, 증가값을 지정하는 수식을 이용해 정해진 횟수를 반복&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;식&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;식&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;식&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--while-문&quot;&gt;- while 문&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;조건이 참인 동안 실행할 문장을 반복&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--do--while문&quot;&gt;- do ~ while문&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;실행할 문장을 무조건 한 번 실행한 다음 조건을 판단하여 탈출 여부를 결정&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;실행할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--break-continue&quot;&gt;- break, continue&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;break : switch문이나 반복문 안에서 break가 나오면 블록을 벗어남&lt;/li&gt;
  &lt;li&gt;continue : continue 이후의 문장을 실행하지 않고 제어를 반복문의 처음으로 옮김. 반복문에서만 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-배열과-문자열--a&quot;&gt;6. 배열과 문자열 – A&lt;/h2&gt;

&lt;h3 id=&quot;--배열의-개념&quot;&gt;- 배열의 개념&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개별적인 요소들의 위치는 첨자를 이용하여 지정&lt;/li&gt;
  &lt;li&gt;변수명 뒤에 []를 붙이고 그 안에 사용할 개수 지정&lt;/li&gt;
  &lt;li&gt;배열의 위치는 0부터 시작&lt;/li&gt;
  &lt;li&gt;행 우선으로 데이터가 기억장소에 할당&lt;/li&gt;
  &lt;li&gt;첨자 없이 배열 이름을 사용하면 배열의 첫 번째 요소의 주소를 지정하는 것과 같음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--1차원-배열&quot;&gt;- 1차원 배열&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;자료형&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;개수&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--2차원-배열&quot;&gt;- 2차원 배열&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;자료형&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;행개수&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;열개수&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--배열의-초기화&quot;&gt;- 배열의 초기화&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;배열 선언 시 초기값을 지정할 수 있음&lt;/li&gt;
  &lt;li&gt;배열 선언 시 배열의 크기를 생략하는 경우, 반드시 초기값을 지정해야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--배열-형태의-문자열-변수&quot;&gt;- 배열 형태의 문자열 변수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;C에서 “ “로 묶인 글자는 글자 수에 관계없이 문자열로 처리&lt;/li&gt;
  &lt;li&gt;C에는 문자열을 저장하는 자료형이 없기 때문에 배열, 포인터를 이용하여 처리&lt;/li&gt;
  &lt;li&gt;배열에 문자열을 저장하면 문자열의 끝을 알리기 위한 널 문자(‘\0’)가 자동으로 삽입&lt;/li&gt;
  &lt;li&gt;배열에 문자열을 저장할 때는 배열 선언 시 초기값으로 지정. 선언된 배열에는 문자열 저장 불가&lt;/li&gt;
  &lt;li&gt;널 문자를 고려하여 배열 크기를 지정해야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;배열이름&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;크기&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;문자열&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Java에는 주소를 컨트롤하는 기능이 없음&lt;/li&gt;
  &lt;li&gt;하지만 Java는 문자열을 처리할 수 있도록 클래스를 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-포인터--a&quot;&gt;7. 포인터 – A&lt;/h2&gt;

&lt;h3 id=&quot;--포인터와-포인터-변수&quot;&gt;- 포인터와 포인터 변수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;포인터는 변수의 주소를 말함. C에서는 주소를 제어할 수 있는 기능을 제공&lt;/li&gt;
  &lt;li&gt;변수의 주소를 저장할 때 사용하는 변수를 포인터 변수라 함&lt;/li&gt;
  &lt;li&gt;포인터 변수를 선언할 때는 자료의 형을 먼저 쓰고 변수명 앞에 * 를 붙임(int *a;)&lt;/li&gt;
  &lt;li&gt;포인터 변수에 주소를 저장하기 위해 변수의 주소를 알아낼 때는 변수 앞에 &amp;amp; 를 붙임(a = &amp;amp;b;)&lt;/li&gt;
  &lt;li&gt;실행문에서 포인터에 * 를 붙이면 해당 포인터 변수가 가리키는 곳의 값임(c = *a;)&lt;/li&gt;
  &lt;li&gt;포인터 변수는 동적으로 할당되는 메모리 영역인 힙 영역에 접근하는 동적 변수&lt;/li&gt;
  &lt;li&gt;포인터 변수의 용도
    &lt;ul&gt;
      &lt;li&gt;연결된 자료 구조를 구성하기 위해 사용&lt;/li&gt;
      &lt;li&gt;동적으로 할당된 자료 구조를 지정하기 위해 사용&lt;/li&gt;
      &lt;li&gt;배열을 인수로 전달하기 위해 사용&lt;/li&gt;
      &lt;li&gt;문자열을 표현하기 위해 사용&lt;/li&gt;
      &lt;li&gt;요소를 효율적으로 저장하기 위해 사용&lt;/li&gt;
      &lt;li&gt;메모리에 직접 접근하기 위해 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--포인터와-배열&quot;&gt;- 포인터와 배열&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;배열을 포인터 변수에 저장한 후 포인터를 이용해 배열의 요소에 접근 가능&lt;/li&gt;
  &lt;li&gt;첨자를 생략하고 배열의 대표명만 지정하면 배열의 첫 번째 요소의 주소를 지정하는 것&lt;/li&gt;
  &lt;li&gt;배열 요소에 대한 주소를 지정할 때는 일반 변수와 동일하게 &amp;amp; 연산자 사용&lt;/li&gt;
  &lt;li&gt;배열의 요소가 포인터인 포인터형 배열을 선언할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-데이터-입출력--a&quot;&gt;8. 데이터 입출력 – A&lt;/h2&gt;

&lt;h3 id=&quot;--c언어의-표준-입출력-함수의-개요&quot;&gt;- C언어의 표준 입출력 함수의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;키보드로 입력받아 화면으로 출력할 때 사용하는 함수&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--scanf-함수&quot;&gt;- scanf() 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;표준 입력함수. 키보드로 입력받아 변수에 저장&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 형식&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;서식&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문자열&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;주소&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// % : 서식 문자임을 지정&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 3 : 입력 자릿수를 3자리로 지정&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// d : 10진수로 입력&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;amp;a : 입력받은 데이터를 변수 a의 주소에 저장&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%3d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;특징
    &lt;ul&gt;
      &lt;li&gt;입력받을 데이터의 자료형, 자릿수 등을 지정할 수 있음&lt;/li&gt;
      &lt;li&gt;여러 개의 데이터를 입력 받을 수 있음&lt;/li&gt;
      &lt;li&gt;서식 문자열과 변수의 자료형은 일치해야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;서식 문자열
    &lt;ul&gt;
      &lt;li&gt;%d : 정수형 10진수를 입출력&lt;/li&gt;
      &lt;li&gt;%u : 부호없는 정수형 10진수를 입출력&lt;/li&gt;
      &lt;li&gt;%o : 정수형 8진수를 입출력&lt;/li&gt;
      &lt;li&gt;%x : 정수형 16진수를 입출력&lt;/li&gt;
      &lt;li&gt;%c : 문자를 입출력&lt;/li&gt;
      &lt;li&gt;%s : 문자열을 입출력&lt;/li&gt;
      &lt;li&gt;%f : 소수점을 포함하는 실수를 입출력&lt;/li&gt;
      &lt;li&gt;%e : 지수형 실수를 입출력&lt;/li&gt;
      &lt;li&gt;%ld : long형 10진수를 입출력&lt;/li&gt;
      &lt;li&gt;%lo : long형 8진수를 입출력&lt;/li&gt;
      &lt;li&gt;%lx : long형 16진수를 입출력&lt;/li&gt;
      &lt;li&gt;%p : 주소를 16진수로 입출력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--java에서의-표준-입력&quot;&gt;- Java에서의 표준 입력&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Scanner 클래스를 이용해 키보드로부터 값을 입력받는 객체 변수를 생성한 후 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 형식&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Scanner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scanner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;객체 변수 생성
    &lt;ul&gt;
      &lt;li&gt;Scanner : 입력에 사용할 객체 변수를 생성할 때 사용&lt;/li&gt;
      &lt;li&gt;scan : 객체 변수명&lt;/li&gt;
      &lt;li&gt;new : 객체 생성 예약어&lt;/li&gt;
      &lt;li&gt;Scanner() : 클래스 이름&lt;/li&gt;
      &lt;li&gt;System.in : 표준 입력장치. 즉 키보드&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;객체 변수 활용
    &lt;ul&gt;
      &lt;li&gt;a : 입력받은 값을 저장할 변수&lt;/li&gt;
      &lt;li&gt;scan.nextInt()
        &lt;ul&gt;
          &lt;li&gt;scan : 입력에 사용할 객체 변수 이름&lt;/li&gt;
          &lt;li&gt;nextInt() : 입력받은 값을 정수형으로 반환&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--printf-함수&quot;&gt;- printf() 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;C언어의 표준 출력 함수. 인수로 주어진 값을 화면에 출력&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 형식&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;서식&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문자열&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// % : 서식 문자임을 지정&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// - : 왼쪽부터 출력&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 8 : 출력 자리수를 8자리로 지정&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 2 : 소수점 이하를 2자리로 지정&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// f : 실수로 출력&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%-8.2f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 200.20VV (V는 빈칸을 의미)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;주요 제어 문자
    &lt;ul&gt;
      &lt;li&gt;\n : 커서를 다음 줄 앞으로 이동&lt;/li&gt;
      &lt;li&gt;\b : 커서를 왼쪽으로 한 칸 이동&lt;/li&gt;
      &lt;li&gt;\t : 커서를 일정 간격 띄움&lt;/li&gt;
      &lt;li&gt;\r : 커서를 현재 줄의 처음으로 이동&lt;/li&gt;
      &lt;li&gt;\0 : 널 문자를 출력&lt;/li&gt;
      &lt;li&gt;' : 작은따옴표 출력&lt;/li&gt;
      &lt;li&gt;&quot; : 큰따옴표 출력&lt;/li&gt;
      &lt;li&gt;\a : 스피커로 벨 소리를 출력&lt;/li&gt;
      &lt;li&gt;\ : 역 슬래시를 출력&lt;/li&gt;
      &lt;li&gt;\f : 한 페이지를 넘김&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--java에서의-표준-출력&quot;&gt;- Java에서의 표준 출력&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Java에서 값을 화면에 출력할 때는 printf() 메소드 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 형식&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;서식&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;문자열&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;변수&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;System 클래스의 서브 클래스인 out 클래스의 메소드 printf()를 사용하여 출력&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--기타-표준-입출력-함수&quot;&gt;- 기타 표준 입출력 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;입력
    &lt;ul&gt;
      &lt;li&gt;getchar() : 한 문자를 입력받아 변수에 저장&lt;/li&gt;
      &lt;li&gt;gets() : 문자열을 입력받아 변수로 저장. enter를 누르기 전까지를 하나의 문자열로 인식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;출력
    &lt;ul&gt;
      &lt;li&gt;putchar() : 한 문자를 화면에 출력&lt;/li&gt;
      &lt;li&gt;puts() : 문자열을 화면에 출력한 후 커서를 자동으로 다음 줄 앞으로 이동&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>LWW</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 4과목 2장</summary></entry></feed>