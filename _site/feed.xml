<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://leewonwoo1.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://leewonwoo1.github.io/" rel="alternate" type="text/html" /><updated>2021-07-31T19:24:18+09:00</updated><id>https://leewonwoo1.github.io/feed.xml</id><title type="html">LWW’s Tech Blog</title><subtitle>꾸준히 기록하는 블로그</subtitle><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><entry><title type="html">[정보처리기사 필기] 3-3. SQL 응용</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp12/" rel="alternate" type="text/html" title="[정보처리기사 필기] 3-3. SQL 응용" /><published>2021-07-31T19:00:00+09:00</published><updated>2021-08-01T04:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp12</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp12/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 일부 제외&lt;/p&gt;

&lt;h2 id=&quot;1-sql의-개념--b&quot;&gt;1. SQL의 개념 – B&lt;/h2&gt;

&lt;h3 id=&quot;--sql의-개요&quot;&gt;- SQL의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;국제 표준 DB 언어. 많은 회사에서 RDB를 지원하는 언어로 채택&lt;/li&gt;
  &lt;li&gt;관계대수와 관계해석을 기초로 한 혼합 데이터 언어&lt;/li&gt;
  &lt;li&gt;질의어지만 질의 기능 뿐만 아니라 데이터 구조 정의, 데이터 조작, 제어 기능을 모두 갖춤&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--sql의-분류&quot;&gt;- SQL의 분류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DDL(Data Define Language, 데이터 정의어)
    &lt;ul&gt;
      &lt;li&gt;SCHEMA, DOMAIN, TABLE, VIEW, INDEX를 정의하거나 변경 또는 삭제할 때 사용&lt;/li&gt;
      &lt;li&gt;논리적 데이터 구조와 물리적 데이터 구조의 사상을 정의&lt;/li&gt;
      &lt;li&gt;DB 관리자나 DB 설계자가 사용&lt;/li&gt;
      &lt;li&gt;CREATE : SCHEMA, DOMAIN, TABLE, VIEW, INDEX를 정의&lt;/li&gt;
      &lt;li&gt;ALTER : TABLE에 대한 정의를 변경하는 데 사용&lt;/li&gt;
      &lt;li&gt;DROP : SCHEMA, DOMAIN, TABLE, VIEW, INDEX를 삭제&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DML(Data Manipulation Language, 데이터 조작어)
    &lt;ul&gt;
      &lt;li&gt;저장된 데이터를 실질적으로 처리하는 데 사용&lt;/li&gt;
      &lt;li&gt;DB 사용자와 DB 관리 시스템 간의 인터페이스 제공&lt;/li&gt;
      &lt;li&gt;SELECT : 튜플 검색&lt;/li&gt;
      &lt;li&gt;INSERT : 튜플 삽입&lt;/li&gt;
      &lt;li&gt;DELETE : 튜플 삭제&lt;/li&gt;
      &lt;li&gt;UPDATE : 튜플 내용 변경&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DCL(Data Control Language, 데이터 제어어)
    &lt;ul&gt;
      &lt;li&gt;데이터의 보안, 무결성, 회복, 병행 수행 제어 등을 정의하는데 사용&lt;/li&gt;
      &lt;li&gt;DB 관리자가 데이터 관리를 목적으로 사용&lt;/li&gt;
      &lt;li&gt;COMMIT : 결과를 물리적 디스크로 저장. 작업이 완료되었음을 관리자에게 알려줌&lt;/li&gt;
      &lt;li&gt;ROLLBACK : 비정상적으로 종료되었을 때 원래의 상태로 복구&lt;/li&gt;
      &lt;li&gt;GRANT : 사용자에게 사용 권한을 부여&lt;/li&gt;
      &lt;li&gt;REVOKE : 사용자의 사용 권한을 취소&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-ddl--c&quot;&gt;2. DDL – C&lt;/h2&gt;

&lt;h3 id=&quot;--ddl-개념&quot;&gt;- DDL 개념&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB를 구축하거나 수정 할 목적으로 사용하는 언어&lt;/li&gt;
  &lt;li&gt;데이터 사전에 여러개의 테이블로서 저장됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--create-schema&quot;&gt;- CREATE SCHEMA&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;스키마를 정의하는 명령문&lt;/li&gt;
  &lt;li&gt;스키마 이름과 소유권자나 허가권자를 정의&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SCHEMA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;스키마명&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AUTHORIZATION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;사용자_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ID가 홍길동인 스키마 대학교를 정의하는 SQL문&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SCHEMA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;대학교&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AUTHORIZATION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;홍길동&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;--create-domain&quot;&gt;- CREATE DOMAIN&lt;/h1&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 3과목 3장</summary></entry><entry><title type="html">[정보처리기사 필기] 3-2. 물리 데이터베이스 설계</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp11/" rel="alternate" type="text/html" title="[정보처리기사 필기] 3-2. 물리 데이터베이스 설계" /><published>2021-07-31T08:00:00+09:00</published><updated>2021-07-31T17:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp11</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp11/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-사전-조사-분석--b&quot;&gt;1. 사전 조사 분석 – B&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;논리적 구조료 표현된 논리적 DB를 물리적 저장장치에 저장할 수 있는 물리적 구조의 데이터로 변환&lt;/li&gt;
  &lt;li&gt;데이터 단위는 저장 레코드&lt;/li&gt;
  &lt;li&gt;꼭 포함되어야 할 것은 저장 레코드의 양식 설계, 레코드 집중의 분석 및 설계, 접근 경로 설계 등&lt;/li&gt;
  &lt;li&gt;여러 가지 타입의 저장 레코드 집합이라는 면에서 단순한 파일과 다름&lt;/li&gt;
  &lt;li&gt;물리적 DB 구조는 DB 시스템 성능에 중대한 영향을 미친다&lt;/li&gt;
  &lt;li&gt;고려사항
    &lt;ul&gt;
      &lt;li&gt;인덱스 구조&lt;/li&gt;
      &lt;li&gt;레코드 크기&lt;/li&gt;
      &lt;li&gt;레코드 개수&lt;/li&gt;
      &lt;li&gt;트랜잭션의 갱신과 참조 성향&lt;/li&gt;
      &lt;li&gt;개념 스키마의 변경 여부 검토&lt;/li&gt;
      &lt;li&gt;트랜잭션들의 수행속도를 높이기 위한 고려&lt;/li&gt;
      &lt;li&gt;파일 크기의 변화 가능성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기존 시스템을 분석하여 파악&lt;/li&gt;
  &lt;li&gt;물리적 설계 옵션
    &lt;ul&gt;
      &lt;li&gt;반응시간&lt;/li&gt;
      &lt;li&gt;공간 활용도&lt;/li&gt;
      &lt;li&gt;트랜잭션 처리량&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-명명-규칙-파악&quot;&gt;- 데이터 명명 규칙 파악&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 표준화 및 논리 DB 설계의 결과물 등을 통해 파악&lt;/li&gt;
  &lt;li&gt;서로 일관성 유지&lt;/li&gt;
  &lt;li&gt;동일 명칭 부여의 근거&lt;/li&gt;
  &lt;li&gt;중복 구축 등을 방지&lt;/li&gt;
  &lt;li&gt;도메인과 데이터 사전에 대한 지식 필요&lt;/li&gt;
  &lt;li&gt;도메인 : 객체에 포함된 속성들의 데이터 타입, 크기 등을 표준화 규칙에 따라 일관성 있게 정의한 것&lt;/li&gt;
  &lt;li&gt;데이터 사전
    &lt;ul&gt;
      &lt;li&gt;일관성 있는 데이터 이름과 인터페이스를 제공하기 위해 데이터 속성의 논리명, 물리명, 용어정의를 기술&lt;/li&gt;
      &lt;li&gt;프로젝트에서 사용하는 명칭 부여의 근거&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--시스템-자원-파악&quot;&gt;- 시스템 자원 파악&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시스템 자원은 DB 설치에 영향을 미칠 수 있는 물리적 요소. 사전에 미리 파악해야 함&lt;/li&gt;
  &lt;li&gt;하드웨어 자원, 운영체제 및 DBMS 버전, DBMS 파라미터 정보&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터베이스-관리-요소-파악&quot;&gt;- 데이터베이스 관리 요소 파악&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB 관리 요소는 운영과 관련된 관리 요소. 미리 파악해야 함&lt;/li&gt;
  &lt;li&gt;파악한 후 DB 시스템 조사 분석서 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-데이터베이스-저장-공간-설계--b&quot;&gt;2. 데이터베이스 저장 공간 설계 – B&lt;/h2&gt;

&lt;h3 id=&quot;--테이블&quot;&gt;- 테이블&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Row와 Column으로 구성&lt;/li&gt;
  &lt;li&gt;모든 데이터는 테이블에 저장됨&lt;/li&gt;
  &lt;li&gt;논리 설계 단계의 개체에 대응하는 객체&lt;/li&gt;
  &lt;li&gt;DBMS 종류에 따라 테이블의 명칭과 기능 등은 약간씩 차이가 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-일반-테이블&quot;&gt;@ 일반 테이블&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;대부분의 DBMS에서 표준 테이블로 사용되는 테이블&lt;/li&gt;
  &lt;li&gt;Row 위치는 속성 값에 상관없이 데이터가 저장되는 순서에 따라 결정&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-클러스터드-인덱스-테이블&quot;&gt;@ 클러스터드 인덱스 테이블&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기본키나 인덱스키의 순서에 따라 데이터가 저장되는 테이블&lt;/li&gt;
  &lt;li&gt;접근 경로가 단축됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-파티셔닝-테이블&quot;&gt;@ 파티셔닝 테이블&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;대용량의 테이블을 작은 논리적 단위인 파티션으로 나눈 테이블&lt;/li&gt;
  &lt;li&gt;대용량의 데이터를 효과적으로 관리할 수 있음&lt;/li&gt;
  &lt;li&gt;파티션 키를 잘못 구성하면 성능 저하 등의 역효과 초래&lt;/li&gt;
  &lt;li&gt;범위분할 : 지정한 열의 값을 기준으로 분할&lt;/li&gt;
  &lt;li&gt;해시분할 : 해시 함수를 적용한 결과 값에 따라 분할&lt;/li&gt;
  &lt;li&gt;조합분할 : 범위 분할로 분할한 다음 해시 함수를 적용하여 다시 분할&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-외부-테이블&quot;&gt;@ 외부 테이블&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;DB에서 일반 테이블처럼 이용할 수 있는 외부 파일. 객체로 존재&lt;/li&gt;
  &lt;li&gt;데이터웨어하우스에서 ETL 등의 작업에 유용하게 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-임시-테이블&quot;&gt;@ 임시 테이블&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;트랜잭션이나 세션별로 데이터를 저장하고 처리할 수 있는 테이블&lt;/li&gt;
  &lt;li&gt;트랜잭션이 종료되면 삭제됨&lt;/li&gt;
  &lt;li&gt;임시로 사용하는 테이블&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--column&quot;&gt;- Column&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;테이블의 열. 데이터 타입, 길이 등으로 정의됨&lt;/li&gt;
  &lt;li&gt;데이터 타입은 데이터의 일관성 유지를 위해 사용되는 가장 기본적인 것&lt;/li&gt;
  &lt;li&gt;도메인을 정의한 경우 도메인에 따라 데이터의 타입과 길이 정의&lt;/li&gt;
  &lt;li&gt;두 컬럼의 데이터 타입이나 길이가 다르면 DBMS 내부적으로 데이터 타입을 변환한 수 비교 연산 수행&lt;/li&gt;
  &lt;li&gt;참조 관계인 컬럼들은 데이터 타입과 길이가 일치해야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테이블스페이스&quot;&gt;- 테이블스페이스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;테이블이 저장되는 논리적인 영역. 하나 또는 그 이상의 테이블 저장 가능&lt;/li&gt;
  &lt;li&gt;테이블을 저장하면 논리적으로는 테이블스페이스에 저장, 물리적으로는 연관된 데이터 파일에 저장&lt;/li&gt;
  &lt;li&gt;나눠 관리하면 논리적 구성이 물리적 구성에 종속되지 않아 투명성이 보장됨&lt;/li&gt;
  &lt;li&gt;고려사항
    &lt;ul&gt;
      &lt;li&gt;업무별로 구분하여 지정&lt;/li&gt;
      &lt;li&gt;대용량 테이블은 하나의 테이블스페이스에 독립적으로 저장&lt;/li&gt;
      &lt;li&gt;테이블과 인덱스는 분리하여 저장&lt;/li&gt;
      &lt;li&gt;LOB 타입의 데이터는 독립적인 공간으로 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-트랜잭션-분석--crud-분석--b&quot;&gt;3. 트랜잭션 분석 / CRUD 분석 – B&lt;/h2&gt;

&lt;h3 id=&quot;--트랜잭션-정의&quot;&gt;- 트랜잭션 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB의 상태를 변화시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 연산&lt;/li&gt;
  &lt;li&gt;병행 제어 및 회복 작업 시 처리되는 작업의 논리적 단위&lt;/li&gt;
  &lt;li&gt;시스템이 응답하기 위한 상태 변환 과정의 작업 단위&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--트랜잭션의-특성&quot;&gt;- 트랜잭션의 특성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Atomicity(원자성)
    &lt;ul&gt;
      &lt;li&gt;트랜잭션의 연산은 완료(Commit)되든지 전혀 반영되지 않도록 복구(Rollback)되어야 함&lt;/li&gt;
      &lt;li&gt;모든 명령은 반드시 완벽히 수행되야 하며, 오류 발생 시 트랜잭션 전부가 취소돼야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Consistency(일관성)
    &lt;ul&gt;
      &lt;li&gt;실행을 성공적으로 완료하면 언제나 일관성 있는 DB 상태로 변환&lt;/li&gt;
      &lt;li&gt;고정 요소는 트랜잭션 수행 전과 후의 상태가 같아야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Isolation(독립성, 격리성, 순차성)
    &lt;ul&gt;
      &lt;li&gt;트랜잭션 실행 중에 다른 트랜잭션의 연산이 끼어들 수 없음&lt;/li&gt;
      &lt;li&gt;완전히 완료될 때까지 다른 트랜잭션에서 수행 결과를 참조할 수 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Durability(영속성, 지속성)
    &lt;ul&gt;
      &lt;li&gt;완료된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--crud-분석&quot;&gt;- CRUD 분석&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Create, Read, Update, Delete&lt;/li&gt;
  &lt;li&gt;CRUD 매트릭스를 작성하여 분석&lt;/li&gt;
  &lt;li&gt;트랜잭션의 주기별 발생 횟수를 파악하고, 테이블에 저장되는 데이터의 양을 유추할 수 있음&lt;/li&gt;
  &lt;li&gt;많은 트랜잭션이 몰리는 테이블을 파악할 수 있음&lt;/li&gt;
  &lt;li&gt;연결 지연이나 타임아웃 오류를 방지할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--crud-매트릭스&quot;&gt;- CRUD 매트릭스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Row에는 프로세스를, Column에는 테이블을, 행과 열이 만나는 위치에는 변화를 표시&lt;/li&gt;
  &lt;li&gt;프로세스의 트랜잭션이 테이블에 수행하는 작업을 검증&lt;/li&gt;
  &lt;li&gt;복수의 변화를 줄 때는 C &amp;gt; D &amp;gt; U &amp;gt; R의 우선순위 적용&lt;/li&gt;
  &lt;li&gt;불필요하거나 누락된 테이블 또는 프로세스를 찾음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--트랜잭션-분석&quot;&gt;- 트랜잭션 분석&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;테이블에 저장되는 데이터의 양을 유추하고 이를 근거로 DB 용량을 산정하고 구조를 최적화&lt;/li&gt;
  &lt;li&gt;업무 개발 담당자가 수행&lt;/li&gt;
  &lt;li&gt;디스크 입출력 분산을 통한 성능 향상을 가져올 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--트랜잭션-분석서&quot;&gt;- 트랜잭션 분석서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;단위 프로세스와 CRUD 매트릭스를 이용하여 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-인덱스-설계--a&quot;&gt;4. 인덱스 설계 – A&lt;/h2&gt;

&lt;h3 id=&quot;--인덱스의-개념&quot;&gt;- 인덱스의 개념&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&amp;lt;키 값, 포인터&amp;gt; 쌍으로 구성되는 데이터 구조&lt;/li&gt;
  &lt;li&gt;물리적 구조와 밀접한 관계&lt;/li&gt;
  &lt;li&gt;물리적 구조에 접근하는 방법 제공&lt;/li&gt;
  &lt;li&gt;파일의 레코드에 대한 액세스를 빠르게 수행&lt;/li&gt;
  &lt;li&gt;삽입, 삭제가 수시로 일어나는 경우, 인덱스의 개수를 최소로 하는 것이 효율적&lt;/li&gt;
  &lt;li&gt;인덱스가 없으면 모든 데이터 페이지를 확인하는 TABLE SCAN 발생&lt;/li&gt;
  &lt;li&gt;기본키를 위한 인덱스를 기본 인덱스, 기본 인덱스가 아닌 인덱스를 보조 인덱스라고 함&lt;/li&gt;
  &lt;li&gt;DBMS에서는 모든 기본키에 대해서 자동적으로 기본 인덱스를 생성함&lt;/li&gt;
  &lt;li&gt;레코드의 물리적 순서가 인덱스의 엔트리 순서와 일치하게 유지되도록 구성되는 인덱스를 클러스터트 인덱스라 함
    &lt;ul&gt;
      &lt;li&gt;클러스터드 인덱스
        &lt;ul&gt;
          &lt;li&gt;인덱스 키의 순서에 따라 데이터가 정렬되어 저장&lt;/li&gt;
          &lt;li&gt;인덱스를 검색하지 않아도 원하는 데이터를 빠르게 찾을 수 있음&lt;/li&gt;
          &lt;li&gt;삽입, 삭제 발생 시 순서를 유지하기 위해 데이터를 재정렬해야 함&lt;/li&gt;
          &lt;li&gt;한 개의 릴레이션에 하나의 인덱스만 생성할 수 있음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;넌클러스터드 인덱스
        &lt;ul&gt;
          &lt;li&gt;키 값만 정렬되어 있을 뿐 실제 데이터는 정렬되지 않는 방식&lt;/li&gt;
          &lt;li&gt;데이터 검색을 위해 인덱스를 검색하여 실제 데이터의 위치를 확인해야 하므로 검색 속도가 떨어짐&lt;/li&gt;
          &lt;li&gt;한 개의 릴레이션에 여러 개의 인덱스를 만들 수 있음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--트리-기반-인덱스&quot;&gt;- 트리 기반 인덱스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;인덱스를 저장하는 블록들이 트리 구조를 이루고 있는 것&lt;/li&gt;
  &lt;li&gt;B 트리 인덱스
    &lt;ul&gt;
      &lt;li&gt;루트 노드에서 하위 노드로 키 값의 크기를 비교해 나가면서 검색&lt;/li&gt;
      &lt;li&gt;포인터들이 트리 노드에 오름차순으로 저장&lt;/li&gt;
      &lt;li&gt;모든 리프 노드는 같은 레벨에 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;B+ 트리 인덱스
    &lt;ul&gt;
      &lt;li&gt;단말 노드가 아닌 노드로 구성된 인덱스 세트와 단말 노드로만 구성된 순차 세트로 구분&lt;/li&gt;
      &lt;li&gt;인덱스 세트에 있는 노드들은 경로로만 제공&lt;/li&gt;
      &lt;li&gt;순차 세트에 있는 단말 노드가 해당 데이터 레코드의 주소를 가리킴&lt;/li&gt;
      &lt;li&gt;단말 노드만을 이용한 순차 처리 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--비트맵-인덱스&quot;&gt;- 비트맵 인덱스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;인덱스 컬럼의 데이터를 Bit 값인 0 또는 1로 변환하여 인덱스 키로 사용&lt;/li&gt;
  &lt;li&gt;목적은 Row의 주소를 제공하는 것&lt;/li&gt;
  &lt;li&gt;분포도가 좋은 컬럼에 적합하며, 성능 향상 효과를 얻을 수 있음&lt;/li&gt;
  &lt;li&gt;효율적인 논리 연산이 가능하고 저장 공간이 작음&lt;/li&gt;
  &lt;li&gt;다중 조건을 만족하는 튜플의 개수 계산에 적합&lt;/li&gt;
  &lt;li&gt;동일한 값이 반복되는 경우가 많아 압축 효율이 좋음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--함수-기반-인덱스&quot;&gt;- 함수 기반 인덱스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;컬럼의 값 대신 특정 함수나 수식을 적용하여 산출된 값을 사용&lt;/li&gt;
  &lt;li&gt;B+ 트리 인덱스 또는 비트맵 인덱스를 생성하여 사용&lt;/li&gt;
  &lt;li&gt;데이터를 입력하거나 수정할 때 함수를 적용해야 하므로 부하 발생할 수 있음&lt;/li&gt;
  &lt;li&gt;사용자 정의 함수일 경우 시스템 함수보다 부하가 더 큼&lt;/li&gt;
  &lt;li&gt;대소문자, 띄어쓰기 등에 상관없이 조회할 때 유용하게 사용됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--비트맵-조인-인덱스&quot;&gt;- 비트맵 조인 인덱스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다수의 조인된 객체로 구성된 인덱스&lt;/li&gt;
  &lt;li&gt;비트맵 인덱스와 물리적 구조가 동일&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--도메인-인덱스&quot;&gt;- 도메인 인덱스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개발자가 필요한 인덱스를 직접 만들어 사용하는 것. 확장형 인덱스&lt;/li&gt;
  &lt;li&gt;프로그램에서 제공하는 인덱스처럼 사용할 수도 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인덱스-설계&quot;&gt;- 인덱스 설계&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;분명하게 드러난 컬럼에 대해 기본적인 인덱스를 먼저 지정&lt;/li&gt;
  &lt;li&gt;테이블, 컬럼 등 선정 -&amp;gt; 인덱스 최적화 수행 -&amp;gt; 인덱스 정의서 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인덱스-대상-테이블-선정-기순&quot;&gt;- 인덱스 대상 테이블 선정 기순&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;MULTI BLOCK READ 수에 따라 판단&lt;/li&gt;
  &lt;li&gt;랜덤 액세스가 빈번한 테이블&lt;/li&gt;
  &lt;li&gt;특정 범위나 특정 순서로 데이터 조회가 필요한 테이블&lt;/li&gt;
  &lt;li&gt;다른 테이블과 순차적 조인이 발생되는 테이블&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인덱스-대상-컬럼-선정-기준&quot;&gt;- 인덱스 대상 컬럼 선정 기준&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;컬럼의 분포도가 10~15% 이내인 컬럼&lt;/li&gt;
  &lt;li&gt;분포도가 10~15% 이상이어도 부분 처리를 목적으로 하는 컬럼&lt;/li&gt;
  &lt;li&gt;조회 및 출력 조건으로 사용되는 컬럼&lt;/li&gt;
  &lt;li&gt;기본키와 Unique키 제약 조건을 사용한 컬럼&lt;/li&gt;
  &lt;li&gt;수정이 빈번하지 않은 컬럼&lt;/li&gt;
  &lt;li&gt;ORDER BY, GROUP BY, UNION이 빈번한 컬럼&lt;/li&gt;
  &lt;li&gt;분포도가 좁은 컬럼은 단독 인덱스로 생성&lt;/li&gt;
  &lt;li&gt;인덱스들이 자주 조합되어 사용되는 경우 하나의 결합 인덱스로 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인덱스-설계-시-고려사항&quot;&gt;- 인덱스 설계 시 고려사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;새로 추가되는 인덱스는 기존 액세스 경로에 영향을 미칠 수 있음&lt;/li&gt;
  &lt;li&gt;인덱스를 지나치게 많이 만들면 오버헤드 발생&lt;/li&gt;
  &lt;li&gt;넓은 범위를 인덱스로 처리하면 많은 오버헤드 발생&lt;/li&gt;
  &lt;li&gt;인덱스를 만들면 추가적인 저장 공간이 필요&lt;/li&gt;
  &lt;li&gt;인덱스와 테이블 데이터의 저장 공간이 분리되도록 설계&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-view-설계--a&quot;&gt;5. View 설계 – A&lt;/h2&gt;

&lt;h3 id=&quot;--view의-개요&quot;&gt;- View의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;접근이 허용된 자료만을 제한적으로 보여주기 위해 기본 테이블로부터 유도된 가상 테이블&lt;/li&gt;
  &lt;li&gt;물리적으로 존재하지 않지만, 있는 것처럼 간주&lt;/li&gt;
  &lt;li&gt;임시적인 작업을 위한 용도로 활용&lt;/li&gt;
  &lt;li&gt;조인문의 사용 최소화로 사용상의 편의성을 최대화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--view의-특징&quot;&gt;- View의 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기본 테이블과 같은 형태의 구조를 사용, 조작도 기본 테이블과 거의 같음&lt;/li&gt;
  &lt;li&gt;물리적으로 구현되어 있지 않음&lt;/li&gt;
  &lt;li&gt;데이터의 논리적 독립성을 제공&lt;/li&gt;
  &lt;li&gt;관리가 용이하고 명령문이 간단해짐&lt;/li&gt;
  &lt;li&gt;뷰에 나타나지 않는 데이터를 안전하게 보호하는 효율적인 기법으로 사용&lt;/li&gt;
  &lt;li&gt;기본 테이블의 기본키를 포함한 속성 집합으로 뷰를 구성해야 삽입, 삭제, 갱신등의 연산 가능&lt;/li&gt;
  &lt;li&gt;정의된 뷰는 다른 뷰의 정의에 기초가 될 수 있음&lt;/li&gt;
  &lt;li&gt;뷰가 정의된 기본 테이블이나 뷰를 삭제하면 그 테이블이나 뷰를 기초로 정의된 다른 뷰도 삭제됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--view의-장단점&quot;&gt;- View의 장단점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;장점
    &lt;ul&gt;
      &lt;li&gt;논리적 데이터 독립성 제공&lt;/li&gt;
      &lt;li&gt;동일 데이터에 동시에 여러 사용자의 상이한 응용이나 요구 지원&lt;/li&gt;
      &lt;li&gt;데이터 관리를 간단하게 해줌&lt;/li&gt;
      &lt;li&gt;접근 제어를 통한 자동 보안이 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점
    &lt;ul&gt;
      &lt;li&gt;독립적인 인덱스를 가질 수 없음&lt;/li&gt;
      &lt;li&gt;뷰가 정의를 변경할 수 없음&lt;/li&gt;
      &lt;li&gt;삽입, 삭제, 갱신 연산에 제약이 따름&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--view-설계-순서&quot;&gt;- View 설계 순서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;대상 테이블 선정 -&amp;gt; 대상 컬럼 선정 -&amp;gt; 정의서 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--view-설계시-고려-사항&quot;&gt;- View 설계시 고려 사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;반복적으로 조인을 설정하여 사용하거나 동일한 조건절을 사용하는 테이블을 뷰로 생성&lt;/li&gt;
  &lt;li&gt;사용할 데이터를 다양한 관점에서 제시해야 함&lt;/li&gt;
  &lt;li&gt;데이터의 보안 유지를 고려하여 설계&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-클러스터-설계--a&quot;&gt;6. 클러스터 설계 – A&lt;/h2&gt;

&lt;h3 id=&quot;--클러스터의-개요&quot;&gt;- 클러스터의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;동일한 성격의 데이터를 동일한 데이터 블록에 저장하는 물리적 저장 방법&lt;/li&gt;
  &lt;li&gt;클러스터링키로 지정된 컬럼 값의 순서대로 저장, 여러 개의 테이블이 하나의 클러스터에 저장&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--클러스터의-특징&quot;&gt;- 클러스터의 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 조회 속도는 향상. 입력, 수정, 삭제 성능은 저하&lt;/li&gt;
  &lt;li&gt;데이터의 분포도가 넓을수록 유리&lt;/li&gt;
  &lt;li&gt;저장 공간을 절약할 수 있음&lt;/li&gt;
  &lt;li&gt;저장 공간이 줄어듬&lt;/li&gt;
  &lt;li&gt;대용량 처리 트랜잭션은 클러스터링 안하는게 좋음&lt;/li&gt;
  &lt;li&gt;처리 범위가 넓은 경우는 단일 테이블 클러스터링 사용&lt;/li&gt;
  &lt;li&gt;조인이 많이 발생하는 경우는 다중 테이블 클러스터링 사용&lt;/li&gt;
  &lt;li&gt;파티셔닝된 테이블에는 클러스터링 할 수 없음&lt;/li&gt;
  &lt;li&gt;클러스터링 하면 디스크 I/O가 줄어듬&lt;/li&gt;
  &lt;li&gt;클러스터드 인덱스를 생성하면 접근 성능이 향상됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--클러스터-대상-테이블&quot;&gt;- 클러스터 대상 테이블&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;분포도가 넓은 테이블&lt;/li&gt;
  &lt;li&gt;대량의 범위를 자주 조회하는 테이블&lt;/li&gt;
  &lt;li&gt;입력, 수정, 삭제가 자주 발생하지 않는 테이블&lt;/li&gt;
  &lt;li&gt;자주 조인되어 사용되는 테이블&lt;/li&gt;
  &lt;li&gt;ORDER BY, GROUP BY, UNION이 빈번한 테이블&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-파티션-설계--a&quot;&gt;7. 파티션 설계 – A&lt;/h2&gt;

&lt;h3 id=&quot;--파티션의-개요&quot;&gt;- 파티션의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;대용량의 테이블이나 인덱스를 작은 논리적 단위인 파티션으로 나누는 것&lt;/li&gt;
  &lt;li&gt;성능 저하를 방지할 뿐만 아니라 데이터 관리가 쉬워짐&lt;/li&gt;
  &lt;li&gt;파티션키 또는 인덱스키에 따라 물리적으로 별도의 공간에 데이터가 저장&lt;/li&gt;
  &lt;li&gt;데이터 처리는 테이블 단위로 이뤄지고, 데이터 저장은 파티션별로 수행됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--파티션의-장단점&quot;&gt;- 파티션의 장단점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;장점
    &lt;ul&gt;
      &lt;li&gt;데이터 접근 시 액세스 범위를 줄여 쿼리 성능 향상&lt;/li&gt;
      &lt;li&gt;디스크의 성능 향상&lt;/li&gt;
      &lt;li&gt;속도가 빠름&lt;/li&gt;
      &lt;li&gt;데이터 손상 정도를 최소화 할 수 있음&lt;/li&gt;
      &lt;li&gt;데이터 가용성이 향상&lt;/li&gt;
      &lt;li&gt;입출력을 분산시킬 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점
    &lt;ul&gt;
      &lt;li&gt;세심한 관리가 요구됨&lt;/li&gt;
      &lt;li&gt;조인에 대한 비용이 증가&lt;/li&gt;
      &lt;li&gt;용량이 작은 테이블에 파티셔닝을 수행하면 오히려 성능 저하&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--파티션의-종류&quot;&gt;- 파티션의 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;범위 분할
    &lt;ul&gt;
      &lt;li&gt;지정한 열의 값을 기준으로 분할&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;해시 분할
    &lt;ul&gt;
      &lt;li&gt;해시 함수를 적용한 결과 값에 따라 데이터를 분할&lt;/li&gt;
      &lt;li&gt;범위 분할의 단점을 보완. 데이터를 고르게 분산할 때 유용&lt;/li&gt;
      &lt;li&gt;특정 데이터가 어디에 있는지 판단할 수 없음&lt;/li&gt;
      &lt;li&gt;데이터가 고르게 분포한 컬럼에 효과적&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;조합 분할
    &lt;ul&gt;
      &lt;li&gt;범위 분할로 분할한 다음 해시 함수를 적용하여 다시 분할&lt;/li&gt;
      &lt;li&gt;범위 분할한 파티션이 너무 커서 관리가 어려울 때 유용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--파티션키-선정-시-고려-사항&quot;&gt;- 파티션키 선정 시 고려 사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;테이블 접근 유형에 따라 파티셔닝이 이뤄지도록 선정&lt;/li&gt;
  &lt;li&gt;이력성 데이터는 파티션 생성주기와 소멸주기를 일치시켜야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인덱스-파티션&quot;&gt;- 인덱스 파티션&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;파티션된 테이블의 데이터를 관리하기 위해 인덱스를 나눈 것&lt;/li&gt;
  &lt;li&gt;파티션된 테이블의 종속 여부
    &lt;ul&gt;
      &lt;li&gt;Local Partitioned Index : 테이블 파티션과 인덱스 파티션이 1:1 대응&lt;/li&gt;
      &lt;li&gt;Global Partitioned Index : 테이블 파티션과 인덱스 파티션이 독립적으로 구성&lt;/li&gt;
      &lt;li&gt;Local Partitioned Index가 데이터 관리가 쉬움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인덱스 파티션키 컬럼의 위치
    &lt;ul&gt;
      &lt;li&gt;Prefixed Partitioned Index : 인덱스 파티션키와 인덱스 첫 번째 컬럼이 같음&lt;/li&gt;
      &lt;li&gt;Non-Prefixed Partitioned Index : 인덱스 파티션키와 인덱스 첫 번째 컬럼이 다름&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-분산-데이터베이스-설계--a&quot;&gt;8. 분산 데이터베이스 설계 – A&lt;/h2&gt;

&lt;h3 id=&quot;--분산-데이터베이스-정의&quot;&gt;- 분산 데이터베이스 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;논리적으로는 하나의 시스템에 속하지만 물리적으로 네트워크를 통해 연결된 여러 개의 컴퓨터 사이트에 분산되어 있는 DB&lt;/li&gt;
  &lt;li&gt;데이터의 처리나 이용이 많은 지역에 DB를 위치해 데이터 처리가 해당 지역에서 해결&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--분산-데이터베이스의-구성-요소&quot;&gt;- 분산 데이터베이스의 구성 요소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;분산 처리기 : 자체 처리 능력. 지리적으로 분산되어 있는 컴퓨터 시스템&lt;/li&gt;
  &lt;li&gt;분산 데이터베이스 : 지리적으로 분산되어 있는 DB. 해당 지역의 특성에 맞게 DB 구성&lt;/li&gt;
  &lt;li&gt;통신 네트워크 : 분산 처리기들을 통신망으로 연결하는 통신 네트워크&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--분산-데이터베이스-설계-시-고려-사항&quot;&gt;- 분산 데이터베이스 설계 시 고려 사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;작업부하의 노드별 분산 정책&lt;/li&gt;
  &lt;li&gt;지역의 자치성 보장 정책&lt;/li&gt;
  &lt;li&gt;데이터의 일관성 정책&lt;/li&gt;
  &lt;li&gt;사이트나 회선의 고장으로부터의 회복 기능&lt;/li&gt;
  &lt;li&gt;통신 네트워크를 통한 원격 접근 기능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--분산-데이터베이스의-목표&quot;&gt;- 분산 데이터베이스의 목표&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;위치 투명성 : 실제 위치를 알 필요 없이 DB의 논리적인 명칭만으로 액세스 가능&lt;/li&gt;
  &lt;li&gt;중복 투명성 : 데이터가 중복되어 있더라도 사용자는 하나의 데이터만 존재하는 것처럼 사용하고, 시스템은 자동으로 여러 자료에 대한 작업 수행&lt;/li&gt;
  &lt;li&gt;병행 투명성 : 다수의 트랜잭션들이 동시에 실현되더라도 그 트랜잭션의 결과는 영향을 받지 않음&lt;/li&gt;
  &lt;li&gt;장애 투명성 : 장애에도 불구하고 트랜잭션을 정확하게 처리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--분산-데이터베이스의-장단점&quot;&gt;- 분산 데이터베이스의 장단점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;장점
    &lt;ul&gt;
      &lt;li&gt;지역 자치성이 높음&lt;/li&gt;
      &lt;li&gt;자료의 공유성 향상&lt;/li&gt;
      &lt;li&gt;분산 제어 가능&lt;/li&gt;
      &lt;li&gt;시스템 성낭 향상&lt;/li&gt;
      &lt;li&gt;중앙 컴퓨터의 장애가 전체 시스템에 영향을 끼치지 않음&lt;/li&gt;
      &lt;li&gt;효용성과 융통성이 높음&lt;/li&gt;
      &lt;li&gt;신뢰성 및 가용성 높음&lt;/li&gt;
      &lt;li&gt;점진적 시스템 용량 확장이 용이&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점
    &lt;ul&gt;
      &lt;li&gt;DBMS가 수행할 기능이 복잡&lt;/li&gt;
      &lt;li&gt;DB 설계가 어려움&lt;/li&gt;
      &lt;li&gt;개발 비용 증가&lt;/li&gt;
      &lt;li&gt;처리 비용 증가&lt;/li&gt;
      &lt;li&gt;잠재적 오류 증가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--분산-데이터베이스-설계&quot;&gt;- 분산 데이터베이스 설계&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;전역 관계망을 논리적 측면에서 소규모 단위로 분할한 후, 분할된 결과를 복수의 노드에 할당하는 과정으로 진행&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-테이블-위치-분산&quot;&gt;@ 테이블 위치 분산&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;테이블을 각기 다른 서버에 분산시켜 배치&lt;/li&gt;
  &lt;li&gt;테이블의 구조를 변경하지 않으며, 다른 DB의 테이블과 중복되지 않게 배치&lt;/li&gt;
  &lt;li&gt;해당 테이블들이 놓일 서버들을 미리 설정해야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-분할&quot;&gt;@ 분할&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;테이블의 데이터를 분할하여 분산시키는 것&lt;/li&gt;
  &lt;li&gt;분할 규칙
    &lt;ul&gt;
      &lt;li&gt;완전성 : 전체 데이터를 대상으로 분할&lt;/li&gt;
      &lt;li&gt;재구성 : 분할된 데이터는 관계 연산을 활용하여 본래의 데이터로 재구성할 수 있어야 함&lt;/li&gt;
      &lt;li&gt;상호 중첩 배제 : 분할된 데이터는 서로 다른 분할의 항목에 속하지 않아야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;주요 분할 방법
    &lt;ul&gt;
      &lt;li&gt;수평 분할 : 속성의 값을 기준으로 Row 단위로 분할&lt;/li&gt;
      &lt;li&gt;수직 분할 : 속성 단위로 분할&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-할당&quot;&gt;@ 할당&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;동일한 분할을 여러 개의 서버에 생성하는 분산 방법&lt;/li&gt;
  &lt;li&gt;비중복 할당 방식
    &lt;ul&gt;
      &lt;li&gt;분산 DB의 단일 노드에서만 분할이 존재&lt;/li&gt;
      &lt;li&gt;분할된 테이블 간의 의존성은 무시되고 비용 증가, 성능 저하 등의 문제 발생 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;중복 할당 박식
    &lt;ul&gt;
      &lt;li&gt;동일한 테이블을 다른 서버에 복제하는 방식&lt;/li&gt;
      &lt;li&gt;일부만 복제하는 부분복제, 전체를 복제하는 완전 복제가 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;9-데이터베이스-이중화--서버-클러스터링--b&quot;&gt;9. 데이터베이스 이중화 / 서버 클러스터링 – B&lt;/h2&gt;

&lt;h3 id=&quot;--데이터베이스-이중화&quot;&gt;- 데이터베이스 이중화&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시스템 오류로 인한 DB 서비스 중단이나 물리적 손상 발생 시 이를 복구하기 위해 동일한 DB를 복제하여 관리&lt;/li&gt;
  &lt;li&gt;문제가 발생하면 복제된 DB를 이용하여 즉시 문제를 해결할 수 있음&lt;/li&gt;
  &lt;li&gt;사용자가 수행하는 작업이 다른 DB에도 동일하게 적용&lt;/li&gt;
  &lt;li&gt;DB 부하를 줄일 수 있음&lt;/li&gt;
  &lt;li&gt;손쉽게 백업 서버를 운영할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터베이스-이중화의-분류&quot;&gt;- 데이터베이스 이중화의 분류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Eager 기법 : 데이터 변경이 발생하면 변경 내용이 즉시 적용&lt;/li&gt;
  &lt;li&gt;Lazy 기법 : 트랜잭션 수행이 종료되면 변경 사실을 새로운 트랜잭션에 작성하여 각 DB에 전달&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터베이스-이중화-구성-방법&quot;&gt;- 데이터베이스 이중화 구성 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;활동-대기 방법
    &lt;ul&gt;
      &lt;li&gt;한 DB가 활성 상태이면 다른 DB는 대기&lt;/li&gt;
      &lt;li&gt;활성 DB에 장애가 발생하면 대기 DB가 자동으로 모든 서비스를 대신 수행&lt;/li&gt;
      &lt;li&gt;구성 방법과 관리가 쉬움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;활동-활동 방법
    &lt;ul&gt;
      &lt;li&gt;두개의 DB가 서로 다른 서비스를 제공하다가 한쪽에 문제가 생기면 나머지 DB가 서비스 제공&lt;/li&gt;
      &lt;li&gt;처리율이 높지만 구성 방법 및 설정이 복잡&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--클러스터링&quot;&gt;- 클러스터링&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;두 대 이상의 서버를 하나의 서버처럼 운영하는 기술&lt;/li&gt;
  &lt;li&gt;서버 이중화 및 공유 스토리지를 사용하여 서버의 고가용성을 제공&lt;/li&gt;
  &lt;li&gt;고가용성 클러스터링
    &lt;ul&gt;
      &lt;li&gt;하나의 서버에 장애가 발생하면 다른 서바가 받아 처리하여 서비스 중단을 방지&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;병렬 처리 클러스터링
    &lt;ul&gt;
      &lt;li&gt;전체 처리율을 높이기 위해 하나의 작업을 여러 개의 서버에서 분산하여 처리&lt;/li&gt;
      &lt;li&gt;사용자의 요청을 로드 밸런서가 여러 대의 서버로 분산&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;10-데이터베이스-보안--암호화--b&quot;&gt;10. 데이터베이스 보안 / 암호화 – B&lt;/h2&gt;

&lt;h3 id=&quot;--데이터베이스-보안의-개요&quot;&gt;- 데이터베이스 보안의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;권한이 없는 사용자가 액세스하는 것을 금지하기 위해 사용되는 기술&lt;/li&gt;
  &lt;li&gt;DB 사용자들은 일반적으로 서로 다른 객체에 대하여 다른 접근 권리 또는 권한을 가짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--암호화&quot;&gt;- 암호화&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터를 보낼 때 송신자가 지정한 수신자 이외에는 그 내용을 알 수 없도록 함&lt;/li&gt;
  &lt;li&gt;암호화 과정 : 평문 -&amp;gt; 암호문&lt;/li&gt;
  &lt;li&gt;복호화 과정 : 암호문 -&amp;gt; 평문&lt;/li&gt;
  &lt;li&gt;개인키 암호 방식(비밀키 암호 방식)
    &lt;ul&gt;
      &lt;li&gt;동일한 키로 데이터를 암호화하고 복호화 함&lt;/li&gt;
      &lt;li&gt;대칭 암호 방식, 단일키 암호화 기법이라고도 함&lt;/li&gt;
      &lt;li&gt;비밀키는 DB 사용 권한이 있는 사용자만 나누어 가짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;공개키 암호 방식
    &lt;ul&gt;
      &lt;li&gt;서로 다른 키로 데이터를 암호화하고 복호화 함&lt;/li&gt;
      &lt;li&gt;공개키는 DB 사용자에게 공개. 복호화 키는 관리자가 비밀리에 관리&lt;/li&gt;
      &lt;li&gt;비대칭 암호 방식. 대표적으로 RSA&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;11-데이터베이스-보안--접근통제--a&quot;&gt;11. 데이터베이스 보안 : 접근통제 – A&lt;/h2&gt;

&lt;h3 id=&quot;--접근통제&quot;&gt;- 접근통제&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터가 저장된 객체와 이를 사용하려는 주체 사이의 정보 흐름을 제한&lt;/li&gt;
  &lt;li&gt;자원의 불법적인 접근 및 파괴를 예방&lt;/li&gt;
  &lt;li&gt;비인가된 사용자의 접근 감시&lt;/li&gt;
  &lt;li&gt;접근 요구자의 사용자 식별&lt;/li&gt;
  &lt;li&gt;접근 요구의 정당성 확인 및 기록&lt;/li&gt;
  &lt;li&gt;접근의 승인 및 거부&lt;/li&gt;
  &lt;li&gt;임의 접근 통제
    &lt;ul&gt;
      &lt;li&gt;데이터에 접근하는 사용자의 신원에 따라 접근 권한을 부여&lt;/li&gt;
      &lt;li&gt;주체가 접근통제 권한을 지정하고 제어&lt;/li&gt;
      &lt;li&gt;부여된 권한을 다른 사용자에게 허가할 수 있음&lt;/li&gt;
      &lt;li&gt;GRANT, REVOKE&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;강제 접근 통제
    &lt;ul&gt;
      &lt;li&gt;주체와 객체의 등급을 비교하여 접근 권한을 부여&lt;/li&gt;
      &lt;li&gt;제3자가 접근통제 권한을 지정&lt;/li&gt;
      &lt;li&gt;객체별로 보안 등급 부여, 사용자별로 인가 등급 부여&lt;/li&gt;
      &lt;li&gt;자신보다 보안 등급이 높은 객체에 대해 읽기, 수정, 등록이 모두 불가능&lt;/li&gt;
      &lt;li&gt;자신과 보안 등급이 같은 객체에 대해 읽기, 수정, 등록 가능&lt;/li&gt;
      &lt;li&gt;자신보다 보안 등급이 낮은 객체에 대해 읽기 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--접근통제-정책&quot;&gt;- 접근통제 정책&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;신분 기반 정책
    &lt;ul&gt;
      &lt;li&gt;주체나 그룹의 신분에 근거하여 객체의 접근을 제한하는 방법&lt;/li&gt;
      &lt;li&gt;IBP : 최소 권한 정책. 단일 주체에게 하나의 객체에 대한 허가 부여&lt;/li&gt;
      &lt;li&gt;GBP : 복수 주체에 하나의 객체에 대한 허가 부여&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;규칙 기반 정책
    &lt;ul&gt;
      &lt;li&gt;주체가 갖는 권한에 근거하여 객체의 접근을 제한하는 방법&lt;/li&gt;
      &lt;li&gt;MLP : 사용자 및 객체별로 지정된 기밀 분류에 따른 정책&lt;/li&gt;
      &lt;li&gt;CBP : 집단별로 지정된 기밀 허가에 따른 정책&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;역할 기반 정책
    &lt;ul&gt;
      &lt;li&gt;주체의 신분이 아니라 주체가 맡은 역할에 근거하여 객체의 접근을 제한&lt;/li&gt;
      &lt;li&gt;인사 담당자, DBA 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--접근통제-매커니즘&quot;&gt;- 접근통제 매커니즘&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;접근통제 정책을 구현하는 기술적인 방법&lt;/li&gt;
  &lt;li&gt;접근통제 목록, 능력 리스트, 보안 등급, 패스워드, 암호화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--접근통제-보안-모델&quot;&gt;- 접근통제 보안 모델&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보안 정책을 구현하기 위한 정형화된 모델&lt;/li&gt;
  &lt;li&gt;기밀성 모델
    &lt;ul&gt;
      &lt;li&gt;군사적인 목적으로 개발된 수학적 모델. 기밀성 보장이 최우선&lt;/li&gt;
      &lt;li&gt;군대 시스템 등 특수 환경에서 주로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;무결성 모델
    &lt;ul&gt;
      &lt;li&gt;불법적인 정보 변경을 방지하기 위해 무결성을 기반으로 개발된 모델&lt;/li&gt;
      &lt;li&gt;데이터의 일관성 유지에 중점&lt;/li&gt;
      &lt;li&gt;주체 및 객체의 보안 등급을 기반으로 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;접근통제 모델
    &lt;ul&gt;
      &lt;li&gt;접근통제 행렬 : 행은 주체, 열은 객체&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--접근통제-조건&quot;&gt;- 접근통제 조건&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;접근통제 매커니즘의 취약점을 보완하기 위해 접근통제 정책에 부가하여 적용할 수 있는 조건&lt;/li&gt;
  &lt;li&gt;값 종속 통제 : 객체에 저장된 값에 따라 다르게 접근 통제를 허용해야 하는 경우&lt;/li&gt;
  &lt;li&gt;다중 사용자 통제 : 다수의 사용자가 동시에 접근을 요구하는 경우&lt;/li&gt;
  &lt;li&gt;컨텍스트 기반 통제 : 다른 보안 정책과 결합하여 보안 시스템의 취약점을 보완할 때&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--감사-추적&quot;&gt;- 감사 추적&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB에 접근하여 수행한 모든 활동을 기록하는 기능&lt;/li&gt;
  &lt;li&gt;오류가 발생한 DB를 복구하거나 부적절한 데이터 조작을 파악하기 위해 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;12-스토리지--b&quot;&gt;12. 스토리지 – B&lt;/h2&gt;

&lt;h3 id=&quot;--스토리지-개요&quot;&gt;- 스토리지 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;단일 디스크로 처리할 수 없는 대용량의 데이터를 저장하기 위해 서버와 저장장치를 연결하는 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--dasdirect-attached-storage&quot;&gt;- DAS(Direct Attached Storage)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;서버와 저장장치를 전용 케이블로 직접 연결. 외장하드를 연결하는 것이 해당&lt;/li&gt;
  &lt;li&gt;서버에서 저장장치를 관리&lt;/li&gt;
  &lt;li&gt;직접 연결하므로 속도가 빠르고 설치 및 운영이 쉬움&lt;/li&gt;
  &lt;li&gt;초기 구축 비용 및 유지보수 비용 저렴&lt;/li&gt;
  &lt;li&gt;다른 서버에서 접근할 수 없고 파일 공유 불가능&lt;/li&gt;
  &lt;li&gt;확장성 및 유연성이 상대적으로 떨어짐&lt;/li&gt;
  &lt;li&gt;저장 데이터가 적고 공유가 필요 없는 환경에 적합&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--nasnetwork-attached-storage&quot;&gt;- NAS(Network Attached Storage)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;서버와 저장장치를 네트워크를 통해 연결&lt;/li&gt;
  &lt;li&gt;NAS Storage가 내장된 저장장치를 직접 관리&lt;/li&gt;
  &lt;li&gt;Ethernet 스위치를 통해 다른 서버에서도 스토리지에 접근할 수 있음&lt;/li&gt;
  &lt;li&gt;파일 공유 가능, 장소에 구애받지 않고 저장장치에 쉽게 접근 가능&lt;/li&gt;
  &lt;li&gt;확장성 및 유연성이 우수&lt;/li&gt;
  &lt;li&gt;접속 증가 시 성능 저하&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--sanstorage-area-network&quot;&gt;- SAN(Storage Area Network)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;서버와 저장장치를 연결하는 전용 네트워크를 별도로 구성&lt;/li&gt;
  &lt;li&gt;파이어 채널 스위치를 이용하여 네트워크 구성&lt;/li&gt;
  &lt;li&gt;광케이블로 연결하므로 처리 속도가 빠름&lt;/li&gt;
  &lt;li&gt;저장장치 및 파일 공유 가능&lt;/li&gt;
  &lt;li&gt;확장성, 유연성, 가용성이 뛰어남&lt;/li&gt;
  &lt;li&gt;높은 트랜잭션 처리에 효과적&lt;/li&gt;
  &lt;li&gt;장비의 업그레이드가 필요하고, 비용이 많이 듦&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;13-논리-데이터-모델의-물리-데이터-모델-변환--a&quot;&gt;13. 논리 데이터 모델의 물리 데이터 모델 변환 – A&lt;/h2&gt;

&lt;h3 id=&quot;--테이블-1&quot;&gt;- 테이블&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Row : 튜플, 인스턴스&lt;/li&gt;
  &lt;li&gt;Column : 속성&lt;/li&gt;
  &lt;li&gt;기본키 : 후보키 중에서 선택한 주키. 특정 튜플을 유일하게 구별할 수 있는 속성&lt;/li&gt;
  &lt;li&gt;외래키 : 다른 릴레이션의 기본키를 참조하는 속성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--entity를-테이블로-변환&quot;&gt;- Entity를 테이블로 변환&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;고려사항
    &lt;ul&gt;
      &lt;li&gt;테이블과 Entity 명칭은 동일하게 하는 것을 권고&lt;/li&gt;
      &lt;li&gt;Entity는 한글명 사용, 테이블은 영문명 사용&lt;/li&gt;
      &lt;li&gt;메타 데이터 관리 시스템에 표준화된 용어가 있을 때는 메타에 등록된 단어를 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--슈퍼타입서브타입을-테이블로-변환&quot;&gt;- 슈퍼타입/서브타입을 테이블로 변환&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;물리 데이터 모델을 설계할 때는 슈퍼타입/서브타입을 테이블로 변환해야 함&lt;/li&gt;
  &lt;li&gt;슈퍼타입 기준 테이블 변환
    &lt;ul&gt;
      &lt;li&gt;서브타입을 슈퍼타입에 통합하여 하나의 테이블로 만드는 것&lt;/li&gt;
      &lt;li&gt;서브타입에 속성이나 관계가 적을 경우에 적용. 서브타입의 모든 속성이 포함&lt;/li&gt;
      &lt;li&gt;장점
        &lt;ul&gt;
          &lt;li&gt;데이터 액세스가 상대적으로 용이&lt;/li&gt;
          &lt;li&gt;뷰를 이용해 각각의 서브타입만을 액세스하거나 수정할 수 있음&lt;/li&gt;
          &lt;li&gt;임의 집합에 대한 처리가 용이&lt;/li&gt;
          &lt;li&gt;수행 속도가 빨라짐&lt;/li&gt;
          &lt;li&gt;SQL 문장 구성이 단순해짐&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;단점
        &lt;ul&gt;
          &lt;li&gt;컬럼이 증가해 디스크 저장 공간이 증가&lt;/li&gt;
          &lt;li&gt;서브타입에 대한 구분이 필요한 경우가 많이 발생&lt;/li&gt;
          &lt;li&gt;인덱스 크기의 증가로 인덱스 효율이 떨어짐&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;서브타입 기준 테이블 변환
    &lt;ul&gt;
      &lt;li&gt;슈퍼타입 속성들을 각각의 서브타입에 추가하여 서브타입을 개별적인 테이블로 만드는 것&lt;/li&gt;
      &lt;li&gt;서브타입에 속성이나 관계가 많이 포함된 경우 적용&lt;/li&gt;
      &lt;li&gt;장점
        &lt;ul&gt;
          &lt;li&gt;서브타입 속성들의 선택 사양이 명확한 경우 유리&lt;/li&gt;
          &lt;li&gt;처리할 때마다 서브타입 유형을 구분할 필요가 없음&lt;/li&gt;
          &lt;li&gt;테이블당 크기가 감소하여 전체 테이블 스캔시 유리&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;단점
        &lt;ul&gt;
          &lt;li&gt;수행 속도 감소&lt;/li&gt;
          &lt;li&gt;복잡한 처리를 하는 SQL의 통합이 어려움&lt;/li&gt;
          &lt;li&gt;부분 범위에 대한 처리가 곤란&lt;/li&gt;
          &lt;li&gt;여러 테이블을 통합한 뷰는 조회만 가능&lt;/li&gt;
          &lt;li&gt;식별자의 유지 관리가 어려움&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;개별타입 기준 테이블 변환
    &lt;ul&gt;
      &lt;li&gt;슈퍼타입과 서브타입들을 각각의 개별적인 테이블로 변환&lt;/li&gt;
      &lt;li&gt;1:1 관계가 형성&lt;/li&gt;
      &lt;li&gt;전체 데이터에 대한 처리가 빈번한 경우&lt;/li&gt;
      &lt;li&gt;서브타입의 처리가 대부분 독립적으로 발생하는 경우&lt;/li&gt;
      &lt;li&gt;통합하는 테이블의 컬럼 수가 많은 경우&lt;/li&gt;
      &lt;li&gt;서브타입의 컬럼 수가 많은 경우&lt;/li&gt;
      &lt;li&gt;트랜잭션이 주로 슈퍼타입에서 발생하는 경우&lt;/li&gt;
      &lt;li&gt;슈퍼타입의 처리 범위가 넓고 빈번하게 발생하여 단일 테이블 클러스터링이 필요한 경우&lt;/li&gt;
      &lt;li&gt;장점
        &lt;ul&gt;
          &lt;li&gt;저장 공간이 상대적으로 작음&lt;/li&gt;
          &lt;li&gt;슈퍼타입 또는 서브타입 각각의 테이블에 속한 정보만 조회하는 경우 문장 작성 용이&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;단점
        &lt;ul&gt;
          &lt;li&gt;슈퍼타입 또는 서브타입의 정보를 같이 처리하면 항상 조인이 발생하여 성능이 저하됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--속성을-컬럼으로-변환&quot;&gt;- 속성을 컬럼으로 변환&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;논리 데이터 모델에서 정의한 속성을 물리 데이터 모델의 컬럼으로 변환&lt;/li&gt;
  &lt;li&gt;일반 속성 변환
    &lt;ul&gt;
      &lt;li&gt;표준화 된 약어를 사용하여 일치시키는 것이 좋음&lt;/li&gt;
      &lt;li&gt;SQL 예약어 사용을 피함&lt;/li&gt;
      &lt;li&gt;가능한 한 짧게 지정&lt;/li&gt;
      &lt;li&gt;복합 단어를 컬럼명으로 사용할 때는 미리 정의된 표준을 따름&lt;/li&gt;
      &lt;li&gt;샘플 데이터를 작성하여 컬럼의 정합성 검증&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Primary UID를 기본키로 변환
    &lt;ul&gt;
      &lt;li&gt;논리 데이터 모델에서의 Primary UIU는 물리 데이터 모델의 기본키로 만듬&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Primary UID(관계의 UID Bar)를 기본키로 변환
    &lt;ul&gt;
      &lt;li&gt;다른 Entity와의 관계로 인해 생성된 Primary UIU는 물리 데이터 모델의 기본키로 만듬&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Secondary(Alternate) UID를 유니크기로 변환
    &lt;ul&gt;
      &lt;li&gt;논리 모델링에서 정의된 Secondary UID 및 Alternate Key는 물리 모델에서 유니크 키로 만듬&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--관계를-외래키로-변환&quot;&gt;- 관계를 외래키로 변환&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기본키와 이를 참조하는 외래키로 변환&lt;/li&gt;
  &lt;li&gt;1:1 관계
    &lt;ul&gt;
      &lt;li&gt;A의 기본키를 B의 외래키로 추가하거나 B의 기본키를 A의 외래키로 추가하여 표현&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;1:N 관계
    &lt;ul&gt;
      &lt;li&gt;A의 기본키를 B의 외래키로 추가하여 표현하거나 별도의 테이블로 표현&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;N:M 관계
    &lt;ul&gt;
      &lt;li&gt;A와 B의 기본키를 모두 포함한 별도의 릴레이션으로 표현&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;1:N 순환 관계
    &lt;ul&gt;
      &lt;li&gt;A에 A의 기본키를 참조하는 외래키 컬럼을 추가하여 표현&lt;/li&gt;
      &lt;li&gt;데이터의 계층 구조를 표현하기 위해 주로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--관리-목적의-테이블컬럼-추가&quot;&gt;- 관리 목적의 테이블/컬럼 추가&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;논리 데이터 모델에 존재하지 않는 테이블이나 컬럼을 물리 데이터 모델에 추가하여 DB의 관리 혹은 프로그래밍의 수행 속도를 향상시킬 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-타입-선택&quot;&gt;- 데이터 타입 선택&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DBMS의 물리적 특성과 성능을 고려하여 최적의 데이터 타입과 데이터의 최대 길이 선택&lt;/li&gt;
  &lt;li&gt;문자타입, 숫자타입, 날짜타입 등&lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 3과목 2장</summary></entry><entry><title type="html">[CSS] CSS 속성 - 글꼴, 문자</title><link href="https://leewonwoo1.github.io/css/frontend-css-properties-font/" rel="alternate" type="text/html" title="[CSS] CSS 속성 - 글꼴, 문자" /><published>2021-07-31T03:00:00+09:00</published><updated>2021-07-31T12:00:00+09:00</updated><id>https://leewonwoo1.github.io/css/frontend-css-properties-font</id><content type="html" xml:base="https://leewonwoo1.github.io/css/frontend-css-properties-font/">&lt;h2 id=&quot;글꼴&quot;&gt;글꼴&lt;/h2&gt;

&lt;h3 id=&quot;--font-style&quot;&gt;- font-style&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 글자의 기울기 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;font-style&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기울기&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없음&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;italic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;이텔릭체&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;oblique&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기울어진&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;글자&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--font-weight&quot;&gt;- font-weight&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 글자의 두께 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;font-weight&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;normal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기본&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;두께&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bold&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;두껍게&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bolder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부모&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소보다&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;두껍게&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lighter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부모&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소보다&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;얇게&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;900&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;100단위의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;숫자&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;9개&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--font-size&quot;&gt;- font-size&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 글자의 크기 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;font-size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기본&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;단위&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;%:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부모&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;폰트&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;대한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;비율&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;larger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부모&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소보다&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크게&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;smaller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부모&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소보다&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;작게&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xx-small&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xx-large&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가장&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;작은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가장&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;큰&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기까지&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;7단계&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--line-height&quot;&gt;- line-height&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 한 줄의 높이, 행간과 유사 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;line-height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;브라우저의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기본&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;정의&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;숫자&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;글꼴&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;배수로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;지정&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;단위&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;%:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;글꼴&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;비율로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;지정&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--font-family&quot;&gt;- font-family&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;font-family&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;바탕체&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계열&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;고딕체&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계열&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;monospace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;고정너비&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;글꼴&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계열&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cursive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;필기체&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계열&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fantasy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;장식&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;글꼴&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계열&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div style=&quot;font-family: serif&quot;&gt;Hello World!&lt;/div&gt;
&lt;div style=&quot;font-family: sans-serif&quot;&gt;Hello World!&lt;/div&gt;
&lt;div style=&quot;font-family: monospace&quot;&gt;Hello World!&lt;/div&gt;
&lt;div style=&quot;font-family: cursive&quot;&gt;Hello World!&lt;/div&gt;
&lt;div style=&quot;font-family: fantasy&quot;&gt;Hello World!&lt;/div&gt;

&lt;h2 id=&quot;문자&quot;&gt;문자&lt;/h2&gt;

&lt;h3 id=&quot;--color&quot;&gt;- color&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 글자의 색상 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;검정색&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;색상&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기타&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;지정&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가능한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;색상&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--text-align&quot;&gt;- text-align&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 문자의 정렬 방식 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;text-align&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;왼쪽&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;정렬&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;오른쪽&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;정렬&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가운데&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;정렬&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;justify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;양쪽&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;정렬&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--text-decoration&quot;&gt;- text-decoration&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 문자의 장식(선) */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;text-decoration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;장식&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없음&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;underline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;밑줄&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;overline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;윗줄&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;line-through&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;중앙&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;선&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;Hello World!&lt;/div&gt;
&lt;div style=&quot;text-decoration: underline&quot;&gt;Hello World!&lt;/div&gt;
&lt;div style=&quot;text-decoration: overline&quot;&gt;Hello World!&lt;/div&gt;
&lt;div style=&quot;text-decoration: line-through&quot;&gt;Hello World!&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--text-indent&quot;&gt;- text-indent&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 문자 첫 줄의 들여쓰기 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;text-indent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;들여쓰기&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없음&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;단위&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;%:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;너비에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;대한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;비율&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;음수&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사용&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가능&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;반대는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;내어쓰기&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;outdent&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="CSS" /><category term="CSS" /><category term="Web" /><summary type="html">CSS 속성인 글꼴, 문자 정리</summary></entry><entry><title type="html">[정보처리기사 필기] 3-1. 논리 데이터베이스 설계</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp10/" rel="alternate" type="text/html" title="[정보처리기사 필기] 3-1. 논리 데이터베이스 설계" /><published>2021-07-30T23:00:00+09:00</published><updated>2021-07-31T08:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp10</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp10/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-데이터베이스-설계--a&quot;&gt;1. 데이터베이스 설계 – A&lt;/h2&gt;

&lt;h3 id=&quot;--데이터베이스-설계의-개념&quot;&gt;- 데이터베이스 설계의 개념&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB 구조에 맞게 변형한 후 DBMS로 DB를 구현하여 일반 사용자들이 사용하게 하는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터베이스-설계-시-고려사항&quot;&gt;- 데이터베이스 설계 시 고려사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;무결성 : 저장된 데이터가 정해진 제약 조건을 항상 만족&lt;/li&gt;
  &lt;li&gt;일관성 : 특정 질의에 대한 응답이 처음부터 끝까지 일정해야 함&lt;/li&gt;
  &lt;li&gt;회복 : 장애 발생 직전의 상태로 복구할 수 있어야 함&lt;/li&gt;
  &lt;li&gt;보안 : 불법적인 데이터의 노출 또는 변경이나 손실로부터 보호&lt;/li&gt;
  &lt;li&gt;효율성 : 응답시간의 단축, 시스템의 생산성, 저장 공간의 최적화&lt;/li&gt;
  &lt;li&gt;DB 확장 : 운영에 영향을 주지 않으면서 지속적으로 데이터를 추가할 수 있어야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터베이스-설계-순서&quot;&gt;- 데이터베이스 설계 순서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;요구조건 분석 -&amp;gt; 개념적 설계 -&amp;gt; 논리적 설계 -&amp;gt; 물리적 설계 -&amp;gt; 구현&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--요구-조건-분석&quot;&gt;- 요구 조건 분석&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB를 사용할 사람들로부터 필요한 용도를 파악하는 것&lt;/li&gt;
  &lt;li&gt;사용자에 따른 수행 업무와 필요 데이터 수집&lt;/li&gt;
  &lt;li&gt;요구 조건 명세서 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--개념적-설계정보-모델링-개념화&quot;&gt;- 개념적 설계(정보 모델링, 개념화)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;현실 세계에 대한 인식을 추상적 개념으로 표현&lt;/li&gt;
  &lt;li&gt;개념 스키마 모델링과 트랜잭션 모델링을 병행 수행&lt;/li&gt;
  &lt;li&gt;DBMS에 독립적인 E-R 다이어그램으로 작성&lt;/li&gt;
  &lt;li&gt;DBMS에 독립적인 개념 스키마 설계&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--논리적-설계데이터-모델링&quot;&gt;- 논리적 설계(데이터 모델링)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;특정 DBMS가 지원하는 논리적 자료 구조로 변환시키는 과정&lt;/li&gt;
  &lt;li&gt;논리적 구조의 데이터로 모델화&lt;/li&gt;
  &lt;li&gt;개념 스키마를 평가 및 정제하고 DBMS에 따라 서로 다른 논리적 스키마를 설계하는 단계&lt;/li&gt;
  &lt;li&gt;트랜잭션의 인터페이스를 설계&lt;/li&gt;
  &lt;li&gt;RDB라면 테이블을 설계하는 단계&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--물리적-설계데이터-구조화&quot;&gt;- 물리적 설계(데이터 구조화)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;논리적 구조로 표현된 데이터를 물리적 저장장치에 저장할 수 있는 물리적 구조의 데이터로 변환&lt;/li&gt;
  &lt;li&gt;DB 파일의 저장 구조 및 액세스 경로 결정&lt;/li&gt;
  &lt;li&gt;데이터가 컴퓨터에 저장되는 방법을 묘사&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터베이스-구현&quot;&gt;- 데이터베이스 구현&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;도출된 데이터베이스 스키마를 파일로 생성하는 과정&lt;/li&gt;
  &lt;li&gt;DDL을 이용하여 DB 스키마를 기술한 후 컴파일하여 빈 DB 파일 생성&lt;/li&gt;
  &lt;li&gt;빈 DB 파일에 데이터 입력&lt;/li&gt;
  &lt;li&gt;응용 프로그램을 위한 트랜잭션 작성&lt;/li&gt;
  &lt;li&gt;DB 접근을 위한 응용 프로그램 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-데이터-모델의-개념--b&quot;&gt;2. 데이터 모델의 개념 – B&lt;/h2&gt;

&lt;h3 id=&quot;--데이터-모델의-정의&quot;&gt;- 데이터 모델의 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;현실 세계의 정보들을 컴퓨터에 표현하기 위해 단순화, 추상화하여 체계적으로 표현한 개념적 모형&lt;/li&gt;
  &lt;li&gt;데이터 모델 구성 요소 : 객체, 속성, 관계&lt;/li&gt;
  &lt;li&gt;데이터 모델 종류 : 개념적 데이터 모델, 논리적 데이터 모델, 물리적 데이터 모델&lt;/li&gt;
  &lt;li&gt;데이터 모델에 표시할 요소 : 구조, 연산, 제약 조건&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-모델의-구성-요소&quot;&gt;- 데이터 모델의 구성 요소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개체(Entity) : 현실 세계의 대상체&lt;/li&gt;
  &lt;li&gt;속성(Attribute) : 데이터의 가장 작은 논리적 단위. 데이터 항목 또는 데이터 필드에 해당&lt;/li&gt;
  &lt;li&gt;관계(Relationship) : 개체 간의 관계 또는 속성 간의 논리적인 연결&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--개념적-데이터-모델&quot;&gt;- 개념적 데이터 모델&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정&lt;/li&gt;
  &lt;li&gt;타입들 간의 관계를 이용하여 현실 세계를 표현&lt;/li&gt;
  &lt;li&gt;정보 모델이라고도 함&lt;/li&gt;
  &lt;li&gt;E-R 모델&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--논리적-데이터-모델&quot;&gt;- 논리적 데이터 모델&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개념적 구조를 컴퓨터가 처리할 수 있도록 변환하는 과정&lt;/li&gt;
  &lt;li&gt;데이터 타입과 이들간의 관계를 이용하여 현실 세계를 표현&lt;/li&gt;
  &lt;li&gt;특정 DBMS는 특정 논리적 데이터 모델 하나만 선정하여 사용&lt;/li&gt;
  &lt;li&gt;관계 모델, 계층 모델, 네트워크 모델&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-모델에-표시할-요소&quot;&gt;- 데이터 모델에 표시할 요소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;구조 : 데이터 구조 및 정적 성질&lt;/li&gt;
  &lt;li&gt;연산 : 실제 데이터를 처리하는 작업에 대한 명세&lt;/li&gt;
  &lt;li&gt;제약 조건 : 실제 뎅터의 논리적인 제약 조건&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-데이터-모델의-구성요소---개체entity--a&quot;&gt;3. 데이터 모델의 구성요소 - 개체(Entity) – A&lt;/h2&gt;

&lt;h3 id=&quot;--개체의-정의-및-특징&quot;&gt;- 개체의 정의 및 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB에 표현하려는 것. 현실 세계의 대상체&lt;/li&gt;
  &lt;li&gt;어떤 정보를 제공하는 역할&lt;/li&gt;
  &lt;li&gt;영속적으로 존재하는 개체의 집합&lt;/li&gt;
  &lt;li&gt;독립적으로 존재하거나 그 자체로서도 구별 가능&lt;/li&gt;
  &lt;li&gt;유일한 식별자에 의해 식별 가능&lt;/li&gt;
  &lt;li&gt;업무 프로세스에 의해 이용됨&lt;/li&gt;
  &lt;li&gt;다른 개체와 하나 이상의 관계가 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--개체명-지정-방법&quot;&gt;- 개체명 지정 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;해당 업무에서 사용하는 용어로 지정&lt;/li&gt;
  &lt;li&gt;약어 사용은 제한&lt;/li&gt;
  &lt;li&gt;단수 명사 사용&lt;/li&gt;
  &lt;li&gt;개체명은 유일해야 함&lt;/li&gt;
  &lt;li&gt;의미에 따라 이름을 부여&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-데이터-모델의-구성요소---속성attribute--b&quot;&gt;4. 데이터 모델의 구성요소 - 속성(Attribute) – B&lt;/h2&gt;

&lt;h3 id=&quot;--속성의-정의-및-특징&quot;&gt;- 속성의 정의 및 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB를 구성하는 가장 작은 논리적 단위&lt;/li&gt;
  &lt;li&gt;데이터 항목 또는 데이터 필드에 해당&lt;/li&gt;
  &lt;li&gt;개체를 구성하는 항목&lt;/li&gt;
  &lt;li&gt;개체의 특성을 기술&lt;/li&gt;
  &lt;li&gt;속성의 추를 Degree 또는 차수라고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--속성의-종류&quot;&gt;- 속성의 종류&lt;/h3&gt;

&lt;h4 id=&quot;-속성의-특성에-따른-분류&quot;&gt;@ 속성의 특성에 따른 분류&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기본 속성
    &lt;ul&gt;
      &lt;li&gt;업무 분석을 통해 정의한 속성&lt;/li&gt;
      &lt;li&gt;가장 많고 일반적&lt;/li&gt;
      &lt;li&gt;업무상 코드로 정의한 속성은 기본 속성에서 제외&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;설계 속성
    &lt;ul&gt;
      &lt;li&gt;설계 과정에서 도출해내는 속성&lt;/li&gt;
      &lt;li&gt;데이터 모델링을 위해 업무를 규칙화하려고 새로 만들거나 변형하여 정의하는 속성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;파생 속성
    &lt;ul&gt;
      &lt;li&gt;다른 속성으로부터 계산이나 변형 등의 영향을 받아 발생하는 속성&lt;/li&gt;
      &lt;li&gt;되도록 적은 수를 정의하는 것이 좋음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-개체-구성-방식에-따른-분류&quot;&gt;@ 개체 구성 방식에 따른 분류&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기본키 속성 : 개체를 식별할 수 있는 속성&lt;/li&gt;
  &lt;li&gt;외래키 속성 : 다른 개체와의 관계에서 포함된 속성&lt;/li&gt;
  &lt;li&gt;일반 속성 : 개체에 포함도어 있고 기본키, 외래키에 포함되지 않은 속성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--속성-후보-선정-원칙&quot;&gt;- 속성 후보 선정 원칙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;속성으로 지정할 후보는 최대한 많이 선택하는 것이 좋음&lt;/li&gt;
  &lt;li&gt;원시 속성으로 판단되는 속성 후보는 버리지 않음&lt;/li&gt;
  &lt;li&gt;속성 후보군을 만들고 가장 근접한 개체에 할당&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--속성명-지정-원칙&quot;&gt;- 속성명 지정 원칙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;업무에서 사용하는 용어로 지정&lt;/li&gt;
  &lt;li&gt;서술형으로 지정하지 않음&lt;/li&gt;
  &lt;li&gt;약어의 사용 제한&lt;/li&gt;
  &lt;li&gt;개체명은 속성명으로 사용할 수 없음&lt;/li&gt;
  &lt;li&gt;개체에서 유일하게 식별 가능하도록 지정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-데이터-모델의-구성-요소---관계relationship--b&quot;&gt;5. 데이터 모델의 구성 요소 - 관계(Relationship) – B&lt;/h2&gt;

&lt;h3 id=&quot;--관계의-정의&quot;&gt;- 관계의 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개체와 개체 사이의 논리적인 연결&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--관계의-형태&quot;&gt;- 관계의 형태&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;1 : 1&lt;/li&gt;
  &lt;li&gt;1 : N&lt;/li&gt;
  &lt;li&gt;N : M&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--관계의-종류&quot;&gt;- 관계의 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;종속 관계&lt;/li&gt;
  &lt;li&gt;중복 관계&lt;/li&gt;
  &lt;li&gt;재귀 관계&lt;/li&gt;
  &lt;li&gt;배타 관계&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-e-r개체-관계-모델--a&quot;&gt;6. E-R(개체-관계) 모델 – A&lt;/h2&gt;

&lt;h3 id=&quot;--e-r-모델의-개요&quot;&gt;- E-R 모델의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개념적 데이터 모델의 대표&lt;/li&gt;
  &lt;li&gt;개체와 개체간의 관계를 기본 요소로 데이터를 개념적인 논리 데이터로 표현하기 위한 방법&lt;/li&gt;
  &lt;li&gt;대체 타입과 관계 타입을 이용해 현실 세계를 개념적으로 표현&lt;/li&gt;
  &lt;li&gt;데이터를 개체, 관계, 속성으로 묘사&lt;/li&gt;
  &lt;li&gt;특정 DBMS를 고려한 것은 아님&lt;/li&gt;
  &lt;li&gt;E-R 다이어그램으로 표현하며, 1:1, 1:N, N:M 등의 관계 유형을 제한 없이 나타낼 수 있음&lt;/li&gt;
  &lt;li&gt;일반화 계층 같은 복잡한 개념들이 첨가되어 확장된 모델로 발전&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--e-r-다이어그램&quot;&gt;- E-R 다이어그램&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기호를 사용하여 시각적으로 표현한 그림&lt;/li&gt;
  &lt;li&gt;역할을 가진 모든 실체들을 표현&lt;/li&gt;
  &lt;li&gt;뷰들을 하나로 단일화&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-피터-첸-표기법&quot;&gt;@ 피터 첸 표기법&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;개체 : 사각형&lt;/li&gt;
  &lt;li&gt;관계 : 마름모&lt;/li&gt;
  &lt;li&gt;속성 : 타원&lt;/li&gt;
  &lt;li&gt;다중값 속성 : 이중 타원&lt;/li&gt;
  &lt;li&gt;기본키 속성 : 밑줄 타원&lt;/li&gt;
  &lt;li&gt;복합 속성 : 복수 타원&lt;/li&gt;
  &lt;li&gt;1:1, 1:N, N:M 등 개체 간 관계에 대한 대응수를 선 위에 기술 : 관계&lt;/li&gt;
  &lt;li&gt;개체 타입과 속성을 연결 : 선, 링크&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-정보-공학-표기법&quot;&gt;@ 정보 공학 표기법&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;개체 : 사각형&lt;/li&gt;
  &lt;li&gt;개체명 : 박스 바깥쪽 위&lt;/li&gt;
  &lt;li&gt;속성 : 기본키 속성과 일반 속성을 분리하여 표시&lt;/li&gt;
  &lt;li&gt;관계 : 관계 표기 기호를 사용
    &lt;ul&gt;
      &lt;li&gt;필수 : ㅣ&lt;/li&gt;
      &lt;li&gt;선택적 : ㅇ&lt;/li&gt;
      &lt;li&gt;다중 : &amp;lt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-바커-표기법&quot;&gt;@ 바커 표기법&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;개체 : 모서리가 둥근 박스&lt;/li&gt;
  &lt;li&gt;개체명 : 박스 안 가장 위&lt;/li&gt;
  &lt;li&gt;속성
    &lt;ul&gt;
      &lt;li&gt;값이 반드시 저장되어야 하는 경우 : *&lt;/li&gt;
      &lt;li&gt;값이 저장될 수도, 안될 수도 있는 경우 : ㅇ&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;관계
    &lt;ul&gt;
      &lt;li&gt;필수 : ㅡ&lt;/li&gt;
      &lt;li&gt;선택적 : ………&lt;/li&gt;
      &lt;li&gt;다중 : &amp;lt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-관계형-데이터베이스의-구조--a&quot;&gt;7. 관계형 데이터베이스의 구조 – A&lt;/h2&gt;

&lt;h3 id=&quot;--관계형-데이터베이스의-개요&quot;&gt;- 관계형 데이터베이스의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개체나 관계를 모두 릴레이션이라는 표로 표현&lt;/li&gt;
  &lt;li&gt;개체를 표현하는 개체 릴레이션, 관계를 나타내는 관계 릴레이션으로 구분&lt;/li&gt;
  &lt;li&gt;장점 : 간결하고 보기 편리하며, 다른 DB로 변환이 용이&lt;/li&gt;
  &lt;li&gt;단점 : 성능이 다소 떨어짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--관계형-데이터베이스의-relation-구조&quot;&gt;- 관계형 데이터베이스의 Relation 구조&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;구조를 나타내는 릴레이션 스키마와 실제 값들인 릴레이션 인스턴스로 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-튜플&quot;&gt;@ 튜플&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;릴레이션을 구성하는 각각의 행&lt;/li&gt;
  &lt;li&gt;속성의 모임으로 구성&lt;/li&gt;
  &lt;li&gt;파일 구조에서 레코드와 같은 의미&lt;/li&gt;
  &lt;li&gt;튜플의 수를 Cardinality 또는 기수, 대응수라고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-속성&quot;&gt;@ 속성&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;DB를 구성하는 가장 작은 논리적 단위&lt;/li&gt;
  &lt;li&gt;파일 구조상의 데이터 항목 또는 데이터 필드에 해당&lt;/li&gt;
  &lt;li&gt;개체의 특성을 기술&lt;/li&gt;
  &lt;li&gt;속성의 수를 Degree 또는 차수라고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-도메인&quot;&gt;@ 도메인&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 Attribute가 취할 수 있는 같은 타입의 Atomic 값들의 집합&lt;/li&gt;
  &lt;li&gt;값의 합법 여부를 시스템이 검사하는데 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--릴레이션의-특징&quot;&gt;- 릴레이션의 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;한 릴레이션에는 똑같은 튜플이 포함될 수 없으므로 튜플들은 모두 상이함&lt;/li&gt;
  &lt;li&gt;튜플 사이에는 순서가 없음&lt;/li&gt;
  &lt;li&gt;튜플의 삽입, 삭제 등의 작업으로 릴레이션은 시간에 따라 변함&lt;/li&gt;
  &lt;li&gt;릴레이션 스키마를 구성하는 속성들 간의 순서는 중요하지 않음&lt;/li&gt;
  &lt;li&gt;속성의 명칭은 유일해야 하지만, 값은 동일한 값이 있을 수 있음&lt;/li&gt;
  &lt;li&gt;속성의 값은 논리적으로 더 이상 쪼갤 수 없는 원자값만을 저장&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;8-관계형-데이터베이스의-제약-조건--key--a&quot;&gt;8. 관계형 데이터베이스의 제약 조건 : Key – A&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;제약 조건이란 키를 이용하여 입력되는 데이터에 제한을 주는 것.&lt;/li&gt;
  &lt;li&gt;개체 무결성 제약, 참조 무결성 제약 등이 해당&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--key의-개념-및-종류&quot;&gt;- Key의 개념 및 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;키는 조건에 만족하는 튜플을 찾거나 정렬할 때 튜플을 서로 구분할 수 있는 기준이 되는 Attribute&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-후보키candidate-key&quot;&gt;@ 후보키(Candidate Key)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;튜플을 유일하게 식별하기 위해 사용하는 속성들의 부분집합. 즉 기본키로 사용할 수 있는 속성들&lt;/li&gt;
  &lt;li&gt;모든 릴레이션에는 반드시 하나 이상의 후보키 존재&lt;/li&gt;
  &lt;li&gt;유일성과 최소성을 만족시켜야 함&lt;/li&gt;
  &lt;li&gt;유일성 : 하나의 키 값으로 하나의 튜플만을 유일하게 식별&lt;/li&gt;
  &lt;li&gt;최소성 : 유일하게 식별하는 데 꼭 필요한 속성으로만 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-기본키primary-key&quot;&gt;@ 기본키(Primary Key)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;후보키 중에서 특별히 선정된 주키로 중복된 값을 가질 수 없음&lt;/li&gt;
  &lt;li&gt;특정 튜플을 유일하게 구별할 수 있는 속성&lt;/li&gt;
  &lt;li&gt;후보키의 성질을 가짐. 유일성과 최소성을 가지며, 튜플을 식별하기 위해 반드시 필요&lt;/li&gt;
  &lt;li&gt;NULL 값을 가질 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-대체키alternate-key&quot;&gt;@ 대체키(Alternate Key)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;후보키가 둘 이상일 때 기본키를 제외한 나머지 후보키. 보조키라고도 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-슈퍼키super-key&quot;&gt;@ 슈퍼키(Super Key)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;속성들의 집합으로 구성된 키&lt;/li&gt;
  &lt;li&gt;슈퍼키로 구성된 속성의 집합과 동일한 값은 나타나지 않음&lt;/li&gt;
  &lt;li&gt;유일성은 만족시키지만, 최소성은 만족시키지 못함&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-외래키foreign-key&quot;&gt;@ 외래키(Foreign Key)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합&lt;/li&gt;
  &lt;li&gt;참조되는 릴레이션의 기본키와 대응되어 릴레이션 간에 참조 관계를 표현&lt;/li&gt;
  &lt;li&gt;외래키로 지정되면 참조 릴레이션의 기본키에 없는 값은 입력할 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;9-관계형-데이터베이스의-제약-조건--무결성---b&quot;&gt;9. 관계형 데이터베이스의 제약 조건 : 무결성 - B&lt;/h2&gt;

&lt;h3 id=&quot;--무결성의-개념-및-종류&quot;&gt;- 무결성의 개념 및 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;무결성이란 저장된 데이터 값과 그것이 표현하는 현실 세계의 실제 값이 일치하는 정확성&lt;/li&gt;
  &lt;li&gt;부정확한 자료가 DB 내에 저장되는 것을 방지하기 위한 제약 조건&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-개체-무결성entity-integrity&quot;&gt;@ 개체 무결성(Entity Integrity)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기본키를 구성하는 어떤 속성도 Null 값이나 중복값을 가질 수 없다는 규정&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-도메인-무결성domain-integrity&quot;&gt;@ 도메인 무결성(Domain Integrity)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;주어진 속성 값이 정의된 도메인에 속한 값이어야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-참조-무결성referential-integrity&quot;&gt;@ 참조 무결성(Referential Integrity)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;외래키 값은 Null이거나 참조 릴레이션의 기본키 값과 동일해야 함&lt;/li&gt;
  &lt;li&gt;릴레이션은 참조할 수 없는 외래키 값을 가질 수 없다는 규정&lt;/li&gt;
  &lt;li&gt;외래키와 참조하려는 테이블의 기본키는 도메인과 속성 개수가 같아야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-사용자-정의-무결성&quot;&gt;@ 사용자 정의 무결성&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;속성 값들이 사용자가 정의한 제약 조건에 만족해야 하는 규정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-무결성-강화&quot;&gt;- 데이터 무결성 강화&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 특성에 맞는 적절한 무결성을 정의하고 강화해야 함&lt;/li&gt;
  &lt;li&gt;DB 구축 과정에서 정의&lt;/li&gt;
  &lt;li&gt;애플리케이션
    &lt;ul&gt;
      &lt;li&gt;데이터 생성, 수정, 삭제 시 무결성 조건을 검증하는 코드를 추가&lt;/li&gt;
      &lt;li&gt;복잡한 규칙 등은 애플리케이션 내에서 처리&lt;/li&gt;
      &lt;li&gt;장점 : 복잡한 무결성 조건의 구현이 가능&lt;/li&gt;
      &lt;li&gt;단점 : 분산되어 있어 관리가 힘들고, 개별 시행으로 적정성 검토가 어려움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터베이스 트리거
    &lt;ul&gt;
      &lt;li&gt;트리거 이벤트에 무결성 조건을 실행하는 절차형 SQL을 추가&lt;/li&gt;
      &lt;li&gt;장점 : 통합 관리가 가능하고, 복잡한 요구 조건의 구현이 가능&lt;/li&gt;
      &lt;li&gt;단점 : 운영 중 변경이 어렵고, 사용상 주의가 필요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;제약 조건
    &lt;ul&gt;
      &lt;li&gt;제약 조건을 설정하여 무결성을 유지&lt;/li&gt;
      &lt;li&gt;장점 : 통합 관리 가능, 간단한 선언으로 구현 가능, 변경 용이, 오류 데이터 발생 방지&lt;/li&gt;
      &lt;li&gt;단점 : 복잡한 제약 조건의 구현과 예외적인 처리가 불가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;10-관계대수-및-관계해석--a&quot;&gt;10. 관계대수 및 관계해석 – A&lt;/h2&gt;

&lt;h3 id=&quot;--관계대수의-개요&quot;&gt;- 관계대수의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;RDB에서 원하는 정보와 그 정보를 검색하기 위해서 어떻게 유도하는가를 기술하는 절차적인 언어&lt;/li&gt;
  &lt;li&gt;연산자와 연산규칙을 제공하는 언어로 피연산자가 릴레이션, 결과도 릴레이션&lt;/li&gt;
  &lt;li&gt;연산의 순서를 명시&lt;/li&gt;
  &lt;li&gt;순수 관계 연산자와 수학적 집합 이론에서 사용하는 일반 집합 연산자가 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--select&quot;&gt;- Select&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;선택 조건을 만족하는 튜플의 부분집합을 구하여 새로운 릴레이션을 만드는 연산&lt;/li&gt;
  &lt;li&gt;행에 해당하는 튜플을 구하는 것. 수평 연산&lt;/li&gt;
  &lt;li&gt;시그마(σ) 기호를 사용&lt;/li&gt;
  &lt;li&gt;표기 형식 : σ &lt;조건&gt; (R)&lt;/조건&gt;&lt;/li&gt;
  &lt;li&gt;비교 연산이 허용되며, 논리 연산자를 사용하여 여러 조건들을 하나의 조건으로 결합 가능&lt;/li&gt;
  &lt;li&gt;σ Avg &amp;gt; 90 (성적) : &lt;성적&gt; 릴레이션에서 평균 90점 이상인 튜플을 추출하시오&lt;/성적&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--project&quot;&gt;- Project&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;속성 리스트에 제시된 속성 값만을 추출하여 새로운 릴레이션을 만드는 연산&lt;/li&gt;
  &lt;li&gt;중복이 발생하면 제거됨&lt;/li&gt;
  &lt;li&gt;열에 해당하는 Attribute를 추출 하는 것. 수직 연산자&lt;/li&gt;
  &lt;li&gt;파이(π) 기호를 사용&lt;/li&gt;
  &lt;li&gt;표기 형식 : π &lt;속성리스트&gt; (R)&lt;/속성리스트&gt;&lt;/li&gt;
  &lt;li&gt;π Name, Avg (성적) : &lt;성적&gt; 릴레이션에서 Name과 Avg 속성을 추출하시오&lt;/성적&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--join&quot;&gt;- Join&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;공통 속성을 중심으로 두 개의 릴레이션을 하나로 합쳐서 새로운 릴레이션을 만드는 연산&lt;/li&gt;
  &lt;li&gt;차수는 합, Cartesian Product는 곱&lt;/li&gt;
  &lt;li&gt;Cartesian Product를 수행한 다음 Select를 수행한 것과 같음&lt;/li&gt;
  &lt;li&gt;▷◁ 기호를 사용&lt;/li&gt;
  &lt;li&gt;R ▷◁ 키속성r = 키속성s S&lt;/li&gt;
  &lt;li&gt;성적 ▷◁ No = No 학적부 : &lt;성적&gt; 릴레이션과 &lt;학적부&gt; 릴레이션을 No 속성을 기준으로 합치시오&lt;/학적부&gt;&lt;/성적&gt;&lt;/li&gt;
  &lt;li&gt;자연 조인
    &lt;ul&gt;
      &lt;li&gt;중복된 속성을 제거하여 같은 속성을 한 번만 표기하는 방법&lt;/li&gt;
      &lt;li&gt;자연 조인이 성립되려면 두 릴레이션의 속성명과 도메인이 같아야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--division&quot;&gt;- Division&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;X ⊃ Y인 R(X), S(Y)가 있을 때, S가 가진 속성을 제외한 속성만을 구하는 연산&lt;/li&gt;
  &lt;li&gt;÷ 기호를 사용&lt;/li&gt;
  &lt;li&gt;표기 형식 : R [속성r ÷ 속성s] S&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--일반-집합-연산자&quot;&gt;- 일반 집합 연산자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;집합 이론에서 사용하는 연산자&lt;/li&gt;
  &lt;li&gt;UNION ∪ : 합집합&lt;/li&gt;
  &lt;li&gt;INTERSECTION ∩ : 교집합&lt;/li&gt;
  &lt;li&gt;DIFFERENCE - : 차집합&lt;/li&gt;
  &lt;li&gt;CARTESIAN PRODUCT X : 교차곱&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--관계-해석&quot;&gt;- 관계 해석&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;수학의 술어 해석에 기반을 두고 RDB를 위해 제안&lt;/li&gt;
  &lt;li&gt;관계 데이터의 연산을 표현하는 방법. 계산 수식을 사용&lt;/li&gt;
  &lt;li&gt;원하는 정보가 무엇이라는 것만 정의하는 비절차적 특성&lt;/li&gt;
  &lt;li&gt;튜플 관계해석과 도메인 관계해석이 있음&lt;/li&gt;
  &lt;li&gt;관계해석과 관계대수는 RDB를 처리하는 기능과 능력면에서 동등&lt;/li&gt;
  &lt;li&gt;관계대수로 표현한 식은 관계해석으로 표현 가능&lt;/li&gt;
  &lt;li&gt;질의어로 표현&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;11-정규화normalization--a&quot;&gt;11. 정규화(Normalization) – A&lt;/h2&gt;

&lt;h3 id=&quot;--정규화의-개요&quot;&gt;- 정규화의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;종속성 이론을 이용하여 잘못 설계된 관계형 스키마를 더 작은 속성의 세트로 쪼개 바람직한 스키마로 만드는 과정&lt;/li&gt;
  &lt;li&gt;분해하는 과정&lt;/li&gt;
  &lt;li&gt;차수가 높아질수록 만족시켜야 할 제약 조건이 늘어남&lt;/li&gt;
  &lt;li&gt;DB의 논리적 설계 단계에서 수행&lt;/li&gt;
  &lt;li&gt;논리적 처리 및 품질에 큰 영향을 미침&lt;/li&gt;
  &lt;li&gt;일관성, 정확성, 단순성, 비중복성, 안정성 등을 보장&lt;/li&gt;
  &lt;li&gt;정규화 수준이 높을수록 유연한 데이터 구축이 가능. 데이터의 정확성 높아짐&lt;/li&gt;
  &lt;li&gt;물리적 접근이 복잡하고 너무 많은 조인으로 인해 조회 성능이 저하됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--정규화의-목적&quot;&gt;- 정규화의 목적&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 구조의 안정성 및 무결성 유지&lt;/li&gt;
  &lt;li&gt;어떠한 릴레이션이라도 DB 내에서 표현 가능&lt;/li&gt;
  &lt;li&gt;효과적인 검색 알고리즘을 생성&lt;/li&gt;
  &lt;li&gt;중복을 배제하여 이상의 발생 방지 및 자료 저장 공간의 최소화 가능&lt;/li&gt;
  &lt;li&gt;데이터 삽입 시 릴레이션을 재구성할 필요성 줄임&lt;/li&gt;
  &lt;li&gt;데이터 모형의 단순화 가능&lt;/li&gt;
  &lt;li&gt;속성의 배열 상태 검증 가능&lt;/li&gt;
  &lt;li&gt;개체와 속성의 누락 여부 확인이 가능&lt;/li&gt;
  &lt;li&gt;자료 검색과 추출의 효율성 추구&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--이상의-개념-및-종류&quot;&gt;- 이상의 개념 및 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정규화를 거치지 않으면 데이터들이 불필요하게 중복되어 릴레이션 조작시 문제 발생&lt;/li&gt;
  &lt;li&gt;삽입 이상 : 삽입할 때 의도와는 상관없이 원하지 않은 값들도 함께 삽입&lt;/li&gt;
  &lt;li&gt;삭제 이상 : 삭제할 때 의도와는 상관없는 값들도 함께 삭제&lt;/li&gt;
  &lt;li&gt;갱신 이상 : 속성값을 갱신할 때 일부 튜플의 정보만 갱신되어 정보에 모순이 생김&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--정규화의-원칙&quot;&gt;- 정규화의 원칙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정보의 무손실 표현. 정보의 손실이 있어서는 안됨&lt;/li&gt;
  &lt;li&gt;분리의 원칙. 하나의 독립된 관계성은 하나의 독립된 릴레이션으로 분리시켜 표현&lt;/li&gt;
  &lt;li&gt;데이터의 중복성이 감소되어야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--정규화-과정&quot;&gt;- 정규화 과정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;1NF : 도메인이 원자값만으로 되어 있는 정규형&lt;/li&gt;
  &lt;li&gt;2NF : 기본키가 아닌 모든 속성이 기본키에 대하여 완전 함수적 종속을 만족&lt;/li&gt;
  &lt;li&gt;3NF : 기본키가 아닌 모든 속성이 기본키에 대해 이행적 종속을 만족하지 않음&lt;/li&gt;
  &lt;li&gt;BCNF : 결정자가 모두 후보키인 정규형&lt;/li&gt;
  &lt;li&gt;4NF : 다치 종속이 성립하는 경우 R의 모든 속성이 A에 함수적 종속 관계를 만족&lt;/li&gt;
  &lt;li&gt;5NF : 모든 조인 종속이 R의 후보키를 통해서만 성립되는 정규형&lt;/li&gt;
  &lt;li&gt;정규화 과정 정리
    &lt;ul&gt;
      &lt;li&gt;도메인이 원자값&lt;/li&gt;
      &lt;li&gt;부분적 함수 종속 제거&lt;/li&gt;
      &lt;li&gt;이행적 함수 종속 제거&lt;/li&gt;
      &lt;li&gt;결정자이면서 후보키가 아닌 것 제거&lt;/li&gt;
      &lt;li&gt;다치 종속 제거&lt;/li&gt;
      &lt;li&gt;조인 종속성 이용&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;&lt;em&gt;도부이결다조&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;12-반정규화denormalization--b&quot;&gt;12. 반정규화(Denormalization) – B&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;정규화된 데이터 모델을 통합, 중복, 분리하는 과정. 의도적으로 정규화 원칙을 위배하는 행위&lt;/li&gt;
  &lt;li&gt;시스템의 성능이 향상, 관리 효율성 증가&lt;/li&gt;
  &lt;li&gt;데이터의 일관성 및 정합성이 저하&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테이블-통합&quot;&gt;- 테이블 통합&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;조인되는 경우가 많아 하나의 테이블로 합쳐 사용하는 것이 성능 향상에 도움이 될 경우 수행&lt;/li&gt;
  &lt;li&gt;1:1 관계 테이블 통합, 1:N 관계 테이블 통합, 슈퍼타입/서브타입 테이블 통합&lt;/li&gt;
  &lt;li&gt;고려사항
    &lt;ul&gt;
      &lt;li&gt;검색은 편하지만 레코드 증가로 인해 처리량 증가&lt;/li&gt;
      &lt;li&gt;통합으로 인해 입력, 수정, 삭제 규칙이 복잡해질 수 있음&lt;/li&gt;
      &lt;li&gt;Not Null, Default, Check 등의 제약조건을 설계하기 어려움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테이블-분할&quot;&gt;- 테이블 분할&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;테이블을 수직 또는 수평으로 분할하는 것&lt;/li&gt;
  &lt;li&gt;수평 분할
    &lt;ul&gt;
      &lt;li&gt;레코드를 기준으로 테이블을 분할&lt;/li&gt;
      &lt;li&gt;사용 빈도의 차이가 큰 경우 사용 빈도에 따라 테이블을 분할&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수직 분할
    &lt;ul&gt;
      &lt;li&gt;하나의 테이블에 속성이 너무 많을 경우 속성을 기준으로 테이블을 분할&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--중복-테이블-추가&quot;&gt;- 중복 테이블 추가&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;여러 테이블에서 데이터를 사용하거나 다른 서버 테이블을 이용해야 하는 경우 중복 테이블을 추가하여 효율성 향상&lt;/li&gt;
  &lt;li&gt;중복 테이블을 추가하는 경우
    &lt;ul&gt;
      &lt;li&gt;정규화로 인해 수행 속도가 느려지는 경우&lt;/li&gt;
      &lt;li&gt;많은 범위의 데이터를 자주 처리해야 하는 경우&lt;/li&gt;
      &lt;li&gt;특정 범위의 데이터만 자주 처리해야 하는 경우&lt;/li&gt;
      &lt;li&gt;처리 범위를 줄이지 않고는 수행 속도를 개선할 수 없는 경우&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--중복-속성-추가&quot;&gt;- 중복 속성 추가&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;조인해서 데이터를 처리할 때 데이터 조회 경로를 단축하기 위해 자주 사용하는 속성을 하나 더 추가&lt;/li&gt;
  &lt;li&gt;데이터 무결성 확보가 어렵고, 디스크 공간이 추가로 필요&lt;/li&gt;
  &lt;li&gt;중복 속성을 추가하는 경우
    &lt;ul&gt;
      &lt;li&gt;조인이 자주 발생하는 속성인 경우&lt;/li&gt;
      &lt;li&gt;접근 경로가 복잡한 속성인 경우&lt;/li&gt;
      &lt;li&gt;액세스의 조건으로 자주 사용되는 속성인 경우&lt;/li&gt;
      &lt;li&gt;기본키의 형태가 적절하지 않거나 여러 개의 속성으로 구성된 경우&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;고려사항
    &lt;ul&gt;
      &lt;li&gt;테이블 중복과 속성의 중복을 고려&lt;/li&gt;
      &lt;li&gt;데이터 일관성 및 무결성에 유의&lt;/li&gt;
      &lt;li&gt;SQL 그룹 함수를 이용하여 처리할 수 있어야 함&lt;/li&gt;
      &lt;li&gt;저장 공간의 지나친 낭비를 고려&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;13-시스템-카탈로그--a&quot;&gt;13. 시스템 카탈로그 – A&lt;/h2&gt;

&lt;h3 id=&quot;--시스템-카탈로그의-의미&quot;&gt;- 시스템 카탈로그의 의미&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시스템 그 자체에 관련이 있는 다양한 객체에 관한 정보를 포함하는 시스템 DB&lt;/li&gt;
  &lt;li&gt;사용자를 포함하여 DBMS에서 지원하는 모든 데이터 객체에 대한 정의나 명세에 관한 정보를 유지 관리하는 시스템 테이블&lt;/li&gt;
  &lt;li&gt;카탈로그들이 생성되면 데이터 사전에 저장&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--시스템-카탈로그-저장-정보&quot;&gt;- 시스템 카탈로그 저장 정보&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시스템 카탈로그에 저장된 정보를 메타 데이터라고 함&lt;/li&gt;
  &lt;li&gt;메타 데이터의 유형
    &lt;ul&gt;
      &lt;li&gt;DB 객체 정보 : Table, Index, View 등의 구조 및 통계 정보&lt;/li&gt;
      &lt;li&gt;사용자 정보 : 아이디, 패스워드, 접근 권한 등&lt;/li&gt;
      &lt;li&gt;테이블의 무결성 제약 조건 정보 : 기본키, 외래키, NULL 값 허용 여부 등&lt;/li&gt;
      &lt;li&gt;함수, 프로시저, 트리거 등에 대한 정보&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--카탈로그-특징&quot;&gt;- 카탈로그 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;일반 이용자도 SQL을 이용하여 내용 검색할 수 있음&lt;/li&gt;
  &lt;li&gt;INSERT, DELETE, UPDATE로 카탈로그를 갱신하는 것은 허용되지 않음&lt;/li&gt;
  &lt;li&gt;DBMS에 따라 상이한 구조&lt;/li&gt;
  &lt;li&gt;DBMS가 스스로 생성하고 유지함&lt;/li&gt;
  &lt;li&gt;변화가 있으면 시스템이 자동으로 갱신함&lt;/li&gt;
  &lt;li&gt;위치 투명성 및 중복 투명성을 제공하기 위해 필요한 모든 제어 정보를 가져야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--카탈로그데이터-사전을-참조하기-위한-dbms-내의-모듈-시스템&quot;&gt;- 카탈로그/데이터 사전을 참조하기 위한 DBMS 내의 모듈 시스템&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DDL Compiler : 메타 데이터를 갖는 테이블로 변환하여 데이터 사전에 저장&lt;/li&gt;
  &lt;li&gt;DML Compiler : DML문을 주 언어로 표현한 프로시저 호출로 변환하여 질의 처리기와 상호 통신&lt;/li&gt;
  &lt;li&gt;Data Directory
    &lt;ul&gt;
      &lt;li&gt;데이터 사전에 수록된 데이터를 실제로 접근하는 데 필요한 정보를 관리 유지하는 시스템&lt;/li&gt;
      &lt;li&gt;시스템 카탈로그는 사용자와 시스템 모두 접근할 수 있음&lt;/li&gt;
      &lt;li&gt;데이터 디렉터리는 시스템만 접근할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;질의 최적화기 : 사용자의 요구를 효율적인 형태로 변환하고 질의를 처리하는 좋은 전략 모색&lt;/li&gt;
  &lt;li&gt;트랜잭션 처리기 : 트랜잭션 문제를 해결하여, 사용자가 DB 자원을 배타적으로 이용할 수 있도록 함&lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 3과목 1장</summary></entry><entry><title type="html">[정보처리기사 필기] 2-5. 인터페이스 구현</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp9/" rel="alternate" type="text/html" title="[정보처리기사 필기] 2-5. 인터페이스 구현" /><published>2021-07-30T22:00:00+09:00</published><updated>2021-07-31T07:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp9</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp9/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-모듈-연계를-위한-인터페이스-기능-식별--a&quot;&gt;1. 모듈 연계를 위한 인터페이스 기능 식별 – A&lt;/h2&gt;

&lt;h3 id=&quot;--모듈-연계의-개요&quot;&gt;- 모듈 연계의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모듈 또는 내부 모듈 간 데이터의 교환을 위해 관계를 설정하는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-eaienterprise-application-integration&quot;&gt;@ EAI(Enterprise Application Integration)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기업 내 각종 애플리케이션 및 플랫폼 간의 정보 전달, 연계, 통합 등 상호 연동이 가능하게 해주는 솔루션&lt;/li&gt;
  &lt;li&gt;비즈니스 간 통합 및 연계성을 증대시켜 효율성 및 각 시스템 간의 확장성을 높임&lt;/li&gt;
  &lt;li&gt;Point-to-Point
    &lt;ul&gt;
      &lt;li&gt;1 : 1 연결&lt;/li&gt;
      &lt;li&gt;변경 및 재사용이 어려움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Hub &amp;amp; Spoke
    &lt;ul&gt;
      &lt;li&gt;허브 시스템을 통해 데이터를 전송하는 중앙 집중형 방식&lt;/li&gt;
      &lt;li&gt;확장 및 유지 보수가 용이&lt;/li&gt;
      &lt;li&gt;허브 장애 발생 시 시스템 전체에 영향을 미침&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Message Bus(ESB 방식)
    &lt;ul&gt;
      &lt;li&gt;미들웨어를 두어 처리하는 방식&lt;/li&gt;
      &lt;li&gt;확장성이 뛰어나며 대용량 처리가 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Hybrid
    &lt;ul&gt;
      &lt;li&gt;Hub &amp;amp; Spoke와 Message Bus의 혼합 방식&lt;/li&gt;
      &lt;li&gt;그룹 내에서는 Hub &amp;amp; Spoke, 그룹 간에는 Message Bus 방식 사용&lt;/li&gt;
      &lt;li&gt;한 가지 방식으로 EAI 구현 가능&lt;/li&gt;
      &lt;li&gt;데이터 병목 현상을 최소화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-esbenterprise-service-bus&quot;&gt;@ ESB(Enterprise Service Bus)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;애플리케이션 간 연계, 데이터 변환, 웹 서비스 지원 등 표준 기반의 인터페이스를 제공하는 솔루션&lt;/li&gt;
  &lt;li&gt;통합 측면에서 EAI와 유사하지만, 애플리케이션 보다는 서비스 중심의 통합을 지향&lt;/li&gt;
  &lt;li&gt;특정 서비스에 국한되지 않고 범용적으로 사용하기 위해 결합도를 약하게 유지&lt;/li&gt;
  &lt;li&gt;관리 및 보안 유지가 쉽고, 높은 수준의 품질 지원 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-인터페이스-기능-구현-정의--b&quot;&gt;2. 인터페이스 기능 구현 정의 – B&lt;/h2&gt;

&lt;h3 id=&quot;--인터페이스-기능-구현-정의에-대한-개요&quot;&gt;- 인터페이스 기능 구현 정의에 대한 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;인터페이스를 실제로 구현하기 위해 인터페이스 기능에 대한 구현 방법을 기능별로 기술&lt;/li&gt;
  &lt;li&gt;컴포넌트 명세서 확인 -&amp;gt; 인터페이스 명세서 확인 -&amp;gt; 일관된 인터페이스 기능 구현 정의 -&amp;gt; 정의된 인터페이스 기능 구현 정형화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--모듈-세부-설계서&quot;&gt;- 모듈 세부 설계서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모듈의 구성 요소와 세부적인 동작 등을 정의한 설계서&lt;/li&gt;
  &lt;li&gt;컴포넌트 명세서
    &lt;ul&gt;
      &lt;li&gt;컴포넌트의 개요 및 내부 클래스의 동작, 인터페이스를 통해 외부와 통신하는 명세 등을 정의&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인터페이스 명세서
    &lt;ul&gt;
      &lt;li&gt;컴포넌트 명세서의 항목 중 인터페이스 클래스의 세부 조건 및 기능 등을 정의&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-인터페이스-예외-처리--b&quot;&gt;3. 인터페이스 예외 처리 – B&lt;/h2&gt;

&lt;h3 id=&quot;--인터페이스-예외-처리의-개요&quot;&gt;- 인터페이스 예외 처리의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;구현된 인터페이스가 동작하는 과정에서 기능상 예외 상황이 발생 했을 때 이를 처리하는 절차&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-통신을-이용한-인터페이스-예외-처리&quot;&gt;- 데이터 통신을 이용한 인터페이스 예외 처리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;JSON, XML 등 인터페이스 객체를 이용해 구현한 인터페이스 동작이 실패한 경우를 대비&lt;/li&gt;
  &lt;li&gt;예외 케이스를 정의하고 각 예외 케이스마다 예외 처리 방법을 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인터페이스-엔티티를-이용한-인터페이스-예외-처리&quot;&gt;- 인터페이스 엔티티를 이용한 인터페이스 예외 처리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;동작이 실패할 경우를 대비해 해당 엔티티에 인터페이스의 실패 상황과 원인 등을 기록하고 사용자 및 관리자에서 알려주는 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-인터페이스-보안--b&quot;&gt;4. 인터페이스 보안 – B&lt;/h2&gt;

&lt;h3 id=&quot;--인터페이스-보안의-개요&quot;&gt;- 인터페이스 보안의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보안 취약점을 분석한 후 적절한 보안 기능을 적용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인터페이스-보안-기능-적용&quot;&gt;- 인터페이스 보안 기능 적용&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;네트워크 영역
    &lt;ul&gt;
      &lt;li&gt;스니핑 등을 이용한 데이터 탈취 및 변조 위협을 방지하기 위해 네트워크 트래픽에 대한 암호화 설정&lt;/li&gt;
      &lt;li&gt;IPSec, SSL, S-HTTP 등의 방식으로 적용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;애플리케이션 영역
    &lt;ul&gt;
      &lt;li&gt;애플리케이션 코드 상의 보안 취약점을 보완하는 방향&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터베이스 영역
    &lt;ul&gt;
      &lt;li&gt;접근 권한과 프로시저, 트리거 등 DB 동작 객체의 보안 취약점에 보안 기능을 적용&lt;/li&gt;
      &lt;li&gt;암호화나 익명화 등 데이터 자체의 보안 방안도 고려&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-연계-테스트--b&quot;&gt;5. 연계 테스트 – B&lt;/h2&gt;

&lt;h3 id=&quot;--연계-테스트의-개요&quot;&gt;- 연계 테스트의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;연계 시스템과 구성 요소가 정상적으로 동작하는지 확인하는 활동&lt;/li&gt;
  &lt;li&gt;연계 테스트 케이스 작성 -&amp;gt; 연계 테스트 환경 구축 -&amp;gt; 수행 -&amp;gt; 검증&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-인터페이스-구현-검증--a&quot;&gt;6. 인터페이스 구현 검증 – A&lt;/h2&gt;

&lt;h3 id=&quot;--인터페이스-구현-검증의-개요&quot;&gt;- 인터페이스 구현 검증의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;인터페이스가 정상적으로 문제없이 작동하는지 확인하는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인터페이스-구현-검증-도구&quot;&gt;- 인터페이스 구현 검증 도구&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;검증하기 위해서 인터페이스 단위 기능과 시나리오 등을 기반으로 하는 통합 테스트 필요&lt;/li&gt;
  &lt;li&gt;테스트 자동화 도구를 이용하면 효율적으로 수행 가능&lt;/li&gt;
  &lt;li&gt;xUnit
    &lt;ul&gt;
      &lt;li&gt;Java, C++ 등 다양한 언어를 지원하는 단위 테스트 프레임워크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;STAF
    &lt;ul&gt;
      &lt;li&gt;서비스 호출 및 컴포넌트 재사용 등 다양한 환경을 지원&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;FItNesse
    &lt;ul&gt;
      &lt;li&gt;웹 기반 테스트케이스 설계, 실행, 결과 확인 등을 지원&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;NTAF
    &lt;ul&gt;
      &lt;li&gt;협업 기능과 재사용 및 확장성을 통합한 NHN의 테스트 자동화 프레임워크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Selenium
    &lt;ul&gt;
      &lt;li&gt;다양한 브라우저 및 개발 언어를 지원하는 웹 애플리케이션 테스트 프레임워크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;watir
    &lt;ul&gt;
      &lt;li&gt;Ruby를 사용하는 애플리케이션 테스트 프레임워크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인터페이스-구현-감시-도구&quot;&gt;- 인터페이스 구현 감시 도구&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;인터페이스 동작 상태를 APM을 사용하여 모니터링 할 수 있음&lt;/li&gt;
  &lt;li&gt;종합적인 정보를 조회하고 분석할 수 있음&lt;/li&gt;
  &lt;li&gt;Scouter, Jennifer 등&lt;/li&gt;
  &lt;li&gt;APM
    &lt;ul&gt;
      &lt;li&gt;리소스 방식 : Nagios, Zabbix, Cacti 등&lt;/li&gt;
      &lt;li&gt;End-to-End 방식 : VisualVM, Jennifer, Scouter 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 2과목 5장</summary></entry><entry><title type="html">[정보처리기사 필기] 2-4. 애플리케이션 테스트 관리</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp8/" rel="alternate" type="text/html" title="[정보처리기사 필기] 2-4. 애플리케이션 테스트 관리" /><published>2021-07-30T21:00:00+09:00</published><updated>2021-07-31T06:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp8</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp8/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-애플리케이션-테스트--b&quot;&gt;1. 애플리케이션 테스트 – B&lt;/h2&gt;

&lt;h3 id=&quot;--애플리케이션-테스트의-개념&quot;&gt;- 애플리케이션 테스트의 개념&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;잠재되어 있는 결함을 찾아내는 일련의 행위&lt;/li&gt;
  &lt;li&gt;고객의 요구사항을 만족시키는지 확인(Validation)&lt;/li&gt;
  &lt;li&gt;기능을 정확히 수행하는지 검증(Verrfication)&lt;/li&gt;
  &lt;li&gt;개발할 소프트웨어의 유형을 분류하고 특성을 정리해서 중점적으로 테스트할 사항을 정리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--애플리케이션-테스트의-필요성&quot;&gt;- 애플리케이션 테스트의 필요성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램 실행 전에 오류를 발견하여 예방&lt;/li&gt;
  &lt;li&gt;제품의 신뢰도 향상&lt;/li&gt;
  &lt;li&gt;새로운 오류의 유입 예방&lt;/li&gt;
  &lt;li&gt;최소한의 시간과 노력으로 많은 결함을 찾아낼 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--애플리케이션-테스트의-기본-원리&quot;&gt;- 애플리케이션 테스트의 기본 원리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;잠재적인 결함은 줄일 수 있지만 완벽한 소프트웨어 테스팅은 불가능&lt;/li&gt;
  &lt;li&gt;결함 대부분은 특정 모듈에 집중. 20%의 코드에서 80%의 결함이 발견. &lt;strong&gt;&lt;em&gt;파레토 법칙&lt;/em&gt;&lt;/strong&gt; 적용&lt;/li&gt;
  &lt;li&gt;동일한 테스트를 반복하면 더 이상 결함이 발견되지 않는 &lt;strong&gt;&lt;em&gt;살충제 패러독스&lt;/em&gt;&lt;/strong&gt; 발생&lt;/li&gt;
  &lt;li&gt;정황에 따라 테스트를 다르게 수행&lt;/li&gt;
  &lt;li&gt;결함을 제거해도 요구사항을 만족시키지 못하면 품질이 높다고 말할 수 없음. &lt;strong&gt;&lt;em&gt;오류 부재의 궤변&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;테스트와 위험은 반비례&lt;/li&gt;
  &lt;li&gt;작은 부분에서 시작하여 점점 확대하며 진행&lt;/li&gt;
  &lt;li&gt;개발자와 관계없는 별도의 팀에서 수행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-애플리케이션-테스트의-분류--b&quot;&gt;2. 애플리케이션 테스트의 분류 – B&lt;/h2&gt;

&lt;h3 id=&quot;--프로그램-실행-여부에-따른-테스트&quot;&gt;- 프로그램 실행 여부에 따른 테스트&lt;/h3&gt;

&lt;h4 id=&quot;-정적-테스트&quot;&gt;@ 정적 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램을 실행하지 않고 명세서나 소스 코드를 대상으로 분석&lt;/li&gt;
  &lt;li&gt;개발 초기에 결함 발견 가능. 개발 비용을 낮출 수 있음&lt;/li&gt;
  &lt;li&gt;워크스루, 인스펙션, 코드 검사 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-동적-테스트&quot;&gt;@ 동적 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램을 실행하여 오류를 찾는 테스트. 개발 모든 단계에서 수행 가능&lt;/li&gt;
  &lt;li&gt;블래박스 테스트, 화이트박스 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-기반에-따른-테스트&quot;&gt;- 테스트 기반에 따른 테스트&lt;/h3&gt;

&lt;h4 id=&quot;-명세-기반-테스트&quot;&gt;@ 명세 기반 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;요구사항에 대한 명세를 빠짐없이 테스트 케이스로 만들어 구현하고 있는지 확인&lt;/li&gt;
  &lt;li&gt;동등 분할, 경계 값 분석 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-구조-기반-테스트&quot;&gt;@ 구조 기반 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;내부의 논리 흐름에 따라 테스트 케이스를 작성하고 확인&lt;/li&gt;
  &lt;li&gt;구문 기반, 결정 기반, 조건 기반 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-경험-기반-테스트&quot;&gt;@ 경험 기반 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;유사 소프트웨어나 기술 등에 대한 경험을 기반으로 함&lt;/li&gt;
  &lt;li&gt;요구사항에 대한 명세가 불충분하거나 테스트 시간에 제약이 있는 경우 효과적&lt;/li&gt;
  &lt;li&gt;에러 추정, 체크 리스트, 탐색적 테스팅&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--시각에-따른-테스트&quot;&gt;- 시각에 따른 테스트&lt;/h3&gt;

&lt;h4 id=&quot;-검증verification-테스트&quot;&gt;@ 검증(Verification) 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;개발자의 시각에서 명세서대로 완성됐는지 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-확인validation-테스트&quot;&gt;@ 확인(Validation) 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 시각에서 요구한대로 제품이 완성됐는지, 정상 동작하는지 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--목적에-따른-테스트&quot;&gt;- 목적에 따른 테스트&lt;/h3&gt;

&lt;h4 id=&quot;-회복-테스트&quot;&gt;@ 회복 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;결함을 주어 실패하도록 한 후 올바르게 복구되는지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-안전-테스트&quot;&gt;@ 안전 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;불법적인 침입으로부터 시스템을 보호할 수 있는지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-강도-테스트&quot;&gt;@ 강도 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;과도한 정보량이나 빈도 등을 부과하여 과부하 시에도 정상적으로 실행되는지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-성능-테스트&quot;&gt;@ 성능 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;실시간 성능이나 전체적인 효율성을 진단하는 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-구조-테스트&quot;&gt;@ 구조 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;내부의 논리적인 경로, 소스 코드의 복잡도 등을 평가하는 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-회귀-테스트&quot;&gt;@ 회귀 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;변경 또는 수정된 코드에 새로운 결함이 없음을 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-병행-테스트&quot;&gt;@ 병행 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기존 소프트웨어에 동일한 데이터를 입력하여 결과를 비교&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-테스트-기법에-따른-애플리케이션-테스트--a&quot;&gt;3. 테스트 기법에 따른 애플리케이션 테스트 – A&lt;/h2&gt;

&lt;h3 id=&quot;--화이트박스-테스트&quot;&gt;- 화이트박스 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;원시 코드를 오픈시킨 상태에서 논리적인 모든 경로를 테스트하여 테스트 케이스를 설계&lt;/li&gt;
  &lt;li&gt;구조적 테스트. 프로시저 설계의 제어 구조를 사용하여 테스트 케이스를 설계&lt;/li&gt;
  &lt;li&gt;테스트 과정의 초기에 적용&lt;/li&gt;
  &lt;li&gt;모듈 안의 작동을 직접 관찰&lt;/li&gt;
  &lt;li&gt;모든 문장을 한 번 이상 실행하여 수행&lt;/li&gt;
  &lt;li&gt;선택, 반복 등의 분기점 부분들을 수행함으로써 논리적 경로를 제어&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--화이트박스-테스트의-종류&quot;&gt;- 화이트박스 테스트의 종류&lt;/h3&gt;

&lt;h4 id=&quot;-기초-경로-검사&quot;&gt;@ 기초 경로 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;대표적인 화이트박스 테스트 기법&lt;/li&gt;
  &lt;li&gt;절차적 설계의 논리적 복잡성을 측정할 수 있게 해줌&lt;/li&gt;
  &lt;li&gt;실행 경로의 기초를 정의하는 데 지침으로 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-제어-구조-검사&quot;&gt;@ 제어 구조 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;조건 검사 : 논리적 조건을 테스트하는 설계 기법&lt;/li&gt;
  &lt;li&gt;루프 검사 : 반복 구조에 초점을 맞춰 실시하는 설계 기법&lt;/li&gt;
  &lt;li&gt;데이터 흐름 검사 : 변수의 정의와 변수 사용의 위치에 초점을 맞춰 실시하는 설계 기법&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--화이트박스-테스트의-검증-기준&quot;&gt;- 화이트박스 테스트의 검증 기준&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;문장 검증 기준 : 모든 구문이 한 번 이상 수행되도록 설계&lt;/li&gt;
  &lt;li&gt;분기 검증 기준 : 모든 조건문이 한 번 이상 수행되도록 설계&lt;/li&gt;
  &lt;li&gt;조건 검증 기준 : 모든 조건문에 대해 조건문이 True, False 경우가 한 번 이상 수행되도록 설계&lt;/li&gt;
  &lt;li&gt;분기/조건 기준 : 모든 조건문과 각 조건문에 포함된 개별 조건식의 결과가 True, False인 경우가 한 번 이상 수행되도록 설계&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--블랙박스-테스트&quot;&gt;- 블랙박스 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;각 기능이 완전히 작동되는 것을 입증하는 테스트. 기능 테스트&lt;/li&gt;
  &lt;li&gt;요구사항 명세서를 보면서 테스트하는 것. 구현된 기능을 테스트&lt;/li&gt;
  &lt;li&gt;인터페이스에서 실시되는 테스트&lt;/li&gt;
  &lt;li&gt;테스트 과정의 후반부에 적용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--블랙박스-테스트의-종류&quot;&gt;- 블랙박스 테스트의 종류&lt;/h3&gt;

&lt;h4 id=&quot;-동치-분할-검사&quot;&gt;@ 동치 분할 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;입력 자료에 초점을 맞춰 검사&lt;/li&gt;
  &lt;li&gt;타당한 입력 자료와 타당하지 않은 입력 자료의 개수를 균등하게 함. 자료에 맞는 결과가 출력되는지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-경계값-분석&quot;&gt;@ 경계값 분석&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;동치 분할 기법을 보완하기 위함&lt;/li&gt;
  &lt;li&gt;중간값보다 경계값에서 오류가 발생될 확률이 높다는 점 이용&lt;/li&gt;
  &lt;li&gt;입력 조건의 경계값을 테스트 케이스로 선정하여 검사&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-원인-효과-그래프-검사&quot;&gt;@ 원인-효과 그래프 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;입력 데이터 간의 관계와 출력에 영향을 미치는 상황을 체계적으로 분석한 후 효용성 높은 케이스 선정하여 검사&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-오류-예측-검사&quot;&gt;@ 오류 예측 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;과거의 경험이나 확인자의 감각으로 테스트&lt;/li&gt;
  &lt;li&gt;보충적 검사 기법. 데이터 확인 검사&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-비교-검사&quot;&gt;@ 비교 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;여러 버전의 프로그램에 동일한 테스트 자료를 제공하여 동일한 결과가 출력되는지 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-개발-단계에-따른-애플리케이션-테스트--a&quot;&gt;4. 개발 단계에 따른 애플리케이션 테스트 – A&lt;/h2&gt;

&lt;h3 id=&quot;--개발-단계에-따른-애플리케이션-테스트&quot;&gt;- 개발 단계에 따른 애플리케이션 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;코드 상의 오류뿐만 아니라 요구 분석의 오류, 설계 인터페이스 오류 등도 발견할 수 있음&lt;/li&gt;
  &lt;li&gt;애플리케이션 테스트 + 소프트웨어 개발 단계 = V-모델&lt;/li&gt;
  &lt;li&gt;요구사항 -&amp;gt; 분석 -&amp;gt; 설계 -&amp;gt; 구현 -&amp;gt; // 단위테스트 -&amp;gt; 통합테스트 -&amp;gt; 시스템티스트 -&amp;gt; 인수테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--단위-테스트unit-test&quot;&gt;- 단위 테스트(Unit Test)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;설계의 최소 단위인 모듈이나 컴포넌트에 초점을 맞춰 테스트&lt;/li&gt;
  &lt;li&gt;사용자의 요구사항을 기반으로 한 기능성 테스트를 최우선으로 수행&lt;/li&gt;
  &lt;li&gt;구조 기반 테스트와 명세기반 테스트로 나뉘지만 주로 구조 기반 테스트를 시행
    &lt;ul&gt;
      &lt;li&gt;구조 기반 테스트 : 화이트박스 테스트&lt;/li&gt;
      &lt;li&gt;명세 기반 테스트 : 블랙박스 테스트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--통합-테스트integration-test&quot;&gt;- 통합 테스트(Integration Test)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;단위 테스트가 완료된 모듈들을 결합하여 하나의 시스템으로 완성시키는 과정에서의 테스트&lt;/li&gt;
  &lt;li&gt;모듈 간 또는 통합된 컴포넌트 간의 상호 작용 오류를 검사&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--시스템-테스트system-test&quot;&gt;- 시스템 테스트(System Test)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개발된 S/W가 해당 컴퓨터 시스템에서 완벽하게 수행되는가를 점검&lt;/li&gt;
  &lt;li&gt;실제 사용 환경과 유사하게 만든 테스트 환경에서 수행&lt;/li&gt;
  &lt;li&gt;기능적 요구사항 : 블랙박스 테스트 시행&lt;/li&gt;
  &lt;li&gt;비기능적 요구사항 : 화이트박스 테스트 시행&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인수-테스트acceptance-test&quot;&gt;- 인수 테스트(Acceptance Test)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개발한 S/W가 사용자의 요구사항을 충족하는지에 중점&lt;/li&gt;
  &lt;li&gt;사용자가 직접 테스트&lt;/li&gt;
  &lt;li&gt;문제가 없으면 사용자는 S/W를 인수하고 프로젝트 종료&lt;/li&gt;
  &lt;li&gt;사용자 인수 테스트 : 사용자가 시스템 사용의 적절성 여부 확인&lt;/li&gt;
  &lt;li&gt;운영상의 인수 테스트 : 시스템 관리자가 수행&lt;/li&gt;
  &lt;li&gt;계약 인수 테스트 : 계약상의 인수/검수 조건을 준수하는지 여부 확인&lt;/li&gt;
  &lt;li&gt;규정 인수 테스트 : 규정에 맞게 개발되었는지 확인&lt;/li&gt;
  &lt;li&gt;알파 테스트
    &lt;ul&gt;
      &lt;li&gt;개발자의 장소에서 사용자가 개발자 앞에서 행하는 테스트&lt;/li&gt;
      &lt;li&gt;통제된 환경에서 시행. 문제점을 사용자와 개발자가 함께 확인&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;베타 테스트
    &lt;ul&gt;
      &lt;li&gt;최종 사용자가 여러 명의 사용자 앞에서 행하는 테스트&lt;/li&gt;
      &lt;li&gt;사용자가 직접 테스트&lt;/li&gt;
      &lt;li&gt;개발자에 의해 제어되지 않은 상태에서 테스트&lt;/li&gt;
      &lt;li&gt;오류와 사용상의 문제점을 기록하고 개발자에게 주기적으로 보고&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-통합-테스트--a&quot;&gt;5. 통합 테스트 – A&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;단위 테스트가 끝난 모듈을 통합하는 과정에서 발생하는 오류 및 결함을 찾는 테스트&lt;/li&gt;
  &lt;li&gt;비점진적 통합 방식
    &lt;ul&gt;
      &lt;li&gt;모든 모둘이 미리 결합되어 있는 프로그램 전체를 테스트. 빅뱅 통합 테스트&lt;/li&gt;
      &lt;li&gt;규모가 작은 소프트웨어에 유리. 단시간 내에 테스트 가능&lt;/li&gt;
      &lt;li&gt;오류 발견 및 장애 위치 파악 및 수정이 어려움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;점진적 통합 방식
    &lt;ul&gt;
      &lt;li&gt;모듈 단위로 단계적으로 통합하면서 테스트. 하향식, 상향식, 혼합식&lt;/li&gt;
      &lt;li&gt;오류 수정이 용이하고, 인터페이스와 연관된 오류를 완전히 테스트 할 가능성 높음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--하향식-통합-테스트&quot;&gt;- 하향식 통합 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;상위 모듈에서 하위 모듈 방향으로 통합하면서 테스트&lt;/li&gt;
  &lt;li&gt;깊이 우선 통합법이나 넓이 우선 통합법 사용&lt;/li&gt;
  &lt;li&gt;테스트 초기부터 사용자에게 시스템 구조를 보여줄 수 있음&lt;/li&gt;
  &lt;li&gt;상위 모듈에서는 테스트 케이스를 사용하기 어려움&lt;/li&gt;
  &lt;li&gt;절차
    &lt;ol&gt;
      &lt;li&gt;주요 제어 모듈은 작성된 프로그램 사용. 종속 모듈은 Stub으로 대체&lt;/li&gt;
      &lt;li&gt;하위 모듈인 Stub들이 한 번에 하나씩 실제 모듈로 교체됨&lt;/li&gt;
      &lt;li&gt;모듈이 통합될 때마다 테스트를 실시&lt;/li&gt;
      &lt;li&gt;새로운 오류가 발생하지 않음을 보증하기 위해 회귀 테스트 실시&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--상향식-통합-테스트&quot;&gt;- 상향식 통합 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하위 모듈에서 상위 모듈 방향으로 통합하면서 테스트&lt;/li&gt;
  &lt;li&gt;Stub은 필요하지 않지만, 하나의 주요 제어 모듈과 관련된 종속 모듈의 그룹인 Cluster가 필요
-절차
    &lt;ol&gt;
      &lt;li&gt;하위 모듈들을 Cluster로 결합&lt;/li&gt;
      &lt;li&gt;더미 모듈인 Driver를 작성&lt;/li&gt;
      &lt;li&gt;통합된 클러스터 단위로 테스트&lt;/li&gt;
      &lt;li&gt;테스트가 완료되면 Cluster는 프로그램 구조의 상위로 이동하여 결합하고 Driver는 실제 모듈로 대체&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-driver와-stub의-차이점&quot;&gt;- 테스트 Driver와 Stub의 차이점&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;Driver&lt;/th&gt;
      &lt;th&gt;Stub&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;필요시기&lt;/td&gt;
      &lt;td&gt;상위 모듈 없음&lt;/td&gt;
      &lt;td&gt;하위 모듈 없음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;테스트방식&lt;/td&gt;
      &lt;td&gt;상향식&lt;/td&gt;
      &lt;td&gt;하향식&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;공통점&lt;/td&gt;
      &lt;td&gt;소프트웨어 개발과 테스트를 병행할 경우 이용&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;차이점&lt;/td&gt;
      &lt;td&gt;인터페이스 역할, 원래 모듈로 교체&lt;/td&gt;
      &lt;td&gt;가짜 모듈의 역할, 작성하기 쉬움&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;--혼합식-통합-테스트&quot;&gt;- 혼합식 통합 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하위 수준에서는 상향식 통합, 상위 수준에서는 하향식 통합. 샌드위치식 통합 테스트 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--회귀-테스팅&quot;&gt;- 회귀 테스팅&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이미 테스트된 프로그램의 테스팅을 반복하는 것&lt;/li&gt;
  &lt;li&gt;변경된 모듈이나 컴포넌트에 새로운 오류가 있는지 확인하는 테스트&lt;/li&gt;
  &lt;li&gt;반복해서 테스트 함&lt;/li&gt;
  &lt;li&gt;변경된 부분을 테스트할 수 있는 테스트 케이스만을 선정하여 수행&lt;/li&gt;
  &lt;li&gt;대표적인 테스트 케이스를 선정&lt;/li&gt;
  &lt;li&gt;파급 효과가 높은 부분이 포함된 테스트 케이스를 선정&lt;/li&gt;
  &lt;li&gt;실제 수정이 발생한 모듈 또는 컴포넌트에서 시행하는 테스트 케이스 선정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-애플리케이션-테스트-프로세스--b&quot;&gt;6. 애플리케이션 테스트 프로세스 – B&lt;/h2&gt;

&lt;h3 id=&quot;--애플리케이션-테스트-프로세스&quot;&gt;- 애플리케이션 테스트 프로세스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 요구대로 만들어졌는지, 결함은 없는지 등을 테스트&lt;/li&gt;
  &lt;li&gt;계획 -&amp;gt; 분석 및 디자인 -&amp;gt; 테스트 케이스 및 시나리오 작성 -&amp;gt; 수행 -&amp;gt; 결과 평가 및 리포팅 -&amp;gt; 결함 추적 및 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-테스트-케이스--테스트-시나리오--테스트-오라클--b&quot;&gt;7. 테스트 케이스 / 테스트 시나리오 / 테스트 오라클 – B&lt;/h2&gt;

&lt;h3 id=&quot;--테스트-케이스&quot;&gt;- 테스트 케이스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;구현된 소프트웨어가 사용자의 요구사항을 정확하게 준수했는지를 확인하기 위해 설계된 명세 기반 테스트의 설계 산출물&lt;/li&gt;
  &lt;li&gt;검토 및 자료확보 -&amp;gt; 위험 평가 및 우선순위 결정 -&amp;gt; 요구사항 정의 -&amp;gt; 구조 설계 및 방법 결정 -&amp;gt; 테스트 케이스 정의 -&amp;gt; 타당성 확인 및 유지 보수&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-시나리오&quot;&gt;- 테스트 시나리오&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;테스트 케이스를 적용하는 순서에 따라 여러 개의 테스트 케이스들을 묶은 집합. 구체적인 절차를 명세한 문서&lt;/li&gt;
  &lt;li&gt;테스트 순서에 대한 구체적인 절차, 사전 조건, 입력 데이터 등이 설정&lt;/li&gt;
  &lt;li&gt;테스트 순서를 미리 정함으로써 테스트 항목을 빠짐없이 수행&lt;/li&gt;
  &lt;li&gt;작성시 유의사항
    &lt;ul&gt;
      &lt;li&gt;여러 개의 시나리오로 분리하여 작성&lt;/li&gt;
      &lt;li&gt;사용자의 요구사항과 설계 문서 등을 토대로 작성&lt;/li&gt;
      &lt;li&gt;유스케이스간 업무 흐름이 정상적인지를 테스트 할 수 있도록 작성&lt;/li&gt;
      &lt;li&gt;개발된 모듈 또는 프로그램 간의 연계가 정상적으로 동작하는지 테스트할 수 있도록 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-오라클&quot;&gt;- 테스트 오라클&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;테스트 결과가 올바른지 판단하기 위해 사전에 정의된 참 값을 대입하여 비교하는 기법&lt;/li&gt;
  &lt;li&gt;결과를 판단하기 위해 테스트 케이스에 대한 예상 결과를 게산하거나 확인&lt;/li&gt;
  &lt;li&gt;특징
    &lt;ul&gt;
      &lt;li&gt;제한된 검증 : 모든 테스트 케이스에 적용할 수 없음&lt;/li&gt;
      &lt;li&gt;수학적 기법 : 수학적 기법을 이용하여 구할 수 있음&lt;/li&gt;
      &lt;li&gt;자동화 가능 : 실형, 결과 비교, 커버리지 측정 등을 자동화 할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;종류
    &lt;ul&gt;
      &lt;li&gt;참 오라클 : 모든 테스트 케이스의 입력 값에 대해 기대하는 결과를 제공. 모든 오류 검출&lt;/li&gt;
      &lt;li&gt;샘플링 오라클 : 몇몇 테스트 케이스의 입력 값들에 대해서만 기대하는 결과 제공&lt;/li&gt;
      &lt;li&gt;추정 오라클 : 샘플링 오라클 개선. 나머지 입력 값들에 대해서 추정으로 처리&lt;/li&gt;
      &lt;li&gt;일관성 검사 : 변경이 있을 때, 수행 전과 후의 결과 값이 동일한지 확인&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-테스트-자동화-도구--b&quot;&gt;8. 테스트 자동화 도구 – B&lt;/h2&gt;

&lt;h3 id=&quot;--테스트-자동화의-개념&quot;&gt;- 테스트 자동화의 개념&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;반복적으로 수행하던 테스트 절차를 스크립트 형태로 구현하는 자동화 도구를 적용한 것&lt;/li&gt;
  &lt;li&gt;휴먼 에러를 줄이고 테스트 정확성을 유지하면서 품질을 향상시킴&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-자동화-도구의-장점--단점&quot;&gt;- 테스트 자동화 도구의 장점 / 단점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;장점
    &lt;ul&gt;
      &lt;li&gt;반복적인 작업을 자동화하여 인력 및 시간을 줄임&lt;/li&gt;
      &lt;li&gt;향상된 테스트 품질 보장&lt;/li&gt;
      &lt;li&gt;요구사항 등을 일관성 있게 검증&lt;/li&gt;
      &lt;li&gt;객관적인 평가 기준을 제공&lt;/li&gt;
      &lt;li&gt;다양한 표시 형태로 제공&lt;/li&gt;
      &lt;li&gt;UI가 없는 서비스도 정밀 테스트 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점
    &lt;ul&gt;
      &lt;li&gt;도구의 사용 방법에 대한 교육 및 학습 필요&lt;/li&gt;
      &lt;li&gt;프로세스 단계별로 적용하기 위한 시간, 비용, 노력이 필요&lt;/li&gt;
      &lt;li&gt;비공개 상용 도구의 경우 고가의 추가 비용 필요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-자동화-수행-시-고려사항&quot;&gt;- 테스트 자동화 수행 시 고려사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;재사용 및 측정이 불가능한 테스트 프로그램은 제외&lt;/li&gt;
  &lt;li&gt;용도에 맞는 적절한 도구를 선택해서 사용&lt;/li&gt;
  &lt;li&gt;환경 설정 및 습득 기간을 고려해서 프로젝트 일정을 계획&lt;/li&gt;
  &lt;li&gt;프로젝트 초기에 테스트 엔지니어의 투입 시기를 계획&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-자동화-도구의-유형&quot;&gt;- 테스트 자동화 도구의 유형&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정적 분석 도구
    &lt;ul&gt;
      &lt;li&gt;프로그램을 실행하지 않고 분석&lt;/li&gt;
      &lt;li&gt;작성된 소스 코드를 이해하고 있어야만 분석 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;테스트 실행 도구
    &lt;ul&gt;
      &lt;li&gt;스크립트 언어를 사용하여 테스트를 실행&lt;/li&gt;
      &lt;li&gt;데이터 주도 접근 방식&lt;/li&gt;
      &lt;li&gt;키워드 주도 접근 방식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;성능 테스트 도구
    &lt;ul&gt;
      &lt;li&gt;인위적으로 적용한 가상의 사용자를 만들어 테스트를 수행함으로써 성능의 목표 달성 여부 확인&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;테스트 통제 도구
    &lt;ul&gt;
      &lt;li&gt;테스트 계획 및 관리, 테스트 수행, 결함 관리 등을 수행&lt;/li&gt;
      &lt;li&gt;형상 관리 도구, 결함 추적/관리 도구 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;테스트 하네스 도구
    &lt;ul&gt;
      &lt;li&gt;애플리케이션의 컴포넌트 및 모듈을 테스트하는 환경의 일부분&lt;/li&gt;
      &lt;li&gt;테스트를 지원하기 위해 생성된 코드와 데이터를 의미&lt;/li&gt;
      &lt;li&gt;테스트가 실행될 환경을 시뮬레이션 하여 정상적으로 테스트되도록 함&lt;/li&gt;
      &lt;li&gt;구성 요소
        &lt;ul&gt;
          &lt;li&gt;테스트 드라이버 : 모듈 테스트 수행 후의 결과를 도출&lt;/li&gt;
          &lt;li&gt;테스트 스텁 : 타 모듈의 기능을 단순히 수행하는 도구&lt;/li&gt;
          &lt;li&gt;테스트 슈트 : 테스트 케이스의 집합&lt;/li&gt;
          &lt;li&gt;테스트 케이스 : 테스트 항목의 명세서&lt;/li&gt;
          &lt;li&gt;테스트 스크립트 : 자동화된 테스트 실행 절차에 대한 명세서&lt;/li&gt;
          &lt;li&gt;목 오브젝트 : 예정된 행위를 수행하는 객체&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;9-결함-관리--b&quot;&gt;9. 결함 관리 – B&lt;/h2&gt;

&lt;h3 id=&quot;--결함의-정의&quot;&gt;- 결함의 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;설계한 것과 다르게 동작하거나 다른 결과가 발생되는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--결함-관리-프로세스&quot;&gt;- 결함 관리 프로세스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;계획 -&amp;gt; 기록 -&amp;gt; 검토 -&amp;gt; 수정 -&amp;gt; 재확인 -&amp;gt; 추적 및 모니터링 -&amp;gt; 분석 및 보고서 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--결함-추적-순서&quot;&gt;- 결함 추적 순서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;등록 -&amp;gt; 검토 -&amp;gt; 할당 -&amp;gt; 수정 -&amp;gt; 조치 보류 -&amp;gt; 종료 -&amp;gt; 해제&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--결함-관리-도구&quot;&gt;- 결함 관리 도구&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Mantis : 단위별 작업 내용 기록하여 결함 추적 가능&lt;/li&gt;
  &lt;li&gt;Trac : 결함 추적은 물론 결함을 통합하여 관리&lt;/li&gt;
  &lt;li&gt;Redmine : 프로젝트 관리 및 결함 추적 가능&lt;/li&gt;
  &lt;li&gt;Bugzilla : 결함을 지속적으로 관리할 수 있는 도구. 결함의 심각도와 우선 순위 지정 가능&lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 2과목 4장</summary></entry><entry><title type="html">[정보처리기사 필기] 2-3. 제품 소프트웨어 패키징</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp7/" rel="alternate" type="text/html" title="[정보처리기사 필기] 2-3. 제품 소프트웨어 패키징" /><published>2021-07-30T20:00:00+09:00</published><updated>2021-07-31T05:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp7</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp7/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-소프트웨어-패키징--b&quot;&gt;1. 소프트웨어 패키징 – B&lt;/h2&gt;

&lt;h3 id=&quot;--소프트웨어-패키징의-개요&quot;&gt;- 소프트웨어 패키징의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모듈별로 생성한 실행 파일들을 묶어 배포용 설치 파일을 만드는 것&lt;/li&gt;
  &lt;li&gt;사용자를 중심으로 진행&lt;/li&gt;
  &lt;li&gt;모듈화하여 패키징&lt;/li&gt;
  &lt;li&gt;일반적인 배포 형태로 패키징&lt;/li&gt;
  &lt;li&gt;사용자의 편의성 및 실행 환경을 우선적으로 고려&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--패키징-시-고려사항&quot;&gt;- 패키징 시 고려사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 시스템 환경에 필요한 최소 환경을 정의&lt;/li&gt;
  &lt;li&gt;UI는 눈으로 직접 확인할 수 있도록 시각적인 자료와 함께 제공하고 매뉴얼과 일치&lt;/li&gt;
  &lt;li&gt;하드웨어와 함께 관리될 수 있도록 Managed Service 형태로 제공&lt;/li&gt;
  &lt;li&gt;편의성을 고려한 안정적인 배포가 중요&lt;/li&gt;
  &lt;li&gt;패키징의 변경 및 개선에 대한 관리를 항상 고려&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--패키징-작업-순서&quot;&gt;- 패키징 작업 순서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;애자일 기법의 경우 2~4주 내에서 지정하며, 각 주기가 끝날 때마다 패키징 수행&lt;/li&gt;
  &lt;li&gt;주기별로 패키징한 결과물은 테스트 서버에 배포&lt;/li&gt;
  &lt;li&gt;최종 패키징한 결과물은 사용할 수 있도록 온라인 또는 오프라인으로 배포&lt;/li&gt;
  &lt;li&gt;기능 식별 -&amp;gt; 모듈화 -&amp;gt; 빌드 -&amp;gt; 사용자 환경 분석 -&amp;gt; 패키징 및 적용시험 -&amp;gt; 패키징 변경 개선 -&amp;gt; 배포&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-릴리즈-노트-작성--b&quot;&gt;2. 릴리즈 노트 작성 – B&lt;/h2&gt;

&lt;h3 id=&quot;--릴리즈-노트의-개요&quot;&gt;- 릴리즈 노트의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;릴리즈 정보를 소프트웨어의 최종 사용자인 고객과 공유하기 위한 문서&lt;/li&gt;
  &lt;li&gt;테스트 진행 방법에 대한 결과와 S/W 사양에 대한 개발팀의 정확한 준수 여부 확인 가능&lt;/li&gt;
  &lt;li&gt;전체 기능, 서비스의 내용, 개선 사항 등을 사용자와 공유&lt;/li&gt;
  &lt;li&gt;버전 관리나 릴리즈 정보를 체계적으로 관리&lt;/li&gt;
  &lt;li&gt;초기 배포 시 또는 출시 후 개선 사항을 적용한 추가 배포 시에 제공&lt;/li&gt;
  &lt;li&gt;포함된 기능이나 사용 환경에 대한 내용을 확인&lt;/li&gt;
  &lt;li&gt;개선된 작업이 있을 때마다 관련 내용을 릴리즈 노트에 담아 제공&lt;/li&gt;
  &lt;li&gt;철저한 테스트를 거친 것, 사양에 대한 최종 승인을 얻은 후 문서화 되어 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--릴리즈-노트-초기-버전-작성-시-고려사항&quot;&gt;- 릴리즈 노트 초기 버전 작성 시 고려사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정확하고 완전한 정보를 기반으로 개발팀에서 직접 현재 시제로 작성&lt;/li&gt;
  &lt;li&gt;변경 또는 개선된 항목에 대한 이력 정보들도 작성&lt;/li&gt;
  &lt;li&gt;표준 형식은 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--릴리즈-노트-추가-버전-작성-시-고려사항&quot;&gt;- 릴리즈 노트 추가 버전 작성 시 고려사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;특수한 상황이 발생하는 경우 릴리즈 노트를 추가로 작성&lt;/li&gt;
  &lt;li&gt;모든 수정된 내용을 담아 릴리즈 노트를 작성&lt;/li&gt;
  &lt;li&gt;기능 업그레이드를 완료한 경우에는 릴리즈 버전을 출시하고 릴리즈 노트를 작성&lt;/li&gt;
  &lt;li&gt;요구사항에 의해 추가나 수정된 경우 별도의 릴리즈 버전으로 출시하고 릴리즈 노트 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--릴리즈-노트-작성-순서&quot;&gt;- 릴리즈 노트 작성 순서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모듈 식별 -&amp;gt; 릴리즈 정보 확인 -&amp;gt; 릴리즈 노트 개요 작성 -&amp;gt; 영향도 체크 -&amp;gt; 정식 릴리즈 노트 작성 -&amp;gt; 추가 개선 항목 식별&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-디지털-저작권-관리drm--a&quot;&gt;3. 디지털 저작권 관리(DRM) – A&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;저작권이란 창작자가 가지는 배타적 독점적 권리로 타인의 침해를 받지 않을 고유한 권한&lt;/li&gt;
  &lt;li&gt;복제하기 쉬운 저작물에 대해 이를 막기 위한 기술적인 방법을 통칭해 저작권 보호 기술이라 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--디지털-저작권-관리drm-digital-right-management의-개요&quot;&gt;- 디지털 저작권 관리(DRM; Digital Right Management)의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;디지털 콘텐츠 관리 및 보호 기술&lt;/li&gt;
  &lt;li&gt;원본 콘텐츠가 아날로그인 경우 디지털로 변환한 후 패키저로 DRM 패키징 수행&lt;/li&gt;
  &lt;li&gt;크기가 작은 경우 실시간 패키징 수행, 크기가 큰 경우 미리 패키징 수행 후 배포&lt;/li&gt;
  &lt;li&gt;패키징을 수행하면 암호화된 전자서명이 포함되고 라이선스 정보가 클리어링 하우스에 등록&lt;/li&gt;
  &lt;li&gt;콘텐츠를 사용하기 위해 사용자 인증과 콘텐츠 사용 권한 소유 여부를 확인&lt;/li&gt;
  &lt;li&gt;종량제 방식을 적용한 경우 실제 사용량을 측정하여 이용한 만큼의 요금 부과&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--디지털-저작권-관리의-흐름도&quot;&gt;- 디지털 저작권 관리의 흐름도&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;클리어링 하우스 : 저작권에 대한 사용 권한, 라이선스 발급, 결제 관리 등 수행&lt;/li&gt;
  &lt;li&gt;콘텐츠 제공자 : 콘텐츠를 제공하는 저작권자&lt;/li&gt;
  &lt;li&gt;패키저 : 콘텐츠를 메타 데이터와 함께 배포 가능한 형태로 묶어 암호화하는 프로그램&lt;/li&gt;
  &lt;li&gt;콘텐츠 분배자 : 암호화된 콘텐츠를 유통하는 곳이나 사람&lt;/li&gt;
  &lt;li&gt;콘텐츠 소비자 : 콘텐츠를 구매해서 사용하는 주체&lt;/li&gt;
  &lt;li&gt;DRM 컨트롤러 : 배포된 콘텐츠의 이용 권한을 통제하는 프로그램&lt;/li&gt;
  &lt;li&gt;보안 컨테이너 : 콘텐츠 원본을 안전하게 유통하기 위한 전자적 보안 장치&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--디지털-저작권-관리의-기술-요소&quot;&gt;- 디지털 저작권 관리의 기술 요소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;암호화(Encryption) : 콘텐츠를 암호화하고 전자 서명을 할 수 있는 기술&lt;/li&gt;
  &lt;li&gt;키 관리(Key Management) : 콘텐츠를 암호화한 키에 대한 저장 및 분배 기술&lt;/li&gt;
  &lt;li&gt;암호화 파일 생성(Packager) : 콘텐츠를 암호화된 콘텐츠로 생성하기 위한 기술&lt;/li&gt;
  &lt;li&gt;식별 기술(Identification) : 콘텐츠에 대한 식별 체계 표현 기술&lt;/li&gt;
  &lt;li&gt;저작권 표현(Right Expression) : 라이선스의 내용 표현 기술&lt;/li&gt;
  &lt;li&gt;정책 관리(Policy Management) : 라이선스 발급 및 사용에 대한 정책 표현 및 관리 기술&lt;/li&gt;
  &lt;li&gt;크랙 방지(Tamper Resistance) : 크랙에 의한 콘텐츠 사용 방지 기술&lt;/li&gt;
  &lt;li&gt;인증(Authentication) : 라이선스 발급 및 사용의 기준이 되는 사용자 인증 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-소프트웨어-버전-등록--b&quot;&gt;4. 소프트웨어 버전 등록 – B&lt;/h2&gt;

&lt;h3 id=&quot;--소프트웨어-패키징의-형상-관리&quot;&gt;- 소프트웨어 패키징의 형상 관리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;형상관리(SCM)는 소프트웨어의 변경 사항을 관리하기 위해 개발된 일련의 활동&lt;/li&gt;
  &lt;li&gt;S/W 변경의 원인을 알아내고 제어, 적절히 변경되고 있는지 확인하며 해당 담당자에게 통보&lt;/li&gt;
  &lt;li&gt;S/W 개발의 전 단계에 적용되는 활동. 유지보수 단계에서도 수행&lt;/li&gt;
  &lt;li&gt;S/W 개발의 전체 비용을 줄이고, 방해 요인이 최소화되도록 보증&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--형상-관리의-중요성&quot;&gt;- 형상 관리의 중요성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;변경 사항을 체계적으로 추적하고 통제할 수 있음&lt;/li&gt;
  &lt;li&gt;무절제한 변경을 방지할 수 있음&lt;/li&gt;
  &lt;li&gt;발견된 버그나 수정 사항을 추적할 수 있음&lt;/li&gt;
  &lt;li&gt;S/W는 형태가 없어 가시성이 결핍되므로 진행 정도를 확인하기 위한 기준으로 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--형상-관리-기능&quot;&gt;- 형상 관리 기능&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;형상 식별 : 이름과 관리 번호를 부여, Tree 구조로 구분하여 수정 및 추적이 용이하도록 함&lt;/li&gt;
  &lt;li&gt;버전 제어 : 다른 버전의 형상 항목을 관리, 특정 절차와 도구를 결합&lt;/li&gt;
  &lt;li&gt;형상 통제 : 변경 요구를 검토하여 현재의 기준선이 잘 반영될 수 있도록 조정&lt;/li&gt;
  &lt;li&gt;형상 감사 : 기준선의 무결성을 평가하기 위해 공식적으로 승인하는 작업&lt;/li&gt;
  &lt;li&gt;형상 기록 : 결과를 기록, 관리하고 보고서를 작성하는 작업&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--소프트웨어의-버전-등록-관련-주요-용어&quot;&gt;- 소프트웨어의 버전 등록 관련 주요 용어&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Repository : 최신 버전의 파일들과 변경 내역에 대한 정보들이 저장&lt;/li&gt;
  &lt;li&gt;Import : 아무것도 없는 저장소에 처음으로 파일을 복사&lt;/li&gt;
  &lt;li&gt;Check-Out : 저장소에서 파일을 받아옴. 버전관리를 위한 파일들도 받아옴&lt;/li&gt;
  &lt;li&gt;Check-In : 수정을 완료한 후 저장소의 파일을 새로운 버전으로 갱신&lt;/li&gt;
  &lt;li&gt;Commit : 충돌을 알리고 diff 도구를 이용해 수정한 후 갱신을 완료&lt;/li&gt;
  &lt;li&gt;Update : 저장소에 있는 최신 버전으로 자신의 작업 공간을 동기화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--소프트웨어-버전-등록-과정&quot;&gt;- 소프트웨어 버전 등록 과정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Import -&amp;gt; Check-Out -&amp;gt; Commit -&amp;gt; Update -&amp;gt; Diff&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-소프트웨어-버전-관리-도구--a&quot;&gt;5. 소프트웨어 버전 관리 도구 – A&lt;/h2&gt;

&lt;h3 id=&quot;--공유-폴더-방식&quot;&gt;- 공유 폴더 방식&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;로컬 컴퓨터의 공유 폴더에 저장되어 관리&lt;/li&gt;
  &lt;li&gt;약속된 공유 폴더에 매일 복사&lt;/li&gt;
  &lt;li&gt;담당자는 파일을 자기 PC로 복사한 후 컴파일 하여 이상 유무를 확인&lt;/li&gt;
  &lt;li&gt;파일 오류가 확인되면, 개발자에게 수정 의뢰&lt;/li&gt;
  &lt;li&gt;이상 없으면 개발자들이 동작 여부 다시 확인&lt;/li&gt;
  &lt;li&gt;파일의 변경 사항을 DB에 기록하여 관리&lt;/li&gt;
  &lt;li&gt;SCCS, RCS, PVCS, QVCS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--클라이언트서버-방식&quot;&gt;- 클라이언트/서버 방식&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;버전 관리 자료가 중앙 시스템에 저장되어 관리되는 방식&lt;/li&gt;
  &lt;li&gt;서버의 자료를 PC로 복사하여 작업한 후 변경된 내용을 서버에 반영&lt;/li&gt;
  &lt;li&gt;모든 버전 관리는 서버에서 수행&lt;/li&gt;
  &lt;li&gt;하나의 파일을 서로 다른 개발자가 작업할 경우 경고 메시지 출력&lt;/li&gt;
  &lt;li&gt;서버에 문제가 생기면 협업 및 버전 관리 작업 중단&lt;/li&gt;
  &lt;li&gt;CVS, SVN(Subversion), CVSNT, Clear Case, CMVC, Perforce&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-subversion서브버전-svn&quot;&gt;@ Subversion(서브버전, SVN)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;CVS를 개선한 것&lt;/li&gt;
  &lt;li&gt;서버에는 최신 버전의 파일들과 변경 내역이 관리&lt;/li&gt;
  &lt;li&gt;서버의 자료를 클라이언트로 복사해와 작업한 후 변경 내용을 서버에 반영&lt;/li&gt;
  &lt;li&gt;모든 개발 작업은 trunk 디렉터리에서 수행&lt;/li&gt;
  &lt;li&gt;추가 작업은 branches 디렉터리 안에 별도의 디렉터리 만들어 작업&lt;/li&gt;
  &lt;li&gt;완료후 trunk 디렉터리와 병합&lt;/li&gt;
  &lt;li&gt;커밋 할 때마다 리비전이 1씩 증가&lt;/li&gt;
  &lt;li&gt;서버는 주로 유닉스 사용&lt;/li&gt;
  &lt;li&gt;소스가 오픈되어 있어 무료로 사용 가능&lt;/li&gt;
  &lt;li&gt;CVS의 단점이었던 파일이나 디렉터리의 이름 변경, 이동 등이 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--분산-저장소-방식&quot;&gt;- 분산 저장소 방식&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 원격 저장소와 분산된 개발자 PC의 로컬 저장소에 함께 저장되어 관리&lt;/li&gt;
  &lt;li&gt;작업한 후 변경된 내용을 로컬에서 우선 반영한 후, 이를 원격 저장소에 반영&lt;/li&gt;
  &lt;li&gt;원격 저장소에 문제가 생겨도 로컬 저장소의 자료를 이용하여 작업할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-git&quot;&gt;@ Git&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;로컬 저장소와 원격 저장소 존재&lt;/li&gt;
  &lt;li&gt;로컬 저장소는 실제 개발을 진행하는 장소로, 버전 관리가 수행&lt;/li&gt;
  &lt;li&gt;원격 저장소는 버전을 공동 관리하는 곳&lt;/li&gt;
  &lt;li&gt;버전 관리가 신속하게 처리되고, 원격 저장소나 네트워크에 문제가 있어도 작업 가능&lt;/li&gt;
  &lt;li&gt;branch를 이용하면 기본 버전 관리 틀에 영향을 주지 않으면서 다양한 형태의 기능 테스팅 가능&lt;/li&gt;
  &lt;li&gt;파일의 변화를 스냅샷으로 저장. 스냅샷은 이전 스냅샷의 포인터를 가지므로 버전의 흐름 파악 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-빌드-자동화-도구--b&quot;&gt;6. 빌드 자동화 도구 – B&lt;/h2&gt;

&lt;h3 id=&quot;--빌드-자동화-도구의-개념&quot;&gt;- 빌드 자동화 도구의 개념&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;빌드란 소스 코드 파일들을 컴파일한 후 여러 개의 모듈을 묶어 실행 파일로 만드는 과정&lt;/li&gt;
  &lt;li&gt;빌드 자동화 도구는 빌드를 포함하여 테스트 및 배포를 자동화하는 도구&lt;/li&gt;
  &lt;li&gt;애자일 환경같은 지속적인 통합 개발 환경에서 유용하게 활용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--jenkins&quot;&gt;- Jenkins&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Jenkins는 Java 기반의 오픈소스 형태, 가장 많이 사용되는 빌드 자동화 도구&lt;/li&gt;
  &lt;li&gt;서블릿 컨테이너에서 실행되는 서버 기반 도구&lt;/li&gt;
  &lt;li&gt;SVN, Git 등 대부분의 형상 관리 도구와 연동이 가능&lt;/li&gt;
  &lt;li&gt;친숙한 Web GUI 제공으로 사용이 쉬움&lt;/li&gt;
  &lt;li&gt;여러 대의 컴퓨터를 이용한 분산 빌드나 테스트가 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--gradle&quot;&gt;- Gradle&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Groovy를 기반으로 한 오픈 소스 형태의 자동화 도구. 안드로이드 앱 개발 환경에서 사용&lt;/li&gt;
  &lt;li&gt;플러그인을 설정하면 Java, C/C++, Python 등의 언어도 빌드 가능&lt;/li&gt;
  &lt;li&gt;Groovy를 사용해서 만든 DSL(Domain Specific Language)을 스크립트 언어로 사용&lt;/li&gt;
  &lt;li&gt;실행할 처리 명령을 모아 Task로 만든 후 Task 단위로 실행&lt;/li&gt;
  &lt;li&gt;Task를 재사용하거나 공유할 수 있는 빌드 캐시 기능을 지원해 빌드의 속도를 향상시킬 수 있음&lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 2과목 3장</summary></entry><entry><title type="html">[정보처리기사 필기] 2-2. 통합 구현</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp6/" rel="alternate" type="text/html" title="[정보처리기사 필기] 2-2. 통합 구현" /><published>2021-07-30T19:00:00+09:00</published><updated>2021-07-31T04:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp6</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp6/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-단위-모듈-테스트--b&quot;&gt;1. 단위 모듈 테스트 – B&lt;/h2&gt;

&lt;h3 id=&quot;--단위-모듈-테스트의-개요&quot;&gt;- 단위 모듈 테스트의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모듈이 정해진 기능을 정확히 수행하는지 검증&lt;/li&gt;
  &lt;li&gt;단위 테스르라고도 하며, 화이트박스 테스트와 블랙박스 테스트 기법 사용&lt;/li&gt;
  &lt;li&gt;모듈을 단독적으로 실행할 수 있는 환경과 테스트에 필요한 데이터 모두 준비&lt;/li&gt;
  &lt;li&gt;에러를 쉽게 발견하고 수정할 수 있음&lt;/li&gt;
  &lt;li&gt;시스템 수준의 오류는 잡아낼 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-케이스&quot;&gt;- 테스트 케이스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 요구사항을 정확하게 준수했는지를 확인하기 위함&lt;/li&gt;
  &lt;li&gt;테스트 항목에 대한 명세서로, 명세 기반 테스트의 설계 산출물에 해당&lt;/li&gt;
  &lt;li&gt;직관적인 테스트는 검증이 누락되거나 불필요한 반복으로 인력과 시간을 낭비 할 수 있음&lt;/li&gt;
  &lt;li&gt;ISO/IEC/IEEE 29119-3 표준에 따른 테스트 케이스 구성 요소
    &lt;ul&gt;
      &lt;li&gt;식별자&lt;/li&gt;
      &lt;li&gt;테스트 항목&lt;/li&gt;
      &lt;li&gt;입력 명세&lt;/li&gt;
      &lt;li&gt;출력 명세&lt;/li&gt;
      &lt;li&gt;환경 설정&lt;/li&gt;
      &lt;li&gt;특수 절차 요구&lt;/li&gt;
      &lt;li&gt;의존성 기술&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-프로세스&quot;&gt;- 테스트 프로세스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;게획 및 제어 -&amp;gt; 분석 밀 설계 -&amp;gt; 구현 및 실현 -&amp;gt; 평가 -&amp;gt; 완료&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-개발-지원-도구--b&quot;&gt;2. 개발 지원 도구 – B&lt;/h2&gt;

&lt;h3 id=&quot;--통합-개발-환경ide-integrated-development-environment&quot;&gt;- 통합 개발 환경(IDE; Integrated Development Environment)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;편집기, 컴파일러, 디버거 등의 다양한 툴을 하나의 인터페이스로 통합하여 제공&lt;/li&gt;
  &lt;li&gt;통합 개발 환경을 제공하는 S/W&lt;/li&gt;
  &lt;li&gt;코드의 자동 생성 및 컴파일 가능, 추가 기능을 위한 도구를 추가할 수 있음&lt;/li&gt;
  &lt;li&gt;오류가 발생할 부분을 시각화하므로 수정이 용이&lt;/li&gt;
  &lt;li&gt;다양한 서비스와 연동하여 개발에 편의를 제공하고 필요한 정보를 공유&lt;/li&gt;
  &lt;li&gt;이클립스, 비주얼 스튜디오, 엑스 코드, 안드로이드 스튜디오, IDEA 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--빌드-도구&quot;&gt;- 빌드 도구&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;빌드는 소스 코드 파일들을 실행할 수 있는 제품 S/W로 변환하는 과정 또는 결과물&lt;/li&gt;
  &lt;li&gt;전처리, 컴파일 등의 작업들을 수행하는 S/W&lt;/li&gt;
  &lt;li&gt;Ant
    &lt;ul&gt;
      &lt;li&gt;자바 프로젝트의 공식 빌드 도구&lt;/li&gt;
      &lt;li&gt;XML 기반의 빌드 스크립트, 자유도와 유연성이 높음&lt;/li&gt;
      &lt;li&gt;개발자가 모든 것을 정의, 스크립트 재사용이 어려움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Maven
    &lt;ul&gt;
      &lt;li&gt;Ant의 대안으로 개발됨&lt;/li&gt;
      &lt;li&gt;규칙이나 표준이 존재하여 예외 사항만 기록, 컴파일과 빌드를 동시에 수행&lt;/li&gt;
      &lt;li&gt;의존성을 설정하여 라이브러리를 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Gradle
    &lt;ul&gt;
      &lt;li&gt;Ant와 Mavn을 보완하여 개발&lt;/li&gt;
      &lt;li&gt;안드로이드 스튜디오의 공식 빌드 도구&lt;/li&gt;
      &lt;li&gt;의존성을 활용하여 Groovy 기반의 빌드 스크립트 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--기타-협업-도구&quot;&gt;- 기타 협업 도구&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;서로 다른 작업 환경에서 원활히 프로젝트를 수행할 수 있도록 도와주는 도구&lt;/li&gt;
  &lt;li&gt;업무 보조 도구 포함&lt;/li&gt;
  &lt;li&gt;다양한 플랫폼에서 사용할 수 있도록 제공&lt;/li&gt;
  &lt;li&gt;익숙하지 않거나 이용할 의지가 없으면 오히려 협업의 방해 요소가 될 수 있음&lt;/li&gt;
  &lt;li&gt;협업 도구 종류
    &lt;ul&gt;
      &lt;li&gt;일정 관리 : Google Calendar, Wunderlist, Trello, Jira, Flow&lt;/li&gt;
      &lt;li&gt;정보 공유 및 커뮤니케이션 : Slack, Jandi, Taskworld&lt;/li&gt;
      &lt;li&gt;디자인 : Sketch, Zeplin&lt;/li&gt;
      &lt;li&gt;기타 : Evernote(아이디어 공유), Swagger(API 문서화로 협업도움), Github&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 2과목 2장</summary></entry><entry><title type="html">[정보처리기사 필기] 2-1. 데이터 입출력 구현</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp5/" rel="alternate" type="text/html" title="[정보처리기사 필기] 2-1. 데이터 입출력 구현" /><published>2021-07-30T04:00:05+09:00</published><updated>2021-07-30T13:00:05+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp5</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp5/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-자료구조--a&quot;&gt;1. 자료구조 – A&lt;/h2&gt;

&lt;h3 id=&quot;--자료-구조의-정의&quot;&gt;- 자료 구조의 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자료의 표현과 그것과 관련된 연산&lt;/li&gt;
  &lt;li&gt;자료들을 조직하고 구조화하는 것&lt;/li&gt;
  &lt;li&gt;필요한 모든 연산들을 처리할 수 있음&lt;/li&gt;
  &lt;li&gt;프로그램 실행시간이 달라짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--자료-구조의-분류&quot;&gt;- 자료 구조의 분류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;선형 구조
    &lt;ul&gt;
      &lt;li&gt;배열&lt;/li&gt;
      &lt;li&gt;선형 리스트
        &lt;ul&gt;
          &lt;li&gt;연속 리스트&lt;/li&gt;
          &lt;li&gt;연결 리스트&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;스택&lt;/li&gt;
      &lt;li&gt;큐&lt;/li&gt;
      &lt;li&gt;데크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비선형 구조
    &lt;ul&gt;
      &lt;li&gt;트리&lt;/li&gt;
      &lt;li&gt;그래프&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--배열array&quot;&gt;- 배열(Array)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;동일한 자료형의 데이터들이 같은 크기로 나열되어 순서를 갖고 있는 집합&lt;/li&gt;
  &lt;li&gt;정적인 자료구조&lt;/li&gt;
  &lt;li&gt;기억장소 추가가 어려움&lt;/li&gt;
  &lt;li&gt;데이터 삭제 시 데이터가 저장되어 있던 기억장소가 빈 공간으로 남아있어 메모리 낭비 발생&lt;/li&gt;
  &lt;li&gt;첨자를 이용하여 데이터에 접근&lt;/li&gt;
  &lt;li&gt;반복적인 데이터 처리 작업에 적합한 구조&lt;/li&gt;
  &lt;li&gt;동일한 이름의 변수를 사용하여 처리가 간편&lt;/li&gt;
  &lt;li&gt;첨자의 개수에 따라 n차원 배열이라고 부름&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--선형-리스트linear-list&quot;&gt;- 선형 리스트(Linear List)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;일정한 순서에 의해 나열된 자료 구조&lt;/li&gt;
  &lt;li&gt;배열을 이용하는 연속 리스트, 포인터를 이용하는 연결 리스트로 구분&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-연속-리스트contiguous-list&quot;&gt;@ 연속 리스트(Contiguous List)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;연속되는 기억장소에 저장되는 자료 구조&lt;/li&gt;
  &lt;li&gt;기억장소 이용 효율은 밀도가 1로서 가장 좋음&lt;/li&gt;
  &lt;li&gt;데이터 삽입, 삭제 시 자료의 이동이 필요&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-연결-리스트linked-list&quot;&gt;@ 연결 리스트(Linked List)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;자료들을 반드시 연속적으로 배열시키지 않고 노드의 포인터 부분을 이용해서 서로 연결&lt;/li&gt;
  &lt;li&gt;노드의 삽입, 삭제 작업이 용이&lt;/li&gt;
  &lt;li&gt;기억공간이 연속적으로 놓여있지 않아도 저장 가능&lt;/li&gt;
  &lt;li&gt;순차 리스트에 비해 기억 공간의 이용 효율이 좋지 않음&lt;/li&gt;
  &lt;li&gt;포인터를 찾는 시간이 필요해 접근 속도가 느림&lt;/li&gt;
  &lt;li&gt;중간 노드 연결이 끊어지면 그 다음 노드를 찾기 힘듬&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--스택stack&quot;&gt;- 스택(Stack)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;리스트의 한쪽 끝으로만 자료의 삽입, 삭제가 이루어짐&lt;/li&gt;
  &lt;li&gt;후입선출(LIFO)&lt;/li&gt;
  &lt;li&gt;기억공간이 꽉 차있는 상태에서 삽입되면 Overflow 발생&lt;/li&gt;
  &lt;li&gt;기억공간이 비어있는 상태에서 삭제하면 Underflow 발생&lt;/li&gt;
  &lt;li&gt;삽입(PUSH), 삭제(POP), 마지막 삽입 자료(Top), 밑바닥(Bottom)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--큐queue&quot;&gt;- 큐(Queue)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;리스트의 한쪽에서는 삽입, 다른 한쪽에서는 삭제가 이루어짐&lt;/li&gt;
  &lt;li&gt;선입선출(FIFO)&lt;/li&gt;
  &lt;li&gt;시작과 끝을 표시하는 두 개의 포인터가 있음&lt;/li&gt;
  &lt;li&gt;프런트(F, Front) 포인터 : 가장 먼저 삽입된 자료의 기억공간을 가리킴. 삭제 작업&lt;/li&gt;
  &lt;li&gt;리어(R, Rear) 포인터 : 가장 마지막에 삽입된 자료의 기억공간을 가리킴. 삽입작업&lt;/li&gt;
  &lt;li&gt;운영체제의 작업 스케줄링에 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--트리tree&quot;&gt;- 트리(Tree)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정점(Node)과 선분(Branch)을 이용하여 사이클을 이루지 않도록 구성한 그래프의 형태&lt;/li&gt;
  &lt;li&gt;하나의 기억공간을 노드(Node), 노드와 노드를 연결하는 선을 링크(Link)&lt;/li&gt;
  &lt;li&gt;가족의 계보, 조직도 등을 표현하기 적합&lt;/li&gt;
  &lt;li&gt;노드 : 자료 항목과 다른 항목에 대한 가지를 합친 것&lt;/li&gt;
  &lt;li&gt;근 노드(Root Node) : 트리의 맨 위에 있는 노드&lt;/li&gt;
  &lt;li&gt;차수(Degree) : 각 노드에서 뻗어 나온 가지의 수&lt;/li&gt;
  &lt;li&gt;단말 노드(Terminal Node) = 잎 노드(Leaf Node) : 자식이 하나도 없는 노드&lt;/li&gt;
  &lt;li&gt;자식 노드(Son Node) : 어떤 노드에 연결된 다음 레벨의 노드들&lt;/li&gt;
  &lt;li&gt;부모 노드(Parent Node) : 어떤 노드에 연결된 이전 레벨의 노드들&lt;/li&gt;
  &lt;li&gt;형제 노드(Brother Node, Sibling) : 동일한 부모를 갖는 노드들&lt;/li&gt;
  &lt;li&gt;트리의 차수 : 노드들의 차수 중에서 가장 많은 수&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-데이터저장소--데이터베이스--dbms--a&quot;&gt;2. 데이터저장소 / 데이터베이스 / DBMS – A&lt;/h2&gt;

&lt;h3 id=&quot;--데이터저장소&quot;&gt;- 데이터저장소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터들을 논리적인 구조로 조직화하거나, 물리적인 공간에 구축한 것&lt;/li&gt;
  &lt;li&gt;논리 데이터 저장소 : 데이터 간 연관성, 제약조건을 식별하여 논리적인 구조로 조직화&lt;/li&gt;
  &lt;li&gt;물리 데이터 저장소 : 물리적 특성을 고려하여 하드웨어적인 저장장치에 저장&lt;/li&gt;
  &lt;li&gt;데이터베이스를 구축하는 과정과 동일&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터베이스&quot;&gt;- 데이터베이스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;상호 관련된 데이터들의 모임&lt;/li&gt;
  &lt;li&gt;통합된 데이터(Integrated Data) : 중복을 배제한 데이터의 모임&lt;/li&gt;
  &lt;li&gt;저장된 데이터(Stored Data) : 컴퓨터가 접근할 수 있는 저장 매체에 저장된 자료&lt;/li&gt;
  &lt;li&gt;운영 데이터(Operational Data) : 조직의 고유한 업무를 수행하는 데 없어서는 안 될 자료&lt;/li&gt;
  &lt;li&gt;공용 데이터(Shared Data) : 공동으로 소유하고 유지하는 자료&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--dbmsdatabase-management-system&quot;&gt;- DBMS(DataBase Management System)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 요구에 따라 정보를 생성해주고, 데이터베이스를 관리해 주는 S/W&lt;/li&gt;
  &lt;li&gt;데이터의 종속성과 중복성의 문제를 해결&lt;/li&gt;
  &lt;li&gt;모든 응용 프로그램들이 DB를 공용할 수 있도록 관리&lt;/li&gt;
  &lt;li&gt;DB의 구성, 접근 방법, 유지관리에 대한 모든 책임을 짐&lt;/li&gt;
  &lt;li&gt;DBMS의 필수 기능
    &lt;ul&gt;
      &lt;li&gt;정의 기능 : 데이터 Type과 구조에 대한 정의, 이용 방식, 제약 조건 등을 명시&lt;/li&gt;
      &lt;li&gt;조작 기능 : 검색, 갱신, 삽입, 삭제 등의 인터페이스 수단을 제공&lt;/li&gt;
      &lt;li&gt;제어 기능 : 데이터의 무결성이 유지되도록 제어, 보안 유지, 권한 검사, 병행 제어&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;장점
    &lt;ul&gt;
      &lt;li&gt;데이터의 논리적, 물리적 독립성 보장&lt;/li&gt;
      &lt;li&gt;데이터의 중복을 피할 수 있어 기억 공간 절약&lt;/li&gt;
      &lt;li&gt;자료를 공동으로 이용할 수 있음&lt;/li&gt;
      &lt;li&gt;데이터의 일관성을 유지할 수 있음&lt;/li&gt;
      &lt;li&gt;데이터의 무결성을 유지할 수 있음&lt;/li&gt;
      &lt;li&gt;보안을 유지할 수 있음&lt;/li&gt;
      &lt;li&gt;데이터를 표준화 할 수 있음&lt;/li&gt;
      &lt;li&gt;통합 관리가 가능&lt;/li&gt;
      &lt;li&gt;최신의 데이터 유지 가능&lt;/li&gt;
      &lt;li&gt;실시간 처리 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점
    &lt;ul&gt;
      &lt;li&gt;DB 전문가 부족&lt;/li&gt;
      &lt;li&gt;전산화 비용 증가&lt;/li&gt;
      &lt;li&gt;Overhead 발생&lt;/li&gt;
      &lt;li&gt;Backup과 Recovery이 어려움&lt;/li&gt;
      &lt;li&gt;시스템이 복잡&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터의-독립성&quot;&gt;- 데이터의 독립성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터의 독립성은 DBMS의 궁극적 목표&lt;/li&gt;
  &lt;li&gt;논리적 독립성 : 데이터의 논리적 구조를 변경해도 응용 프로그램은 변경되지 않음&lt;/li&gt;
  &lt;li&gt;물리적 독립성 : 응용 프로그램에는 영향을 주지 않고, 데이터의 물리적 구조만을 변경&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-데이터-입출력--b&quot;&gt;3. 데이터 입출력 – B&lt;/h2&gt;

&lt;h3 id=&quot;--데이터-입출력-개요&quot;&gt;- 데이터 입출력 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB에 데이터를 입력하거나 출력하는 작업&lt;/li&gt;
  &lt;li&gt;데이터를 조작하는 모든 행위를 의미. SQL 사용&lt;/li&gt;
  &lt;li&gt;개발 코드 내에 SQL 코드를 삽입하거나, 객체와 데이터를 연결하는 데이터 접속(Data Mapping)&lt;/li&gt;
  &lt;li&gt;논리적 기능을 수행하기 위한 작업의 단위 또는 한번에 수행되야 할 연산들을 트랜잭션이라고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--sqlstructured-query-language&quot;&gt;- SQL(Structured Query Language)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;많은 회사에서 관계형 데이터베이스(RDB)를 지원하는 언어로 채택&lt;/li&gt;
  &lt;li&gt;관계대수와 관계해석을 기초로 한 혼합 데이터&lt;/li&gt;
  &lt;li&gt;질의어지만 질의 기능뿐만 아니라, 데이터 구조 정의, 조작, 제어기능을 모두 갖춤&lt;/li&gt;
  &lt;li&gt;데이터 정의어(DDL), 데이터 조작어(DML), 데이터 제어어(DCL)로 구분
    &lt;ul&gt;
      &lt;li&gt;DDL : SCHEMA, DOMAIN, TABLE, VIEW, INDEX를 정의, 변경, 삭제&lt;/li&gt;
      &lt;li&gt;DML : 저장된 데이터를 실질적으로 처리&lt;/li&gt;
      &lt;li&gt;DCL : 보안, 무결성, 회복, 병행수행 제어 등을 정의하는데 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-접속data-mapping&quot;&gt;- 데이터 접속(Data Mapping)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로그래밍 코드와 DB의 데이터를 연결하는 것&lt;/li&gt;
  &lt;li&gt;SQL Mapping : 코드 내에 SQL을 직접 입력하여 DBMS 객체에 접속. JDBC, ODBC, MyBatis&lt;/li&gt;
  &lt;li&gt;ORM(Object-Relational Mapping) : 객체와 RDB의 데이터를 연결. JPA, Hibernate, Django&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--트랜잭션transaction&quot;&gt;- 트랜잭션(Transaction)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB 상태를 변환시키는 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 수행돼야 할 연산&lt;/li&gt;
  &lt;li&gt;TCL : 트랜잭션을 제어하기 위한 명령어. COMMIT, ROLLBACK, SAVEPOINT
    &lt;ul&gt;
      &lt;li&gt;COMMIT : 트랜잭션이 수행한 변경 내용을 DB에 저장&lt;/li&gt;
      &lt;li&gt;ROLLBACK : 모든 변경 작업을 취소하고 이전 상태로 되돌림&lt;/li&gt;
      &lt;li&gt;SAVEPOINT(=CHECKPOINT) : ROLLBACK 할 저장점을 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-절차형-sql--b&quot;&gt;4. 절차형 SQL – B&lt;/h2&gt;

&lt;h3 id=&quot;--절차형-sql-개요&quot;&gt;- 절차형 SQL 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로그래밍 언어와 같이 연속적인 실행이나 분기, 반복 등의 제어가 가능한 SQL&lt;/li&gt;
  &lt;li&gt;프로그래밍 언어에 비해 효율은 떨어지지만, 연속적인 작업들을 처리하는데 적합&lt;/li&gt;
  &lt;li&gt;다양한 기능을 수행하는 저장 모듈 생성할 수 있음&lt;/li&gt;
  &lt;li&gt;DBMS 엔진에서 직접 실행돼 입출력 패킷이 적은 편&lt;/li&gt;
  &lt;li&gt;BEGIN ~ END 형식의 블록 구조로 되어 있어 기능별 모듈화 가능&lt;/li&gt;
  &lt;li&gt;프로시저 : 트랜잭션 언어, 호출을 통해 실행되어 미리 저장해 놓은 SQL 작업 수행&lt;/li&gt;
  &lt;li&gt;트리거 : 이벤트가 발생할 때마다 관련 작업이 자동으로 수행&lt;/li&gt;
  &lt;li&gt;사용자 정의 함수 : 예약어 RETURN을 사용하여 처리 결과를 단일값으로 반환&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--절차형-sql의-테스트와-디버깅&quot;&gt;- 절차형 SQL의 테스트와 디버깅&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;디버깅을 통해 기능의 적합성 여부를 검증, 실행을 통해 결과를 테스트&lt;/li&gt;
  &lt;li&gt;테스트 전에 생성을 통해 구문 오류나 참조 오류의 존재 여부 확인&lt;/li&gt;
  &lt;li&gt;SHOW  명령어를 통해 내용을 확인하고 문제를 수정&lt;/li&gt;
  &lt;li&gt;디버깅을 통해 로직을 검증하고, 결과를 통해 최종적으로 확인&lt;/li&gt;
  &lt;li&gt;DB에 변화를 줄 수 있는 삽입 등의 SQL 문을 주석으로 처리하고, 출력문을 이용해 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--쿼리-성능-최적화&quot;&gt;- 쿼리 성능 최적화&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 입출력 애플리케이션의 성능 향상을 위해 SQL 코드를 최적화&lt;/li&gt;
  &lt;li&gt;성능 측정 도구인 APM을 사용하여 최적화 할 쿼리 선정&lt;/li&gt;
  &lt;li&gt;옵티마이저가 수립한 실행 계획을 검토하고 SQL 코드와 인덱스 재구성&lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 2과목 1장</summary></entry><entry><title type="html">[CSS] CSS 속성 - 박스모델</title><link href="https://leewonwoo1.github.io/css/frontend-css-properties-boxmodel/" rel="alternate" type="text/html" title="[CSS] CSS 속성 - 박스모델" /><published>2021-07-30T04:00:00+09:00</published><updated>2021-07-30T13:00:00+09:00</updated><id>https://leewonwoo1.github.io/css/frontend-css-properties-boxmodel</id><content type="html" xml:base="https://leewonwoo1.github.io/css/frontend-css-properties-boxmodel/">&lt;h2 id=&quot;박스-모델&quot;&gt;박스 모델&lt;/h2&gt;

&lt;h3 id=&quot;--단위&quot;&gt;- 단위&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;px 픽셀
% 상대적 백분율
em 요소의 글꼴 크기
rem 루트 요소(html)의 글꼴 크기
vw 뷰포트 가로 너비의 백분율
vh 뷰포트 세로 너비의 백분율
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--색상-표현&quot;&gt;- 색상 표현&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;이름 : red, royalblue, tomato // 브라우저에서 제공하는 색 이름
Hex 색상코드 : #000, #FFFFFF // 16진수 색상
RGB : rgb(255, 255, 255) // 빛의 삼원색
RGBA : rgba(0, 0, 0, 0.5) // 빛의 삼원색 + 투명도
HSL : hsl(120, 100%, 50%) // 색상, 채도, 명도
HSLA : hsla(120, 100%, 50%, 0.5) // 색상, 채도, 명도 + 투명도
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--width-height&quot;&gt;- width, height&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 요소의 가로/세로 너비 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;브라우저가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;너비를&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계산&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;단위&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--max-width-max-height&quot;&gt;- max-width, max-height&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 요소가 커질 수 있는 최대 가로/세로 너비 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;max-height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;최대&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;너비&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;제한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없음&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;단위&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--min-width-min-height&quot;&gt;- min-width, min-height&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 요소가 작아질 수 있는 최소 가로/세로 너비 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;min-height&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;최소&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;너비&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;제한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없음&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;단위&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--margin&quot;&gt;- margin&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 요소의 외부 여백을 지정하는 단축 속성 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;margin&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;외부&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;여백&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없음&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;브라우저가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;여백을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계산.&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가운데&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;정렬에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;활용&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;단위&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;음수&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사용&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가능&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;적용&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* top, right, bottom, left*/&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* top, bottom / left, right */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* top / left, right / bottom */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* top / right / bottom / left */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;개별&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;속성&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--padding&quot;&gt;- padding&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 요소의 내부 여백을 지정하는 단축 속성 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;padding&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;내부&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;여백&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없음&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;단위&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;%:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부모&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;너비에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;대한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;비율로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;지정&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;요소의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커짐&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;적용&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* top, right, bottom, left*/&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* top, bottom / left, right */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* top / left, right / bottom */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* top / right / bottom / left */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;개별&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;속성&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding-right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--border&quot;&gt;- border&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 요소의 테두리 선을 지정하는 단축 속성 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;border&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;두께&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;종류&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;색상&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;요소의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커짐&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;적용&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;두께&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;종류&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;선&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없음&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;실선&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dashed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;파선&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dotted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;점선&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;두줄선&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;groove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;홈이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;파여있는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;모양&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;솟은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;모양(groove&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;반대)&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;inset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;전체가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;들어간&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;모양&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;outset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;전체가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;나온&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;모양&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;색상&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;투명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;모서리&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* 둥글게 깎기 */&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--box-sizing&quot;&gt;- box-sizing&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 요소의 크기 계산 기준을 지정 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;box-sizing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content-box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;내용으로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계산&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;box-sizing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;border-box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;내용&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;padding&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;border로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크기&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계산&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--overflow&quot;&gt;- overflow&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 내용이 넘쳤을 때, 보여짐을 제어 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;overflow&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;넘친&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;내용을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;그대로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;보여줌&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;넘친&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;내용을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;잘라냄&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;넘친&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;내용을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;잘라내고&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;스크롤바&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;생성&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;넘친&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;내용이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;있는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;경우에만&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;잘라내고&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;스크롤바&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;생성&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;개별속성&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;overflow-x&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;overflow-y&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--display&quot;&gt;- display&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 화면 출력 특성 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;display&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;각&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요소에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;이미&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;지정되어&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;있는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;값&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;플렉스&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;박스&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;(1차원&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;레이아웃)&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;그리드&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;(2차원&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;레이아웃)&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;보여짐&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;특성&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없음,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;화면에서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사라짐&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기타&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;table-row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;table-cell&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;등&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--opacity&quot;&gt;- opacity&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 요소 투명도 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;opacity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;기본값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;불투명&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0부터&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;1사이의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;소수점&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;숫자&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="CSS" /><category term="CSS" /><category term="Web" /><summary type="html">CSS 속성인 박스모델 정리</summary></entry></feed>