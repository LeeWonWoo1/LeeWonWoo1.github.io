<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://leewonwoo1.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://leewonwoo1.github.io/" rel="alternate" type="text/html" /><updated>2021-07-30T21:41:05+09:00</updated><id>https://leewonwoo1.github.io/feed.xml</id><title type="html">LWW’s Tech Blog</title><subtitle>꾸준히 기록하는 블로그</subtitle><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><entry><title type="html">[정보처리기사 필기] 2-4. 애플리케이션 테스트 관리</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp8/" rel="alternate" type="text/html" title="[정보처리기사 필기] 2-4. 애플리케이션 테스트 관리" /><published>2021-07-30T21:00:00+09:00</published><updated>2021-07-31T06:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp8</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp8/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-애플리케이션-테스트--b&quot;&gt;1. 애플리케이션 테스트 – B&lt;/h2&gt;

&lt;h3 id=&quot;--애플리케이션-테스트의-개념&quot;&gt;- 애플리케이션 테스트의 개념&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;잠재되어 있는 결함을 찾아내는 일련의 행위&lt;/li&gt;
  &lt;li&gt;고객의 요구사항을 만족시키는지 확인(Validation)&lt;/li&gt;
  &lt;li&gt;기능을 정확히 수행하는지 검증(Verrfication)&lt;/li&gt;
  &lt;li&gt;개발할 소프트웨어의 유형을 분류하고 특성을 정리해서 중점적으로 테스트할 사항을 정리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--애플리케이션-테스트의-필요성&quot;&gt;- 애플리케이션 테스트의 필요성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램 실행 전에 오류를 발견하여 예방&lt;/li&gt;
  &lt;li&gt;제품의 신뢰도 향상&lt;/li&gt;
  &lt;li&gt;새로운 오류의 유입 예방&lt;/li&gt;
  &lt;li&gt;최소한의 시간과 노력으로 많은 결함을 찾아낼 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--애플리케이션-테스트의-기본-원리&quot;&gt;- 애플리케이션 테스트의 기본 원리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;잠재적인 결함은 줄일 수 있지만 완벽한 소프트웨어 테스팅은 불가능&lt;/li&gt;
  &lt;li&gt;결함 대부분은 특정 모듈에 집중. 20%의 코드에서 80%의 결함이 발견. &lt;strong&gt;&lt;em&gt;파레토 법칙&lt;/em&gt;&lt;/strong&gt; 적용&lt;/li&gt;
  &lt;li&gt;동일한 테스트를 반복하면 더 이상 결함이 발견되지 않는 &lt;strong&gt;&lt;em&gt;살충제 패러독스&lt;/em&gt;&lt;/strong&gt; 발생&lt;/li&gt;
  &lt;li&gt;정황에 따라 테스트를 다르게 수행&lt;/li&gt;
  &lt;li&gt;결함을 제거해도 요구사항을 만족시키지 못하면 품질이 높다고 말할 수 없음. &lt;strong&gt;&lt;em&gt;오류 부재의 궤변&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;테스트와 위험은 반비례&lt;/li&gt;
  &lt;li&gt;작은 부분에서 시작하여 점점 확대하며 진행&lt;/li&gt;
  &lt;li&gt;개발자와 관계없는 별도의 팀에서 수행&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-애플리케이션-테스트의-분류--b&quot;&gt;2. 애플리케이션 테스트의 분류 – B&lt;/h2&gt;

&lt;h3 id=&quot;--프로그램-실행-여부에-따른-테스트&quot;&gt;- 프로그램 실행 여부에 따른 테스트&lt;/h3&gt;

&lt;h4 id=&quot;-정적-테스트&quot;&gt;@ 정적 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램을 실행하지 않고 명세서나 소스 코드를 대상으로 분석&lt;/li&gt;
  &lt;li&gt;개발 초기에 결함 발견 가능. 개발 비용을 낮출 수 있음&lt;/li&gt;
  &lt;li&gt;워크스루, 인스펙션, 코드 검사 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-동적-테스트&quot;&gt;@ 동적 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램을 실행하여 오류를 찾는 테스트. 개발 모든 단계에서 수행 가능&lt;/li&gt;
  &lt;li&gt;블래박스 테스트, 화이트박스 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-기반에-따른-테스트&quot;&gt;- 테스트 기반에 따른 테스트&lt;/h3&gt;

&lt;h4 id=&quot;-명세-기반-테스트&quot;&gt;@ 명세 기반 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;요구사항에 대한 명세를 빠짐없이 테스트 케이스로 만들어 구현하고 있는지 확인&lt;/li&gt;
  &lt;li&gt;동등 분할, 경계 값 분석 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-구조-기반-테스트&quot;&gt;@ 구조 기반 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;내부의 논리 흐름에 따라 테스트 케이스를 작성하고 확인&lt;/li&gt;
  &lt;li&gt;구문 기반, 결정 기반, 조건 기반 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-경험-기반-테스트&quot;&gt;@ 경험 기반 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;유사 소프트웨어나 기술 등에 대한 경험을 기반으로 함&lt;/li&gt;
  &lt;li&gt;요구사항에 대한 명세가 불충분하거나 테스트 시간에 제약이 있는 경우 효과적&lt;/li&gt;
  &lt;li&gt;에러 추정, 체크 리스트, 탐색적 테스팅&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--시각에-따른-테스트&quot;&gt;- 시각에 따른 테스트&lt;/h3&gt;

&lt;h4 id=&quot;-검증verification-테스트&quot;&gt;@ 검증(Verification) 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;개발자의 시각에서 명세서대로 완성됐는지 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-확인validation-테스트&quot;&gt;@ 확인(Validation) 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 시각에서 요구한대로 제품이 완성됐는지, 정상 동작하는지 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--목적에-따른-테스트&quot;&gt;- 목적에 따른 테스트&lt;/h3&gt;

&lt;h4 id=&quot;-회복-테스트&quot;&gt;@ 회복 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;결함을 주어 실패하도록 한 후 올바르게 복구되는지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-안전-테스트&quot;&gt;@ 안전 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;불법적인 침입으로부터 시스템을 보호할 수 있는지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-강도-테스트&quot;&gt;@ 강도 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;과도한 정보량이나 빈도 등을 부과하여 과부하 시에도 정상적으로 실행되는지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-성능-테스트&quot;&gt;@ 성능 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;실시간 성능이나 전체적인 효율성을 진단하는 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-구조-테스트&quot;&gt;@ 구조 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;내부의 논리적인 경로, 소스 코드의 복잡도 등을 평가하는 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-회귀-테스트&quot;&gt;@ 회귀 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;변경 또는 수정된 코드에 새로운 결함이 없음을 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-병행-테스트&quot;&gt;@ 병행 테스트&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기존 소프트웨어에 동일한 데이터를 입력하여 결과를 비교&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-테스트-기법에-따른-애플리케이션-테스트--a&quot;&gt;3. 테스트 기법에 따른 애플리케이션 테스트 – A&lt;/h2&gt;

&lt;h3 id=&quot;--화이트박스-테스트&quot;&gt;- 화이트박스 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;원시 코드를 오픈시킨 상태에서 논리적인 모든 경로를 테스트하여 테스트 케이스를 설계&lt;/li&gt;
  &lt;li&gt;구조적 테스트. 프로시저 설계의 제어 구조를 사용하여 테스트 케이스를 설계&lt;/li&gt;
  &lt;li&gt;테스트 과정의 초기에 적용&lt;/li&gt;
  &lt;li&gt;모듈 안의 작동을 직접 관찰&lt;/li&gt;
  &lt;li&gt;모든 문장을 한 번 이상 실행하여 수행&lt;/li&gt;
  &lt;li&gt;선택, 반복 등의 분기점 부분들을 수행함으로써 논리적 경로를 제어&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--화이트박스-테스트의-종류&quot;&gt;- 화이트박스 테스트의 종류&lt;/h3&gt;

&lt;h4 id=&quot;-기초-경로-검사&quot;&gt;@ 기초 경로 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;대표적인 화이트박스 테스트 기법&lt;/li&gt;
  &lt;li&gt;절차적 설계의 논리적 복잡성을 측정할 수 있게 해줌&lt;/li&gt;
  &lt;li&gt;실행 경로의 기초를 정의하는 데 지침으로 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-제어-구조-검사&quot;&gt;@ 제어 구조 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;조건 검사 : 논리적 조건을 테스트하는 설계 기법&lt;/li&gt;
  &lt;li&gt;루프 검사 : 반복 구조에 초점을 맞춰 실시하는 설계 기법&lt;/li&gt;
  &lt;li&gt;데이터 흐름 검사 : 변수의 정의와 변수 사용의 위치에 초점을 맞춰 실시하는 설계 기법&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--화이트박스-테스트의-검증-기준&quot;&gt;- 화이트박스 테스트의 검증 기준&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;문장 검증 기준 : 모든 구문이 한 번 이상 수행되도록 설계&lt;/li&gt;
  &lt;li&gt;분기 검증 기준 : 모든 조건문이 한 번 이상 수행되도록 설계&lt;/li&gt;
  &lt;li&gt;조건 검증 기준 : 모든 조건문에 대해 조건문이 True, False 경우가 한 번 이상 수행되도록 설계&lt;/li&gt;
  &lt;li&gt;분기/조건 기준 : 모든 조건문과 각 조건문에 포함된 개별 조건식의 결과가 True, False인 경우가 한 번 이상 수행되도록 설계&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--블랙박스-테스트&quot;&gt;- 블랙박스 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;각 기능이 완전히 작동되는 것을 입증하는 테스트. 기능 테스트&lt;/li&gt;
  &lt;li&gt;요구사항 명세서를 보면서 테스트하는 것. 구현된 기능을 테스트&lt;/li&gt;
  &lt;li&gt;인터페이스에서 실시되는 테스트&lt;/li&gt;
  &lt;li&gt;테스트 과정의 후반부에 적용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--블랙박스-테스트의-종류&quot;&gt;- 블랙박스 테스트의 종류&lt;/h3&gt;

&lt;h4 id=&quot;-동치-분할-검사&quot;&gt;@ 동치 분할 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;입력 자료에 초점을 맞춰 검사&lt;/li&gt;
  &lt;li&gt;타당한 입력 자료와 타당하지 않은 입력 자료의 개수를 균등하게 함. 자료에 맞는 결과가 출력되는지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-경계값-분석&quot;&gt;@ 경계값 분석&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;동치 분할 기법을 보완하기 위함&lt;/li&gt;
  &lt;li&gt;중간값보다 경계값에서 오류가 발생될 확률이 높다는 점 이용&lt;/li&gt;
  &lt;li&gt;입력 조건의 경계값을 테스트 케이스로 선정하여 검사&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-원인-효과-그래프-검사&quot;&gt;@ 원인-효과 그래프 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;입력 데이터 간의 관계와 출력에 영향을 미치는 상황을 체계적으로 분석한 후 효용성 높은 케이스 선정하여 검사&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-오류-예측-검사&quot;&gt;@ 오류 예측 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;과거의 경험이나 확인자의 감각으로 테스트&lt;/li&gt;
  &lt;li&gt;보충적 검사 기법. 데이터 확인 검사&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-비교-검사&quot;&gt;@ 비교 검사&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;여러 버전의 프로그램에 동일한 테스트 자료를 제공하여 동일한 결과가 출력되는지 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-개발-단계에-따른-애플리케이션-테스트--a&quot;&gt;4. 개발 단계에 따른 애플리케이션 테스트 – A&lt;/h2&gt;

&lt;h3 id=&quot;--개발-단계에-따른-애플리케이션-테스트&quot;&gt;- 개발 단계에 따른 애플리케이션 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;코드 상의 오류뿐만 아니라 요구 분석의 오류, 설계 인터페이스 오류 등도 발견할 수 있음&lt;/li&gt;
  &lt;li&gt;애플리케이션 테스트 + 소프트웨어 개발 단계 = V-모델&lt;/li&gt;
  &lt;li&gt;요구사항 -&amp;gt; 분석 -&amp;gt; 설계 -&amp;gt; 구현 -&amp;gt; // 단위테스트 -&amp;gt; 통합테스트 -&amp;gt; 시스템티스트 -&amp;gt; 인수테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--단위-테스트unit-test&quot;&gt;- 단위 테스트(Unit Test)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;설계의 최소 단위인 모듈이나 컴포넌트에 초점을 맞춰 테스트&lt;/li&gt;
  &lt;li&gt;사용자의 요구사항을 기반으로 한 기능성 테스트를 최우선으로 수행&lt;/li&gt;
  &lt;li&gt;구조 기반 테스트와 명세기반 테스트로 나뉘지만 주로 구조 기반 테스트를 시행
    &lt;ul&gt;
      &lt;li&gt;구조 기반 테스트 : 화이트박스 테스트&lt;/li&gt;
      &lt;li&gt;명세 기반 테스트 : 블랙박스 테스트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--통합-테스트integration-test&quot;&gt;- 통합 테스트(Integration Test)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;단위 테스트가 완료된 모듈들을 결합하여 하나의 시스템으로 완성시키는 과정에서의 테스트&lt;/li&gt;
  &lt;li&gt;모듈 간 또는 통합된 컴포넌트 간의 상호 작용 오류를 검사&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--시스템-테스트system-test&quot;&gt;- 시스템 테스트(System Test)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개발된 S/W가 해당 컴퓨터 시스템에서 완벽하게 수행되는가를 점검&lt;/li&gt;
  &lt;li&gt;실제 사용 환경과 유사하게 만든 테스트 환경에서 수행&lt;/li&gt;
  &lt;li&gt;기능적 요구사항 : 블랙박스 테스트 시행&lt;/li&gt;
  &lt;li&gt;비기능적 요구사항 : 화이트박스 테스트 시행&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인수-테스트acceptance-test&quot;&gt;- 인수 테스트(Acceptance Test)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개발한 S/W가 사용자의 요구사항을 충족하는지에 중점&lt;/li&gt;
  &lt;li&gt;사용자가 직접 테스트&lt;/li&gt;
  &lt;li&gt;문제가 없으면 사용자는 S/W를 인수하고 프로젝트 종료&lt;/li&gt;
  &lt;li&gt;사용자 인수 테스트 : 사용자가 시스템 사용의 적절성 여부 확인&lt;/li&gt;
  &lt;li&gt;운영상의 인수 테스트 : 시스템 관리자가 수행&lt;/li&gt;
  &lt;li&gt;계약 인수 테스트 : 계약상의 인수/검수 조건을 준수하는지 여부 확인&lt;/li&gt;
  &lt;li&gt;규정 인수 테스트 : 규정에 맞게 개발되었는지 확인&lt;/li&gt;
  &lt;li&gt;알파 테스트
    &lt;ul&gt;
      &lt;li&gt;개발자의 장소에서 사용자가 개발자 앞에서 행하는 테스트&lt;/li&gt;
      &lt;li&gt;통제된 환경에서 시행. 문제점을 사용자와 개발자가 함께 확인&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;베타 테스트
    &lt;ul&gt;
      &lt;li&gt;최종 사용자가 여러 명의 사용자 앞에서 행하는 테스트&lt;/li&gt;
      &lt;li&gt;사용자가 직접 테스트&lt;/li&gt;
      &lt;li&gt;개발자에 의해 제어되지 않은 상태에서 테스트&lt;/li&gt;
      &lt;li&gt;오류와 사용상의 문제점을 기록하고 개발자에게 주기적으로 보고&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-통합-테스트--a&quot;&gt;5. 통합 테스트 – A&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;단위 테스트가 끝난 모듈을 통합하는 과정에서 발생하는 오류 및 결함을 찾는 테스트&lt;/li&gt;
  &lt;li&gt;비점진적 통합 방식
    &lt;ul&gt;
      &lt;li&gt;모든 모둘이 미리 결합되어 있는 프로그램 전체를 테스트. 빅뱅 통합 테스트&lt;/li&gt;
      &lt;li&gt;규모가 작은 소프트웨어에 유리. 단시간 내에 테스트 가능&lt;/li&gt;
      &lt;li&gt;오류 발견 및 장애 위치 파악 및 수정이 어려움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;점진적 통합 방식
    &lt;ul&gt;
      &lt;li&gt;모듈 단위로 단계적으로 통합하면서 테스트. 하향식, 상향식, 혼합식&lt;/li&gt;
      &lt;li&gt;오류 수정이 용이하고, 인터페이스와 연관된 오류를 완전히 테스트 할 가능성 높음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--하향식-통합-테스트&quot;&gt;- 하향식 통합 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;상위 모듈에서 하위 모듈 방향으로 통합하면서 테스트&lt;/li&gt;
  &lt;li&gt;깊이 우선 통합법이나 넓이 우선 통합법 사용&lt;/li&gt;
  &lt;li&gt;테스트 초기부터 사용자에게 시스템 구조를 보여줄 수 있음&lt;/li&gt;
  &lt;li&gt;상위 모듈에서는 테스트 케이스를 사용하기 어려움&lt;/li&gt;
  &lt;li&gt;절차
    &lt;ol&gt;
      &lt;li&gt;주요 제어 모듈은 작성된 프로그램 사용. 종속 모듈은 Stub으로 대체&lt;/li&gt;
      &lt;li&gt;하위 모듈인 Stub들이 한 번에 하나씩 실제 모듈로 교체됨&lt;/li&gt;
      &lt;li&gt;모듈이 통합될 때마다 테스트를 실시&lt;/li&gt;
      &lt;li&gt;새로운 오류가 발생하지 않음을 보증하기 위해 회귀 테스트 실시&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--상향식-통합-테스트&quot;&gt;- 상향식 통합 테스트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하위 모듈에서 상위 모듈 방향으로 통합하면서 테스트&lt;/li&gt;
  &lt;li&gt;Stub은 필요하지 않지만, 하나의 주요 제어 모듈과 관련된 종속 모듈의 그룹인 Cluster가 필요
-절차
    &lt;ol&gt;
      &lt;li&gt;하위 모듈들을 Cluster로 결합&lt;/li&gt;
      &lt;li&gt;더미 모듈인 Driver를 작성&lt;/li&gt;
      &lt;li&gt;통합된 클러스터 단위로 테스트&lt;/li&gt;
      &lt;li&gt;테스트가 완료되면 Cluster는 프로그램 구조의 상위로 이동하여 결합하고 Driver는 실제 모듈로 대체&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-driver와-stub의-차이점&quot;&gt;- 테스트 Driver와 Stub의 차이점&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;Driver&lt;/th&gt;
      &lt;th&gt;Stub&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;필요시기&lt;/td&gt;
      &lt;td&gt;상위 모듈 없음&lt;/td&gt;
      &lt;td&gt;하위 모듈 없음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;테스트방식&lt;/td&gt;
      &lt;td&gt;상향식&lt;/td&gt;
      &lt;td&gt;하향식&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;공통점&lt;/td&gt;
      &lt;td&gt;소프트웨어 개발과 테스트를 병행할 경우 이용&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;차이점&lt;/td&gt;
      &lt;td&gt;인터페이스 역할, 원래 모듈로 교체&lt;/td&gt;
      &lt;td&gt;가짜 모듈의 역할, 작성하기 쉬움&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 2과목 4장</summary></entry><entry><title type="html">[정보처리기사 필기] 2-3. 제품 소프트웨어 패키징</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp7/" rel="alternate" type="text/html" title="[정보처리기사 필기] 2-3. 제품 소프트웨어 패키징" /><published>2021-07-30T20:00:00+09:00</published><updated>2021-07-31T05:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp7</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp7/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-소프트웨어-패키징--b&quot;&gt;1. 소프트웨어 패키징 – B&lt;/h2&gt;

&lt;h3 id=&quot;--소프트웨어-패키징의-개요&quot;&gt;- 소프트웨어 패키징의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모듈별로 생성한 실행 파일들을 묶어 배포용 설치 파일을 만드는 것&lt;/li&gt;
  &lt;li&gt;사용자를 중심으로 진행&lt;/li&gt;
  &lt;li&gt;모듈화하여 패키징&lt;/li&gt;
  &lt;li&gt;일반적인 배포 형태로 패키징&lt;/li&gt;
  &lt;li&gt;사용자의 편의성 및 실행 환경을 우선적으로 고려&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--패키징-시-고려사항&quot;&gt;- 패키징 시 고려사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 시스템 환경에 필요한 최소 환경을 정의&lt;/li&gt;
  &lt;li&gt;UI는 눈으로 직접 확인할 수 있도록 시각적인 자료와 함께 제공하고 매뉴얼과 일치&lt;/li&gt;
  &lt;li&gt;하드웨어와 함께 관리될 수 있도록 Managed Service 형태로 제공&lt;/li&gt;
  &lt;li&gt;편의성을 고려한 안정적인 배포가 중요&lt;/li&gt;
  &lt;li&gt;패키징의 변경 및 개선에 대한 관리를 항상 고려&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--패키징-작업-순서&quot;&gt;- 패키징 작업 순서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;애자일 기법의 경우 2~4주 내에서 지정하며, 각 주기가 끝날 때마다 패키징 수행&lt;/li&gt;
  &lt;li&gt;주기별로 패키징한 결과물은 테스트 서버에 배포&lt;/li&gt;
  &lt;li&gt;최종 패키징한 결과물은 사용할 수 있도록 온라인 또는 오프라인으로 배포&lt;/li&gt;
  &lt;li&gt;기능 식별 -&amp;gt; 모듈화 -&amp;gt; 빌드 -&amp;gt; 사용자 환경 분석 -&amp;gt; 패키징 및 적용시험 -&amp;gt; 패키징 변경 개선 -&amp;gt; 배포&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-릴리즈-노트-작성--b&quot;&gt;2. 릴리즈 노트 작성 – B&lt;/h2&gt;

&lt;h3 id=&quot;--릴리즈-노트의-개요&quot;&gt;- 릴리즈 노트의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;릴리즈 정보를 소프트웨어의 최종 사용자인 고객과 공유하기 위한 문서&lt;/li&gt;
  &lt;li&gt;테스트 진행 방법에 대한 결과와 S/W 사양에 대한 개발팀의 정확한 준수 여부 확인 가능&lt;/li&gt;
  &lt;li&gt;전체 기능, 서비스의 내용, 개선 사항 등을 사용자와 공유&lt;/li&gt;
  &lt;li&gt;버전 관리나 릴리즈 정보를 체계적으로 관리&lt;/li&gt;
  &lt;li&gt;초기 배포 시 또는 출시 후 개선 사항을 적용한 추가 배포 시에 제공&lt;/li&gt;
  &lt;li&gt;포함된 기능이나 사용 환경에 대한 내용을 확인&lt;/li&gt;
  &lt;li&gt;개선된 작업이 있을 때마다 관련 내용을 릴리즈 노트에 담아 제공&lt;/li&gt;
  &lt;li&gt;철저한 테스트를 거친 것, 사양에 대한 최종 승인을 얻은 후 문서화 되어 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--릴리즈-노트-초기-버전-작성-시-고려사항&quot;&gt;- 릴리즈 노트 초기 버전 작성 시 고려사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정확하고 완전한 정보를 기반으로 개발팀에서 직접 현재 시제로 작성&lt;/li&gt;
  &lt;li&gt;변경 또는 개선된 항목에 대한 이력 정보들도 작성&lt;/li&gt;
  &lt;li&gt;표준 형식은 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--릴리즈-노트-추가-버전-작성-시-고려사항&quot;&gt;- 릴리즈 노트 추가 버전 작성 시 고려사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;특수한 상황이 발생하는 경우 릴리즈 노트를 추가로 작성&lt;/li&gt;
  &lt;li&gt;모든 수정된 내용을 담아 릴리즈 노트를 작성&lt;/li&gt;
  &lt;li&gt;기능 업그레이드를 완료한 경우에는 릴리즈 버전을 출시하고 릴리즈 노트를 작성&lt;/li&gt;
  &lt;li&gt;요구사항에 의해 추가나 수정된 경우 별도의 릴리즈 버전으로 출시하고 릴리즈 노트 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--릴리즈-노트-작성-순서&quot;&gt;- 릴리즈 노트 작성 순서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모듈 식별 -&amp;gt; 릴리즈 정보 확인 -&amp;gt; 릴리즈 노트 개요 작성 -&amp;gt; 영향도 체크 -&amp;gt; 정식 릴리즈 노트 작성 -&amp;gt; 추가 개선 항목 식별&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-디지털-저작권-관리drm--a&quot;&gt;3. 디지털 저작권 관리(DRM) – A&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;저작권이란 창작자가 가지는 배타적 독점적 권리로 타인의 침해를 받지 않을 고유한 권한&lt;/li&gt;
  &lt;li&gt;복제하기 쉬운 저작물에 대해 이를 막기 위한 기술적인 방법을 통칭해 저작권 보호 기술이라 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--디지털-저작권-관리drm-digital-right-management의-개요&quot;&gt;- 디지털 저작권 관리(DRM; Digital Right Management)의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;디지털 콘텐츠 관리 및 보호 기술&lt;/li&gt;
  &lt;li&gt;원본 콘텐츠가 아날로그인 경우 디지털로 변환한 후 패키저로 DRM 패키징 수행&lt;/li&gt;
  &lt;li&gt;크기가 작은 경우 실시간 패키징 수행, 크기가 큰 경우 미리 패키징 수행 후 배포&lt;/li&gt;
  &lt;li&gt;패키징을 수행하면 암호화된 전자서명이 포함되고 라이선스 정보가 클리어링 하우스에 등록&lt;/li&gt;
  &lt;li&gt;콘텐츠를 사용하기 위해 사용자 인증과 콘텐츠 사용 권한 소유 여부를 확인&lt;/li&gt;
  &lt;li&gt;종량제 방식을 적용한 경우 실제 사용량을 측정하여 이용한 만큼의 요금 부과&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--디지털-저작권-관리의-흐름도&quot;&gt;- 디지털 저작권 관리의 흐름도&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;클리어링 하우스 : 저작권에 대한 사용 권한, 라이선스 발급, 결제 관리 등 수행&lt;/li&gt;
  &lt;li&gt;콘텐츠 제공자 : 콘텐츠를 제공하는 저작권자&lt;/li&gt;
  &lt;li&gt;패키저 : 콘텐츠를 메타 데이터와 함께 배포 가능한 형태로 묶어 암호화하는 프로그램&lt;/li&gt;
  &lt;li&gt;콘텐츠 분배자 : 암호화된 콘텐츠를 유통하는 곳이나 사람&lt;/li&gt;
  &lt;li&gt;콘텐츠 소비자 : 콘텐츠를 구매해서 사용하는 주체&lt;/li&gt;
  &lt;li&gt;DRM 컨트롤러 : 배포된 콘텐츠의 이용 권한을 통제하는 프로그램&lt;/li&gt;
  &lt;li&gt;보안 컨테이너 : 콘텐츠 원본을 안전하게 유통하기 위한 전자적 보안 장치&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--디지털-저작권-관리의-기술-요소&quot;&gt;- 디지털 저작권 관리의 기술 요소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;암호화(Encryption) : 콘텐츠를 암호화하고 전자 서명을 할 수 있는 기술&lt;/li&gt;
  &lt;li&gt;키 관리(Key Management) : 콘텐츠를 암호화한 키에 대한 저장 및 분배 기술&lt;/li&gt;
  &lt;li&gt;암호화 파일 생성(Packager) : 콘텐츠를 암호화된 콘텐츠로 생성하기 위한 기술&lt;/li&gt;
  &lt;li&gt;식별 기술(Identification) : 콘텐츠에 대한 식별 체계 표현 기술&lt;/li&gt;
  &lt;li&gt;저작권 표현(Right Expression) : 라이선스의 내용 표현 기술&lt;/li&gt;
  &lt;li&gt;정책 관리(Policy Management) : 라이선스 발급 및 사용에 대한 정책 표현 및 관리 기술&lt;/li&gt;
  &lt;li&gt;크랙 방지(Tamper Resistance) : 크랙에 의한 콘텐츠 사용 방지 기술&lt;/li&gt;
  &lt;li&gt;인증(Authentication) : 라이선스 발급 및 사용의 기준이 되는 사용자 인증 기술&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-소프트웨어-버전-등록--b&quot;&gt;4. 소프트웨어 버전 등록 – B&lt;/h2&gt;

&lt;h3 id=&quot;--소프트웨어-패키징의-형상-관리&quot;&gt;- 소프트웨어 패키징의 형상 관리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;형상관리(SCM)는 소프트웨어의 변경 사항을 관리하기 위해 개발된 일련의 활동&lt;/li&gt;
  &lt;li&gt;S/W 변경의 원인을 알아내고 제어, 적절히 변경되고 있는지 확인하며 해당 담당자에게 통보&lt;/li&gt;
  &lt;li&gt;S/W 개발의 전 단계에 적용되는 활동. 유지보수 단계에서도 수행&lt;/li&gt;
  &lt;li&gt;S/W 개발의 전체 비용을 줄이고, 방해 요인이 최소화되도록 보증&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--형상-관리의-중요성&quot;&gt;- 형상 관리의 중요성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;변경 사항을 체계적으로 추적하고 통제할 수 있음&lt;/li&gt;
  &lt;li&gt;무절제한 변경을 방지할 수 있음&lt;/li&gt;
  &lt;li&gt;발견된 버그나 수정 사항을 추적할 수 있음&lt;/li&gt;
  &lt;li&gt;S/W는 형태가 없어 가시성이 결핍되므로 진행 정도를 확인하기 위한 기준으로 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--형상-관리-기능&quot;&gt;- 형상 관리 기능&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;형상 식별 : 이름과 관리 번호를 부여, Tree 구조로 구분하여 수정 및 추적이 용이하도록 함&lt;/li&gt;
  &lt;li&gt;버전 제어 : 다른 버전의 형상 항목을 관리, 특정 절차와 도구를 결합&lt;/li&gt;
  &lt;li&gt;형상 통제 : 변경 요구를 검토하여 현재의 기준선이 잘 반영될 수 있도록 조정&lt;/li&gt;
  &lt;li&gt;형상 감사 : 기준선의 무결성을 평가하기 위해 공식적으로 승인하는 작업&lt;/li&gt;
  &lt;li&gt;형상 기록 : 결과를 기록, 관리하고 보고서를 작성하는 작업&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--소프트웨어의-버전-등록-관련-주요-용어&quot;&gt;- 소프트웨어의 버전 등록 관련 주요 용어&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Repository : 최신 버전의 파일들과 변경 내역에 대한 정보들이 저장&lt;/li&gt;
  &lt;li&gt;Import : 아무것도 없는 저장소에 처음으로 파일을 복사&lt;/li&gt;
  &lt;li&gt;Check-Out : 저장소에서 파일을 받아옴. 버전관리를 위한 파일들도 받아옴&lt;/li&gt;
  &lt;li&gt;Check-In : 수정을 완료한 후 저장소의 파일을 새로운 버전으로 갱신&lt;/li&gt;
  &lt;li&gt;Commit : 충돌을 알리고 diff 도구를 이용해 수정한 후 갱신을 완료&lt;/li&gt;
  &lt;li&gt;Update : 저장소에 있는 최신 버전으로 자신의 작업 공간을 동기화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--소프트웨어-버전-등록-과정&quot;&gt;- 소프트웨어 버전 등록 과정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Import -&amp;gt; Check-Out -&amp;gt; Commit -&amp;gt; Update -&amp;gt; Diff&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-소프트웨어-버전-관리-도구--a&quot;&gt;5. 소프트웨어 버전 관리 도구 – A&lt;/h2&gt;

&lt;h3 id=&quot;--공유-폴더-방식&quot;&gt;- 공유 폴더 방식&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;로컬 컴퓨터의 공유 폴더에 저장되어 관리&lt;/li&gt;
  &lt;li&gt;약속된 공유 폴더에 매일 복사&lt;/li&gt;
  &lt;li&gt;담당자는 파일을 자기 PC로 복사한 후 컴파일 하여 이상 유무를 확인&lt;/li&gt;
  &lt;li&gt;파일 오류가 확인되면, 개발자에게 수정 의뢰&lt;/li&gt;
  &lt;li&gt;이상 없으면 개발자들이 동작 여부 다시 확인&lt;/li&gt;
  &lt;li&gt;파일의 변경 사항을 DB에 기록하여 관리&lt;/li&gt;
  &lt;li&gt;SCCS, RCS, PVCS, QVCS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--클라이언트서버-방식&quot;&gt;- 클라이언트/서버 방식&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;버전 관리 자료가 중앙 시스템에 저장되어 관리되는 방식&lt;/li&gt;
  &lt;li&gt;서버의 자료를 PC로 복사하여 작업한 후 변경된 내용을 서버에 반영&lt;/li&gt;
  &lt;li&gt;모든 버전 관리는 서버에서 수행&lt;/li&gt;
  &lt;li&gt;하나의 파일을 서로 다른 개발자가 작업할 경우 경고 메시지 출력&lt;/li&gt;
  &lt;li&gt;서버에 문제가 생기면 협업 및 버전 관리 작업 중단&lt;/li&gt;
  &lt;li&gt;CVS, SVN(Subversion), CVSNT, Clear Case, CMVC, Perforce&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-subversion서브버전-svn&quot;&gt;@ Subversion(서브버전, SVN)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;CVS를 개선한 것&lt;/li&gt;
  &lt;li&gt;서버에는 최신 버전의 파일들과 변경 내역이 관리&lt;/li&gt;
  &lt;li&gt;서버의 자료를 클라이언트로 복사해와 작업한 후 변경 내용을 서버에 반영&lt;/li&gt;
  &lt;li&gt;모든 개발 작업은 trunk 디렉터리에서 수행&lt;/li&gt;
  &lt;li&gt;추가 작업은 branches 디렉터리 안에 별도의 디렉터리 만들어 작업&lt;/li&gt;
  &lt;li&gt;완료후 trunk 디렉터리와 병합&lt;/li&gt;
  &lt;li&gt;커밋 할 때마다 리비전이 1씩 증가&lt;/li&gt;
  &lt;li&gt;서버는 주로 유닉스 사용&lt;/li&gt;
  &lt;li&gt;소스가 오픈되어 있어 무료로 사용 가능&lt;/li&gt;
  &lt;li&gt;CVS의 단점이었던 파일이나 디렉터리의 이름 변경, 이동 등이 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--분산-저장소-방식&quot;&gt;- 분산 저장소 방식&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 원격 저장소와 분산된 개발자 PC의 로컬 저장소에 함께 저장되어 관리&lt;/li&gt;
  &lt;li&gt;작업한 후 변경된 내용을 로컬에서 우선 반영한 후, 이를 원격 저장소에 반영&lt;/li&gt;
  &lt;li&gt;원격 저장소에 문제가 생겨도 로컬 저장소의 자료를 이용하여 작업할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-git&quot;&gt;@ Git&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;로컬 저장소와 원격 저장소 존재&lt;/li&gt;
  &lt;li&gt;로컬 저장소는 실제 개발을 진행하는 장소로, 버전 관리가 수행&lt;/li&gt;
  &lt;li&gt;원격 저장소는 버전을 공동 관리하는 곳&lt;/li&gt;
  &lt;li&gt;버전 관리가 신속하게 처리되고, 원격 저장소나 네트워크에 문제가 있어도 작업 가능&lt;/li&gt;
  &lt;li&gt;branch를 이용하면 기본 버전 관리 틀에 영향을 주지 않으면서 다양한 형태의 기능 테스팅 가능&lt;/li&gt;
  &lt;li&gt;파일의 변화를 스냅샷으로 저장. 스냅샷은 이전 스냅샷의 포인터를 가지므로 버전의 흐름 파악 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-빌드-자동화-도구--b&quot;&gt;6. 빌드 자동화 도구 – B&lt;/h2&gt;

&lt;h3 id=&quot;--빌드-자동화-도구의-개념&quot;&gt;- 빌드 자동화 도구의 개념&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;빌드란 소스 코드 파일들을 컴파일한 후 여러 개의 모듈을 묶어 실행 파일로 만드는 과정&lt;/li&gt;
  &lt;li&gt;빌드 자동화 도구는 빌드를 포함하여 테스트 및 배포를 자동화하는 도구&lt;/li&gt;
  &lt;li&gt;애자일 환경같은 지속적인 통합 개발 환경에서 유용하게 활용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--jenkins&quot;&gt;- Jenkins&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Jenkins는 Java 기반의 오픈소스 형태, 가장 많이 사용되는 빌드 자동화 도구&lt;/li&gt;
  &lt;li&gt;서블릿 컨테이너에서 실행되는 서버 기반 도구&lt;/li&gt;
  &lt;li&gt;SVN, Git 등 대부분의 형상 관리 도구와 연동이 가능&lt;/li&gt;
  &lt;li&gt;친숙한 Web GUI 제공으로 사용이 쉬움&lt;/li&gt;
  &lt;li&gt;여러 대의 컴퓨터를 이용한 분산 빌드나 테스트가 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--gradle&quot;&gt;- Gradle&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Groovy를 기반으로 한 오픈 소스 형태의 자동화 도구. 안드로이드 앱 개발 환경에서 사용&lt;/li&gt;
  &lt;li&gt;플러그인을 설정하면 Java, C/C++, Python 등의 언어도 빌드 가능&lt;/li&gt;
  &lt;li&gt;Groovy를 사용해서 만든 DSL(Domain Specific Language)을 스크립트 언어로 사용&lt;/li&gt;
  &lt;li&gt;실행할 처리 명령을 모아 Task로 만든 후 Task 단위로 실행&lt;/li&gt;
  &lt;li&gt;Task를 재사용하거나 공유할 수 있는 빌드 캐시 기능을 지원해 빌드의 속도를 향상시킬 수 있음&lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 2과목 3장</summary></entry><entry><title type="html">[정보처리기사 필기] 2-2. 통합 구현</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp6/" rel="alternate" type="text/html" title="[정보처리기사 필기] 2-2. 통합 구현" /><published>2021-07-30T19:00:00+09:00</published><updated>2021-07-31T04:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp6</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp6/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-단위-모듈-테스트--b&quot;&gt;1. 단위 모듈 테스트 – B&lt;/h2&gt;

&lt;h3 id=&quot;--단위-모듈-테스트의-개요&quot;&gt;- 단위 모듈 테스트의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모듈이 정해진 기능을 정확히 수행하는지 검증&lt;/li&gt;
  &lt;li&gt;단위 테스르라고도 하며, 화이트박스 테스트와 블랙박스 테스트 기법 사용&lt;/li&gt;
  &lt;li&gt;모듈을 단독적으로 실행할 수 있는 환경과 테스트에 필요한 데이터 모두 준비&lt;/li&gt;
  &lt;li&gt;에러를 쉽게 발견하고 수정할 수 있음&lt;/li&gt;
  &lt;li&gt;시스템 수준의 오류는 잡아낼 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-케이스&quot;&gt;- 테스트 케이스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 요구사항을 정확하게 준수했는지를 확인하기 위함&lt;/li&gt;
  &lt;li&gt;테스트 항목에 대한 명세서로, 명세 기반 테스트의 설계 산출물에 해당&lt;/li&gt;
  &lt;li&gt;직관적인 테스트는 검증이 누락되거나 불필요한 반복으로 인력과 시간을 낭비 할 수 있음&lt;/li&gt;
  &lt;li&gt;ISO/IEC/IEEE 29119-3 표준에 따른 테스트 케이스 구성 요소
    &lt;ul&gt;
      &lt;li&gt;식별자&lt;/li&gt;
      &lt;li&gt;테스트 항목&lt;/li&gt;
      &lt;li&gt;입력 명세&lt;/li&gt;
      &lt;li&gt;출력 명세&lt;/li&gt;
      &lt;li&gt;환경 설정&lt;/li&gt;
      &lt;li&gt;특수 절차 요구&lt;/li&gt;
      &lt;li&gt;의존성 기술&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--테스트-프로세스&quot;&gt;- 테스트 프로세스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;게획 및 제어 -&amp;gt; 분석 밀 설계 -&amp;gt; 구현 및 실현 -&amp;gt; 평가 -&amp;gt; 완료&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-개발-지원-도구--b&quot;&gt;2. 개발 지원 도구 – B&lt;/h2&gt;

&lt;h3 id=&quot;--통합-개발-환경ide-integrated-development-environment&quot;&gt;- 통합 개발 환경(IDE; Integrated Development Environment)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;편집기, 컴파일러, 디버거 등의 다양한 툴을 하나의 인터페이스로 통합하여 제공&lt;/li&gt;
  &lt;li&gt;통합 개발 환경을 제공하는 S/W&lt;/li&gt;
  &lt;li&gt;코드의 자동 생성 및 컴파일 가능, 추가 기능을 위한 도구를 추가할 수 있음&lt;/li&gt;
  &lt;li&gt;오류가 발생할 부분을 시각화하므로 수정이 용이&lt;/li&gt;
  &lt;li&gt;다양한 서비스와 연동하여 개발에 편의를 제공하고 필요한 정보를 공유&lt;/li&gt;
  &lt;li&gt;이클립스, 비주얼 스튜디오, 엑스 코드, 안드로이드 스튜디오, IDEA 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--빌드-도구&quot;&gt;- 빌드 도구&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;빌드는 소스 코드 파일들을 실행할 수 있는 제품 S/W로 변환하는 과정 또는 결과물&lt;/li&gt;
  &lt;li&gt;전처리, 컴파일 등의 작업들을 수행하는 S/W&lt;/li&gt;
  &lt;li&gt;Ant
    &lt;ul&gt;
      &lt;li&gt;자바 프로젝트의 공식 빌드 도구&lt;/li&gt;
      &lt;li&gt;XML 기반의 빌드 스크립트, 자유도와 유연성이 높음&lt;/li&gt;
      &lt;li&gt;개발자가 모든 것을 정의, 스크립트 재사용이 어려움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Maven
    &lt;ul&gt;
      &lt;li&gt;Ant의 대안으로 개발됨&lt;/li&gt;
      &lt;li&gt;규칙이나 표준이 존재하여 예외 사항만 기록, 컴파일과 빌드를 동시에 수행&lt;/li&gt;
      &lt;li&gt;의존성을 설정하여 라이브러리를 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Gradle
    &lt;ul&gt;
      &lt;li&gt;Ant와 Mavn을 보완하여 개발&lt;/li&gt;
      &lt;li&gt;안드로이드 스튜디오의 공식 빌드 도구&lt;/li&gt;
      &lt;li&gt;의존성을 활용하여 Groovy 기반의 빌드 스크립트 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--기타-협업-도구&quot;&gt;- 기타 협업 도구&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;서로 다른 작업 환경에서 원활히 프로젝트를 수행할 수 있도록 도와주는 도구&lt;/li&gt;
  &lt;li&gt;업무 보조 도구 포함&lt;/li&gt;
  &lt;li&gt;다양한 플랫폼에서 사용할 수 있도록 제공&lt;/li&gt;
  &lt;li&gt;익숙하지 않거나 이용할 의지가 없으면 오히려 협업의 방해 요소가 될 수 있음&lt;/li&gt;
  &lt;li&gt;협업 도구 종류
    &lt;ul&gt;
      &lt;li&gt;일정 관리 : Google Calendar, Wunderlist, Trello, Jira, Flow&lt;/li&gt;
      &lt;li&gt;정보 공유 및 커뮤니케이션 : Slack, Jandi, Taskworld&lt;/li&gt;
      &lt;li&gt;디자인 : Sketch, Zeplin&lt;/li&gt;
      &lt;li&gt;기타 : Evernote(아이디어 공유), Swagger(API 문서화로 협업도움), Github&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 2과목 2장</summary></entry><entry><title type="html">[정보처리기사 필기] 2-1. 데이터 입출력 구현</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp5/" rel="alternate" type="text/html" title="[정보처리기사 필기] 2-1. 데이터 입출력 구현" /><published>2021-07-30T04:00:05+09:00</published><updated>2021-07-30T13:00:05+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp5</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp5/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-자료구조--a&quot;&gt;1. 자료구조 – A&lt;/h2&gt;

&lt;h3 id=&quot;--자료-구조의-정의&quot;&gt;- 자료 구조의 정의&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자료의 표현과 그것과 관련된 연산&lt;/li&gt;
  &lt;li&gt;자료들을 조직하고 구조화하는 것&lt;/li&gt;
  &lt;li&gt;필요한 모든 연산들을 처리할 수 있음&lt;/li&gt;
  &lt;li&gt;프로그램 실행시간이 달라짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--자료-구조의-분류&quot;&gt;- 자료 구조의 분류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;선형 구조
    &lt;ul&gt;
      &lt;li&gt;배열&lt;/li&gt;
      &lt;li&gt;선형 리스트
        &lt;ul&gt;
          &lt;li&gt;연속 리스트&lt;/li&gt;
          &lt;li&gt;연결 리스트&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;스택&lt;/li&gt;
      &lt;li&gt;큐&lt;/li&gt;
      &lt;li&gt;데크&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비선형 구조
    &lt;ul&gt;
      &lt;li&gt;트리&lt;/li&gt;
      &lt;li&gt;그래프&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--배열array&quot;&gt;- 배열(Array)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;동일한 자료형의 데이터들이 같은 크기로 나열되어 순서를 갖고 있는 집합&lt;/li&gt;
  &lt;li&gt;정적인 자료구조&lt;/li&gt;
  &lt;li&gt;기억장소 추가가 어려움&lt;/li&gt;
  &lt;li&gt;데이터 삭제 시 데이터가 저장되어 있던 기억장소가 빈 공간으로 남아있어 메모리 낭비 발생&lt;/li&gt;
  &lt;li&gt;첨자를 이용하여 데이터에 접근&lt;/li&gt;
  &lt;li&gt;반복적인 데이터 처리 작업에 적합한 구조&lt;/li&gt;
  &lt;li&gt;동일한 이름의 변수를 사용하여 처리가 간편&lt;/li&gt;
  &lt;li&gt;첨자의 개수에 따라 n차원 배열이라고 부름&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--선형-리스트linear-list&quot;&gt;- 선형 리스트(Linear List)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;일정한 순서에 의해 나열된 자료 구조&lt;/li&gt;
  &lt;li&gt;배열을 이용하는 연속 리스트, 포인터를 이용하는 연결 리스트로 구분&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-연속-리스트contiguous-list&quot;&gt;@ 연속 리스트(Contiguous List)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;연속되는 기억장소에 저장되는 자료 구조&lt;/li&gt;
  &lt;li&gt;기억장소 이용 효율은 밀도가 1로서 가장 좋음&lt;/li&gt;
  &lt;li&gt;데이터 삽입, 삭제 시 자료의 이동이 필요&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-연결-리스트linked-list&quot;&gt;@ 연결 리스트(Linked List)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;자료들을 반드시 연속적으로 배열시키지 않고 노드의 포인터 부분을 이용해서 서로 연결&lt;/li&gt;
  &lt;li&gt;노드의 삽입, 삭제 작업이 용이&lt;/li&gt;
  &lt;li&gt;기억공간이 연속적으로 놓여있지 않아도 저장 가능&lt;/li&gt;
  &lt;li&gt;순차 리스트에 비해 기억 공간의 이용 효율이 좋지 않음&lt;/li&gt;
  &lt;li&gt;포인터를 찾는 시간이 필요해 접근 속도가 느림&lt;/li&gt;
  &lt;li&gt;중간 노드 연결이 끊어지면 그 다음 노드를 찾기 힘듬&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--스택stack&quot;&gt;- 스택(Stack)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;리스트의 한쪽 끝으로만 자료의 삽입, 삭제가 이루어짐&lt;/li&gt;
  &lt;li&gt;후입선출(LIFO)&lt;/li&gt;
  &lt;li&gt;기억공간이 꽉 차있는 상태에서 삽입되면 Overflow 발생&lt;/li&gt;
  &lt;li&gt;기억공간이 비어있는 상태에서 삭제하면 Underflow 발생&lt;/li&gt;
  &lt;li&gt;삽입(PUSH), 삭제(POP), 마지막 삽입 자료(Top), 밑바닥(Bottom)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--큐queue&quot;&gt;- 큐(Queue)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;리스트의 한쪽에서는 삽입, 다른 한쪽에서는 삭제가 이루어짐&lt;/li&gt;
  &lt;li&gt;선입선출(FIFO)&lt;/li&gt;
  &lt;li&gt;시작과 끝을 표시하는 두 개의 포인터가 있음&lt;/li&gt;
  &lt;li&gt;프런트(F, Front) 포인터 : 가장 먼저 삽입된 자료의 기억공간을 가리킴. 삭제 작업&lt;/li&gt;
  &lt;li&gt;리어(R, Rear) 포인터 : 가장 마지막에 삽입된 자료의 기억공간을 가리킴. 삽입작업&lt;/li&gt;
  &lt;li&gt;운영체제의 작업 스케줄링에 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--트리tree&quot;&gt;- 트리(Tree)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정점(Node)과 선분(Branch)을 이용하여 사이클을 이루지 않도록 구성한 그래프의 형태&lt;/li&gt;
  &lt;li&gt;하나의 기억공간을 노드(Node), 노드와 노드를 연결하는 선을 링크(Link)&lt;/li&gt;
  &lt;li&gt;가족의 계보, 조직도 등을 표현하기 적합&lt;/li&gt;
  &lt;li&gt;노드 : 자료 항목과 다른 항목에 대한 가지를 합친 것&lt;/li&gt;
  &lt;li&gt;근 노드(Root Node) : 트리의 맨 위에 있는 노드&lt;/li&gt;
  &lt;li&gt;차수(Degree) : 각 노드에서 뻗어 나온 가지의 수&lt;/li&gt;
  &lt;li&gt;단말 노드(Terminal Node) = 잎 노드(Leaf Node) : 자식이 하나도 없는 노드&lt;/li&gt;
  &lt;li&gt;자식 노드(Son Node) : 어떤 노드에 연결된 다음 레벨의 노드들&lt;/li&gt;
  &lt;li&gt;부모 노드(Parent Node) : 어떤 노드에 연결된 이전 레벨의 노드들&lt;/li&gt;
  &lt;li&gt;형제 노드(Brother Node, Sibling) : 동일한 부모를 갖는 노드들&lt;/li&gt;
  &lt;li&gt;트리의 차수 : 노드들의 차수 중에서 가장 많은 수&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-데이터저장소--데이터베이스--dbms--a&quot;&gt;2. 데이터저장소 / 데이터베이스 / DBMS – A&lt;/h2&gt;

&lt;h3 id=&quot;--데이터저장소&quot;&gt;- 데이터저장소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터들을 논리적인 구조로 조직화하거나, 물리적인 공간에 구축한 것&lt;/li&gt;
  &lt;li&gt;논리 데이터 저장소 : 데이터 간 연관성, 제약조건을 식별하여 논리적인 구조로 조직화&lt;/li&gt;
  &lt;li&gt;물리 데이터 저장소 : 물리적 특성을 고려하여 하드웨어적인 저장장치에 저장&lt;/li&gt;
  &lt;li&gt;데이터베이스를 구축하는 과정과 동일&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터베이스&quot;&gt;- 데이터베이스&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;상호 관련된 데이터들의 모임&lt;/li&gt;
  &lt;li&gt;통합된 데이터(Integrated Data) : 중복을 배제한 데이터의 모임&lt;/li&gt;
  &lt;li&gt;저장된 데이터(Stored Data) : 컴퓨터가 접근할 수 있는 저장 매체에 저장된 자료&lt;/li&gt;
  &lt;li&gt;운영 데이터(Operational Data) : 조직의 고유한 업무를 수행하는 데 없어서는 안 될 자료&lt;/li&gt;
  &lt;li&gt;공용 데이터(Shared Data) : 공동으로 소유하고 유지하는 자료&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--dbmsdatabase-management-system&quot;&gt;- DBMS(DataBase Management System)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 요구에 따라 정보를 생성해주고, 데이터베이스를 관리해 주는 S/W&lt;/li&gt;
  &lt;li&gt;데이터의 종속성과 중복성의 문제를 해결&lt;/li&gt;
  &lt;li&gt;모든 응용 프로그램들이 DB를 공용할 수 있도록 관리&lt;/li&gt;
  &lt;li&gt;DB의 구성, 접근 방법, 유지관리에 대한 모든 책임을 짐&lt;/li&gt;
  &lt;li&gt;DBMS의 필수 기능
    &lt;ul&gt;
      &lt;li&gt;정의 기능 : 데이터 Type과 구조에 대한 정의, 이용 방식, 제약 조건 등을 명시&lt;/li&gt;
      &lt;li&gt;조작 기능 : 검색, 갱신, 삽입, 삭제 등의 인터페이스 수단을 제공&lt;/li&gt;
      &lt;li&gt;제어 기능 : 데이터의 무결성이 유지되도록 제어, 보안 유지, 권한 검사, 병행 제어&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;장점
    &lt;ul&gt;
      &lt;li&gt;데이터의 논리적, 물리적 독립성 보장&lt;/li&gt;
      &lt;li&gt;데이터의 중복을 피할 수 있어 기억 공간 절약&lt;/li&gt;
      &lt;li&gt;자료를 공동으로 이용할 수 있음&lt;/li&gt;
      &lt;li&gt;데이터의 일관성을 유지할 수 있음&lt;/li&gt;
      &lt;li&gt;데이터의 무결성을 유지할 수 있음&lt;/li&gt;
      &lt;li&gt;보안을 유지할 수 있음&lt;/li&gt;
      &lt;li&gt;데이터를 표준화 할 수 있음&lt;/li&gt;
      &lt;li&gt;통합 관리가 가능&lt;/li&gt;
      &lt;li&gt;최신의 데이터 유지 가능&lt;/li&gt;
      &lt;li&gt;실시간 처리 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단점
    &lt;ul&gt;
      &lt;li&gt;DB 전문가 부족&lt;/li&gt;
      &lt;li&gt;전산화 비용 증가&lt;/li&gt;
      &lt;li&gt;Overhead 발생&lt;/li&gt;
      &lt;li&gt;Backup과 Recovery이 어려움&lt;/li&gt;
      &lt;li&gt;시스템이 복잡&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터의-독립성&quot;&gt;- 데이터의 독립성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터의 독립성은 DBMS의 궁극적 목표&lt;/li&gt;
  &lt;li&gt;논리적 독립성 : 데이터의 논리적 구조를 변경해도 응용 프로그램은 변경되지 않음&lt;/li&gt;
  &lt;li&gt;물리적 독립성 : 응용 프로그램에는 영향을 주지 않고, 데이터의 물리적 구조만을 변경&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-데이터-입출력--b&quot;&gt;3. 데이터 입출력 – B&lt;/h2&gt;

&lt;h3 id=&quot;--데이터-입출력-개요&quot;&gt;- 데이터 입출력 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB에 데이터를 입력하거나 출력하는 작업&lt;/li&gt;
  &lt;li&gt;데이터를 조작하는 모든 행위를 의미. SQL 사용&lt;/li&gt;
  &lt;li&gt;개발 코드 내에 SQL 코드를 삽입하거나, 객체와 데이터를 연결하는 데이터 접속(Data Mapping)&lt;/li&gt;
  &lt;li&gt;논리적 기능을 수행하기 위한 작업의 단위 또는 한번에 수행되야 할 연산들을 트랜잭션이라고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--sqlstructured-query-language&quot;&gt;- SQL(Structured Query Language)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;많은 회사에서 관계형 데이터베이스(RDB)를 지원하는 언어로 채택&lt;/li&gt;
  &lt;li&gt;관계대수와 관계해석을 기초로 한 혼합 데이터&lt;/li&gt;
  &lt;li&gt;질의어지만 질의 기능뿐만 아니라, 데이터 구조 정의, 조작, 제어기능을 모두 갖춤&lt;/li&gt;
  &lt;li&gt;데이터 정의어(DDL), 데이터 조작어(DML), 데이터 제어어(DCL)로 구분
    &lt;ul&gt;
      &lt;li&gt;DDL : SCHEMA, DOMAIN, TABLE, VIEW, INDEX를 정의, 변경, 삭제&lt;/li&gt;
      &lt;li&gt;DML : 저장된 데이터를 실질적으로 처리&lt;/li&gt;
      &lt;li&gt;DCL : 보안, 무결성, 회복, 병행수행 제어 등을 정의하는데 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--데이터-접속data-mapping&quot;&gt;- 데이터 접속(Data Mapping)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로그래밍 코드와 DB의 데이터를 연결하는 것&lt;/li&gt;
  &lt;li&gt;SQL Mapping : 코드 내에 SQL을 직접 입력하여 DBMS 객체에 접속. JDBC, ODBC, MyBatis&lt;/li&gt;
  &lt;li&gt;ORM(Object-Relational Mapping) : 객체와 RDB의 데이터를 연결. JPA, Hibernate, Django&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--트랜잭션transaction&quot;&gt;- 트랜잭션(Transaction)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB 상태를 변환시키는 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 수행돼야 할 연산&lt;/li&gt;
  &lt;li&gt;TCL : 트랜잭션을 제어하기 위한 명령어. COMMIT, ROLLBACK, SAVEPOINT
    &lt;ul&gt;
      &lt;li&gt;COMMIT : 트랜잭션이 수행한 변경 내용을 DB에 저장&lt;/li&gt;
      &lt;li&gt;ROLLBACK : 모든 변경 작업을 취소하고 이전 상태로 되돌림&lt;/li&gt;
      &lt;li&gt;SAVEPOINT(=CHECKPOINT) : ROLLBACK 할 저장점을 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-절차형-sql--b&quot;&gt;4. 절차형 SQL – B&lt;/h2&gt;

&lt;h3 id=&quot;--절차형-sql-개요&quot;&gt;- 절차형 SQL 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로그래밍 언어와 같이 연속적인 실행이나 분기, 반복 등의 제어가 가능한 SQL&lt;/li&gt;
  &lt;li&gt;프로그래밍 언어에 비해 효율은 떨어지지만, 연속적인 작업들을 처리하는데 적합&lt;/li&gt;
  &lt;li&gt;다양한 기능을 수행하는 저장 모듈 생성할 수 있음&lt;/li&gt;
  &lt;li&gt;DBMS 엔진에서 직접 실행돼 입출력 패킷이 적은 편&lt;/li&gt;
  &lt;li&gt;BEGIN ~ END 형식의 블록 구조로 되어 있어 기능별 모듈화 가능&lt;/li&gt;
  &lt;li&gt;프로시저 : 트랜잭션 언어, 호출을 통해 실행되어 미리 저장해 놓은 SQL 작업 수행&lt;/li&gt;
  &lt;li&gt;트리거 : 이벤트가 발생할 때마다 관련 작업이 자동으로 수행&lt;/li&gt;
  &lt;li&gt;사용자 정의 함수 : 예약어 RETURN을 사용하여 처리 결과를 단일값으로 반환&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--절차형-sql의-테스트와-디버깅&quot;&gt;- 절차형 SQL의 테스트와 디버깅&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;디버깅을 통해 기능의 적합성 여부를 검증, 실행을 통해 결과를 테스트&lt;/li&gt;
  &lt;li&gt;테스트 전에 생성을 통해 구문 오류나 참조 오류의 존재 여부 확인&lt;/li&gt;
  &lt;li&gt;SHOW  명령어를 통해 내용을 확인하고 문제를 수정&lt;/li&gt;
  &lt;li&gt;디버깅을 통해 로직을 검증하고, 결과를 통해 최종적으로 확인&lt;/li&gt;
  &lt;li&gt;DB에 변화를 줄 수 있는 삽입 등의 SQL 문을 주석으로 처리하고, 출력문을 이용해 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--쿼리-성능-최적화&quot;&gt;- 쿼리 성능 최적화&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 입출력 애플리케이션의 성능 향상을 위해 SQL 코드를 최적화&lt;/li&gt;
  &lt;li&gt;성능 측정 도구인 APM을 사용하여 최적화 할 쿼리 선정&lt;/li&gt;
  &lt;li&gt;옵티마이저가 수립한 실행 계획을 검토하고 SQL 코드와 인덱스 재구성&lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 2과목 1장</summary></entry><entry><title type="html">[CSS] CSS 박스모델</title><link href="https://leewonwoo1.github.io/css/frontend-css-properties-boxmodel/" rel="alternate" type="text/html" title="[CSS] CSS 박스모델" /><published>2021-07-30T04:00:00+09:00</published><updated>2021-07-30T13:00:00+09:00</updated><id>https://leewonwoo1.github.io/css/frontend-css-properties-boxmodel</id><content type="html" xml:base="https://leewonwoo1.github.io/css/frontend-css-properties-boxmodel/"></content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="CSS" /><category term="CSS" /><category term="Web" /><summary type="html">CSS 속성인 박스모델</summary></entry><entry><title type="html">[CSS] CSS 개요</title><link href="https://leewonwoo1.github.io/css/frontend-css-basic/" rel="alternate" type="text/html" title="[CSS] CSS 개요" /><published>2021-07-30T03:30:00+09:00</published><updated>2021-07-30T12:30:00+09:00</updated><id>https://leewonwoo1.github.io/css/frontend-css-basic</id><content type="html" xml:base="https://leewonwoo1.github.io/css/frontend-css-basic/">&lt;h2 id=&quot;css-기본-문법&quot;&gt;CSS 기본 문법&lt;/h2&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 주석 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;선택자&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;속성&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;속성&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;css-선언-방식&quot;&gt;CSS 선언 방식&lt;/h2&gt;

&lt;h3 id=&quot;--내장-방식&quot;&gt;- 내장 방식&lt;/h3&gt;

&lt;p class=&quot;notice--info&quot;&gt;style 태그의 내용으로 스타일 작성&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--인라인-방식&quot;&gt;- 인라인 방식&lt;/h3&gt;

&lt;p class=&quot;notice--info&quot;&gt;요쇼의 style 속성에 직접 스타일 작성&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;color: red; margin: 10px;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--링크-방식&quot;&gt;- 링크 방식&lt;/h3&gt;

&lt;p class=&quot;notice--info&quot;&gt;링크 태그로 외부 CSS 파일을 가져와서 연결&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* main.css */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--import-방식&quot;&gt;- @import 방식&lt;/h3&gt;

&lt;p class=&quot;notice--info&quot;&gt;CSS의 @import 규칙으로 CSS문서 안에서 또 다른 CSS문서를 가져와 연결&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* main.css */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(&quot;./sub.css&quot;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* sub.css */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.sub&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;css-선택자&quot;&gt;CSS 선택자&lt;/h2&gt;

&lt;h3 id=&quot;--기본&quot;&gt;- 기본&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 전체 선택자 : 모든 요소 선택 */&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* 태그 선택자 : 태그 이름의 요소 선택 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* 클래스 선택자 : class 속성 값의 요소 선택  */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.cat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* 아이디 선택자 : id 속성 값의 요소 선택 */&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;#cat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--복합&quot;&gt;- 복합&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 일치 선택자 : 선택자를 동시에 만족하는 요소 선택 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.cat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* 자식 선택자 : 자식 요소 선택 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.cat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* 하위(후손) 선택자 : 하위 요소 선택. 띄어쓰기가 선택자의 기호 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.cat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* 인접 형제 선택자 : 다음 형제 요소 하나를 선택 */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* 일반 형제 선택자 : 다음 형제 요소 모두를 선택 */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--가상-클래스&quot;&gt;- 가상 클래스&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* hover : 마우스 커서가 올라가 있는 동안 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* active : 마우스를 클릭하고 있는 동안 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:active&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* focus : 포커스되면 선택 */&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* focus가 될 수 있는 요소는 HTML 대화형 콘텐츠가 해당 */&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* input, a, button, label, select 등 여러 요소 */&lt;/span&gt; 
&lt;span class=&quot;c&quot;&gt;/* HTML 대화형 콘텐츠 요소가 아니더라도, tabindex 속성을 사용한 요소도 focus가 될 수 있음 */&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:focus&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* first-child : 형제 요소중 첫째라면 선택*/&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.animals&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* last-child : 형제 요소중 막내라면 선택 */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.animals&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:last-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* nth-child : 형제 요소중 n째라면 선택 */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.animals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.animals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.animals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:nth-child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* not : 아닌 요소 선택 */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.animals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:not&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--가상-요소&quot;&gt;- 가상 요소&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* before : 내부 앞에 내용을 삽입 */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.cat&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;앞&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* after 내부 뒤에 내용을 삽입 */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.cat&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;뒤&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--속성&quot;&gt;- 속성&lt;/h3&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 속성 : 해당 속성을 포함한 요소 선택 */&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* 속성-값 : 해당 속성을 포함하고 값이 x인 요소 선택 */&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;스타일-상속&quot;&gt;스타일 상속&lt;/h2&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.animals&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ecosystem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;생태계
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;animals&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;동물
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cat&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;고양이&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dog&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;강아지&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tiger&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;호랑이&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;plant&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;식물&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;ecosystem&quot;&gt;생태계
  &lt;div style=&quot;color: red;&quot; class=&quot;animals&quot;&gt;동물
    &lt;div style=&quot;color: red;&quot; class=&quot;cat&quot;&gt;고양이&lt;/div&gt;
    &lt;div style=&quot;color: red;&quot; class=&quot;dog&quot;&gt;강아지&lt;/div&gt;
    &lt;div cstyle=&quot;color: red;&quot; lass=&quot;tiger&quot;&gt;호랑이&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;plant&quot;&gt;식물&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--상속되는-css-속성들&quot;&gt;- 상속되는 CSS 속성들&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;모두 글자/문자 관련 속성들&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;font-style&lt;/li&gt;
  &lt;li&gt;font-weight&lt;/li&gt;
  &lt;li&gt;font-size&lt;/li&gt;
  &lt;li&gt;line-height&lt;/li&gt;
  &lt;li&gt;font-family&lt;/li&gt;
  &lt;li&gt;color&lt;/li&gt;
  &lt;li&gt;text-align&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--강제-상속&quot;&gt;- 강제 상속&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;값에 &lt;em&gt;inherit&lt;/em&gt; 넣어서 명시하면 상속됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;선택자-우선순위&quot;&gt;선택자 우선순위&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;같은 요소가 여러 선언의 대상이 된 경우, 어떤 선언의 CSS속성을 우선 적용할지 결정하는 방법&lt;/li&gt;
  &lt;li&gt;점수가 높은 선언 우선&lt;/li&gt;
  &lt;li&gt;점수가 같으면 마지막에 해석된 선언이 우선&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 전체 선택자 : 0점 */&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;orange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;yellow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 태그 선택자 : 1점 */&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.cat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* Class 선택자 : 10점 */&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;#dog&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* ID 선택자 : 100점 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;color: darkblue;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hi&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 인라인 선언 : 1000점 --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;purple&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* !important : 999999점 */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="CSS" /><category term="CSS" /><category term="Web" /><summary type="html">CSS 기본 문법부터 선택자 우선순위까지</summary></entry><entry><title type="html">[HTML] HTML 구조 및 태그</title><link href="https://leewonwoo1.github.io/html/frontend-html-structure/" rel="alternate" type="text/html" title="[HTML] HTML 구조 및 태그" /><published>2021-07-30T01:30:00+09:00</published><updated>2021-07-30T10:30:00+09:00</updated><id>https://leewonwoo1.github.io/html/frontend-html-structure</id><content type="html" xml:base="https://leewonwoo1.github.io/html/frontend-html-structure/">&lt;h2 id=&quot;html-구조&quot;&gt;HTML 구조&lt;/h2&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 문서의 HTML 버전을 지정 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 문서의 전체 범위 --&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 문서의 정보를 나타내는 범위 --&amp;gt;&lt;/span&gt;
             &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 웹 페이지의 보이지 않는 정보를 작성하는 범위 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 문서의 구조를 나타내는 범위 --&amp;gt;&lt;/span&gt;
             &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 웹 페이지의 보여지는 구조를 작성하는 범위 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;head-태그-내부&quot;&gt;Head 태그 내부&lt;/h2&gt;

&lt;h3 id=&quot;--meta-태그&quot;&gt;- meta 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 문자 인코딩 방식 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=xxxx...&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 정보의 종류     정보의 값 --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;meta /&amp;gt;는 HTML 문서의 제작자, 내용, 키워드 등의 정보를 검색엔진이나 브라우저에 제공
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--title-태그&quot;&gt;- title 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Google&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- HTML 문서의 제목을 정의. 웹 브라우저 탭에 표시됨--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--link-태그&quot;&gt;- link 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 관계              경로 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./main.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;htrf=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./favicon.png&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;link /&amp;gt;는 외부 문서를 가져와 연결할 때 사용. 대부분 CSS 파일
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--style-태그&quot;&gt;- style 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- CSS를 HTML 문서 안에서 작성하는 경우에 사용 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--script-태그&quot;&gt;- script 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./main.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- JS파일 가져오는 경우--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- defer : HTML 구조가 준비된 후에 JS를 해석 --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- JS를 HTML 문서 안에서 작성하는 경우 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello World!!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;body-태그-내부&quot;&gt;Body 태그 내부&lt;/h2&gt;

&lt;h3 id=&quot;--div-태그&quot;&gt;- div 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Block, 특별한 의미가 없는 구분을 위한 요소 --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--h-태그&quot;&gt;- h 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;제목1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Block, 제목을 의미하는 요소 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;제목2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 숫자가 작을수록 더 중요한 제목--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h6&amp;gt;&lt;/span&gt;제목6&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h6&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--p-태그&quot;&gt;- p 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;가나 다라마&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Block, 문장을 의미하는 요소 --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--img-태그&quot;&gt;- img 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 경로              대체 텍스트 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;img/xxx.png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xxx&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Inline, 이미지 삽입 요소--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--ul-li-태그&quot;&gt;- ul, li 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Block, 순서가 필요 없는 목록의 집합--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;강아지&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;고양이&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 목록 내 각 항목 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;돼지&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--a-태그&quot;&gt;- a 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Inline, 다른/같은 페이지로 이동하는 하이퍼링크 지정하는 요소 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.google.com&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Google&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- URL                       URL의 표시(브라우저 탭) 위치 --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--span-태그&quot;&gt;- span 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;가나다&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Inline, 특별한 의미가 없는 구분을 위한 요소--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--br-태그&quot;&gt;- br 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;가나다라&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;마바사아&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Inline, 줄바꿈 요소--&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;가나다라
마바사아
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--input-태그&quot;&gt;- input 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--Inline-Block, 데이터를 입력하는 요소--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;xxx&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yyy&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--  타입         입력된 값     힌트            비활성화 --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--label-태그&quot;&gt;- label 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!--Inline, 라벨 가능 요소(input)의 제목--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; Dog
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;checked&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; Cat
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt; 

&lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- animals 그룹에서 1개만 입력 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;animals&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; Dog
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;radio&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;animals&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; Cat
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;--table-tr-td-태그&quot;&gt;- table, tr, td 태그&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Table, 표 요소, 행과 열의 집합 --&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Table, 행을 지정하는 요소 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;A&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;B&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Table, 열을 지정하는 요소 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;C&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&lt;/span&gt;D&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A B
C D
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; TABLE 요소보다 Grid같은 CSS 기능으로 레이아웃을 작업해야 함&lt;/p&gt;

&lt;h2 id=&quot;html-전역-속성&quot;&gt;HTML 전역 속성&lt;/h2&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;태그&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;설명&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/태그&amp;gt;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 요소의 정보나 설명을 지정 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;태그&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;스타일&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/태그&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 요소에 적용할 스타일 지정 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;태그&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;이름&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/태그&amp;gt;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 요소를 지칭하는 중복 가능한 이름 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;태그&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;이름&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/태그&amp;gt;&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 요소를 지칭하는 고유한 이름 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;태그&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-이름=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;데이터&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/태그&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 요소에 데이터를 지정 --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="HTML" /><category term="HTML" /><category term="Web" /><summary type="html">HTML 요소의 구조 및 태그를 학습</summary></entry><entry><title type="html">[정보처리기사 필기] 1-4. 인터페이스 설계</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp4/" rel="alternate" type="text/html" title="[정보처리기사 필기] 1-4. 인터페이스 설계" /><published>2021-07-30T01:00:00+09:00</published><updated>2021-07-30T10:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp4</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp4/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-시스템-인터페이스-요구사항-분석--b&quot;&gt;1. 시스템 인터페이스 요구사항 분석 – B&lt;/h2&gt;

&lt;h3 id=&quot;--시스템-인터페이스-요구사항-구성&quot;&gt;- 시스템 인터페이스 요구사항 구성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시스템끼리 서로 연동하여 상호작용하기 위한 접속 방법이나 규칙&lt;/li&gt;
  &lt;li&gt;명세서에는 이름, 연계 대상 시스템, 연계 범위 및 내용, 연계 방식, 송신 데이터, 주기 등 포함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--시스템-인터페이스-요구사항-분석&quot;&gt;- 시스템 인터페이스 요구사항 분석&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기능적 요구사항과 비기능적 요구사항으로 분류&lt;/li&gt;
  &lt;li&gt;요구사항 분석 기법을 적절히 이용&lt;/li&gt;
  &lt;li&gt;적절한 수준으로 세분화&lt;/li&gt;
  &lt;li&gt;누락된 요구사항이나 제한조건 추가&lt;/li&gt;
  &lt;li&gt;상대적 중요도를 평가하여 우선순위를 부여&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--시스템-인터페이스-요구사항-분석-절차&quot;&gt;- 시스템 인터페이스 요구사항 분석 절차&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;요구사항 선별 -&amp;gt; 요구사항 관련 자료 준비 -&amp;gt; 요구사항 분류 -&amp;gt; 요구사항 분석 및 명세서 구체화 -&amp;gt; 요구사항 명세서 공유&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-인터페이스-요구사항-검증--b&quot;&gt;2. 인터페이스 요구사항 검증 – B&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;요구사항 명세서에 정확하고 완전하게 기술되었는지 검토하고 베이스라인 설정&lt;/li&gt;
  &lt;li&gt;검토 계획 수립 -&amp;gt; 검토 및 오류 수정 -&amp;gt; 베이스라인 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--요구사항-검증-방법&quot;&gt;- 요구사항 검증 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;요구사항 검토
    &lt;ul&gt;
      &lt;li&gt;동료 검토 : 동료들이 결함 발견&lt;/li&gt;
      &lt;li&gt;워크스루 : 짧은 검토 회의를 통해 결함 발견&lt;/li&gt;
      &lt;li&gt;인스펙션 : 검토 전문가들이 결함 발견&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프로토타이핑&lt;/li&gt;
  &lt;li&gt;테스트 설계&lt;/li&gt;
  &lt;li&gt;CASE 도구 활용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인터페이스-요구사항-검증의-주요-항목&quot;&gt;- 인터페이스 요구사항 검증의 주요 항목&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;완전성(Completeness)&lt;/li&gt;
  &lt;li&gt;일관성(Consistency)&lt;/li&gt;
  &lt;li&gt;명확성(Unambiguity)&lt;/li&gt;
  &lt;li&gt;기능성(Functionality)&lt;/li&gt;
  &lt;li&gt;검증 가능성(Verifiability)&lt;/li&gt;
  &lt;li&gt;추적 가능성(Traceability)&lt;/li&gt;
  &lt;li&gt;변경 용이성(Easily Changeable)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-인터페이스-방법-명세화--b&quot;&gt;3. 인터페이스 방법 명세화 – B&lt;/h2&gt;

&lt;h3 id=&quot;--시스템-연계-기술&quot;&gt;- 시스템 연계 기술&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DB Link : DB Link 객체를 이용하는 방식&lt;/li&gt;
  &lt;li&gt;API/Open API : DB에서 데이터를 읽어 와 제공&lt;/li&gt;
  &lt;li&gt;연계 솔루션 : EAI 서버와 송수신 시스템에 설치되는 클라이언트 이용&lt;/li&gt;
  &lt;li&gt;Socket : 서버는 통신을 위한 소켓을 생성하여 포토 할당하여 클라이언트의 통신 요청 시 연결하여 통신&lt;/li&gt;
  &lt;li&gt;Web Service : WSDL, UDDI, SOAP 프로토콜을 이용하여 연계하는 서비스&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인터페이스-통신-유형&quot;&gt;- 인터페이스 통신 유형&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;단방향 : 요청만 하고 응답이 없는 방식&lt;/li&gt;
  &lt;li&gt;동기 : 요청하고 응답이 올때까지 대기&lt;/li&gt;
  &lt;li&gt;비동기 : 요청하고 다른 작업을 수행하다 응답이 오면 처리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인터페이스-처리-유형&quot;&gt;- 인터페이스 처리 유형&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;실시간 방식 : 요청한 내용을 바로 처리&lt;/li&gt;
  &lt;li&gt;지연 처리 방식 : 매건 단위로 처리할 경우 비용이 많이 발생할 때&lt;/li&gt;
  &lt;li&gt;배치 방식 : 대량의 데이터를 처리할 때&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-미들웨어-솔루션-명세--a&quot;&gt;4. 미들웨어 솔루션 명세 – A&lt;/h2&gt;

&lt;h3 id=&quot;--미들웨어의-개념-및-종류&quot;&gt;- 미들웨어의 개념 및 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;운영체제와 응용프로그램 사이에서 추가적인 서비스를 제공하는 소프트웨어&lt;/li&gt;
  &lt;li&gt;표준화된 인터페이스 제공하여 데이터 교환에 일관성 보장&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--dbdatabase&quot;&gt;- DB(DataBase)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;클라이언트에서 원격의 DB와 연결하기 위한 미들웨어&lt;/li&gt;
  &lt;li&gt;DB를 사용해서 시스템 구축하는 경우 2-Tier 아키텍처라고 함&lt;/li&gt;
  &lt;li&gt;ODBC, IDAPI, Glue&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--rpcremote-procedure-call&quot;&gt;- RPC(Remote Procedure Call)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;응용 프로그램의 프로시저를 사용하여 원격 프로시저를 로컬 프로시저처럼 호출하는 방식&lt;/li&gt;
  &lt;li&gt;Entera, ONC/RPC&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--mommessage-oriented-middleware&quot;&gt;- MOM(Message Oriented Middleware)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;메시지 기반의 비동기형 메시지를 전달하는 방식&lt;/li&gt;
  &lt;li&gt;온라인 업무보다 이기종 분산 데이터 시스템의 데이터 동기를 위해 사용됨&lt;/li&gt;
  &lt;li&gt;MQ, Message Q, JMS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--tp-monitortransaction-processing-monitor&quot;&gt;- TP-Monitor(Transaction Processing Monitor)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;온라인 트랜잭션 업무에서 트랜잭션을 처리 및 감시하는 미들웨어&lt;/li&gt;
  &lt;li&gt;빠른 응답 속도를 유지해야 하는 업무에 사용&lt;/li&gt;
  &lt;li&gt;tuxedo, tmax&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--orbobject-request-broker&quot;&gt;- ORB(Object Request Broker)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;객체 지향 미들웨어로 코바(CORBA) 표준 스펙을 구현&lt;/li&gt;
  &lt;li&gt;트랜잭션 처리와 모니터링 등을 추가로 구현한 제품도 있음&lt;/li&gt;
  &lt;li&gt;Orbix, CORBA&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--wasweb-application-server&quot;&gt;- WAS(Web Application Server)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;동적인 콘텐츠를 처리하기 위해 사용되는 미들웨어&lt;/li&gt;
  &lt;li&gt;웹 환경을 구현하기 위한 미들웨어&lt;/li&gt;
  &lt;li&gt;웹 서버 기능뿐만 아니라 미션-크리티컬한 기업 업무까지 JAVA, EJB 컴포넌트 기반으로 구현 가능&lt;/li&gt;
  &lt;li&gt;WebLogic, WebSphere&lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 1과목 4장</summary></entry><entry><title type="html">[정보처리기사 필기] 1-3. 애플리케이션 설계</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp3/" rel="alternate" type="text/html" title="[정보처리기사 필기] 1-3. 애플리케이션 설계" /><published>2021-07-29T23:00:00+09:00</published><updated>2021-07-30T08:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp3</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp3/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-소프트웨어-아키텍처--a&quot;&gt;1. 소프트웨어 아키텍처 – A&lt;/h2&gt;

&lt;h3 id=&quot;--소프트웨어-아키텍처의-설계&quot;&gt;- 소프트웨어 아키텍처의 설계&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;골격이 되는 기본 구조, 시스템의 구조 또는 구조체&lt;/li&gt;
  &lt;li&gt;원칙과 지침, 의사소통 도구&lt;/li&gt;
  &lt;li&gt;비기능적 요구사항의 제약 반영, 기능적 요구사항을 구현하는 방법을 찾는 과정&lt;/li&gt;
  &lt;li&gt;분할 방법, 모듈에 할당될 기능, 모듈 간의 인터페이스 등 결정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--모듈화modularity&quot;&gt;- 모듈화(Modularity)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;성능을 향상시키거나 수정 및 재사용, 유지관리 등을 위해 기능들을 모듈 단위로 나누는 것&lt;/li&gt;
  &lt;li&gt;자주 사용하는 것들을 공통 모듈로 구성하여 재사용성 향상&lt;/li&gt;
  &lt;li&gt;크기를 작게 나누면 통합 비용이 많이 듦&lt;/li&gt;
  &lt;li&gt;크기를 크게 나누면 모듈 하나의 개발 비용이 많이 듦&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--추상화abstraction&quot;&gt;- 추상화(Abstraction)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;전체적이고 포괄적인 개념을 설계한 후 차례로 세분화하여 구체화&lt;/li&gt;
  &lt;li&gt;유사한 모델을 만들어서 여러 가지 요인들을 테스트&lt;/li&gt;
  &lt;li&gt;최소의 비용으로 실제 상황에 대처, 구조 및 구성을 대략적으로 파악&lt;/li&gt;
  &lt;li&gt;과정 추상화
    &lt;ul&gt;
      &lt;li&gt;전반적인 흐름만 파악할 수 있게 설계&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 추상화
    &lt;ul&gt;
      &lt;li&gt;데이터 구조를 대표할 수 있는 표현으로 대체&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;제어 추상화
    &lt;ul&gt;
      &lt;li&gt;이벤트 발생을 대표할 수 있는 표현으로 대체&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--단계적-분해stepwise-refinement&quot;&gt;- 단계적 분해(Stepwise Refinement)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하향식 설계 전략. 상위의 중요 개념으로부터 하위의 개념으로 구체화&lt;/li&gt;
  &lt;li&gt;추상화의 반복에 의해 세분화&lt;/li&gt;
  &lt;li&gt;기능에서부터 시작해 알고리즘, 자료구조 등 상세한 내역을 뒤로 미뤄 진행&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--정보-은닉information-hiding&quot;&gt;- 정보 은닉(Information Hiding)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정보가 감추어져 다른 모듈이 접근하거나 변경하지 못하도록 하는 기법&lt;/li&gt;
  &lt;li&gt;필요한 정보만 인터페이스를 통해 주고 받음&lt;/li&gt;
  &lt;li&gt;모듈을 독립적으로 수행할 수 있음&lt;/li&gt;
  &lt;li&gt;모듈이 변경되더라도 다른 모듈에 영향을 주지 않아 수정, 시험, 유지보수 용이&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--소프트웨어-아키텍처의-품질-속성&quot;&gt;- 소프트웨어 아키텍처의 품질 속성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시스템 측면
    &lt;ul&gt;
      &lt;li&gt;성능, 보안, 가용성, 기능성, 사용성, 변경용이성, 확장성 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비즈니스 측면
    &lt;ul&gt;
      &lt;li&gt;시장 적시성, 비용과 혜택, 예상 시스템 수명 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;아키텍처 측면
    &lt;ul&gt;
      &lt;li&gt;개념적 무결성, 정확성, 완결성, 구축 가능성 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--소프트웨어-아키텍처-설계-과정&quot;&gt;- 소프트웨어 아키텍처 설계 과정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;설계 목표 설정 -&amp;gt; 시스템 타입 결정 -&amp;gt; 아키텍처 패턴 적용 -&amp;gt; 서브시스템 구체화 -&amp;gt; 검토&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-아키텍처-패턴--a&quot;&gt;2. 아키텍처 패턴 – A&lt;/h2&gt;

&lt;h3 id=&quot;--아키텍처-패턴의-개요&quot;&gt;- 아키텍처 패턴의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;아키텍처를 설계할 때 참조할 수 있는 전형적인 해결 방식&lt;/li&gt;
  &lt;li&gt;S/W 시스템의 구조를 구성하기 위한 기본적인 윤곽&lt;/li&gt;
  &lt;li&gt;서브시스템들과 그 역할이 정의, 관계와 여러 규칙, 지침 등이 포함&lt;/li&gt;
  &lt;li&gt;아키텍처 스타일 또는 표준 아키텍처라고도 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--레이어-패턴layers-pattern&quot;&gt;- 레이어 패턴(Layers pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시스템을 계층으로 구분&lt;/li&gt;
  &lt;li&gt;상위 계층은 서비스 제공자, 하위 계층은 클라이언트가 됨&lt;/li&gt;
  &lt;li&gt;마주보는 두 개의 계층 사이에서만 상호작용&lt;/li&gt;
  &lt;li&gt;변경 작업 용이&lt;/li&gt;
  &lt;li&gt;특정 계층만을 교체해 시스템을 개선하는 것이 가능&lt;/li&gt;
  &lt;li&gt;OSI 참조 모델&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--클라이언트-서버-패턴client-server-pattern&quot;&gt;- 클라이언트-서버 패턴(Client-Server pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 서버 컴포넌트와 다수의 클라이언트 컴포넌트로 구성&lt;/li&gt;
  &lt;li&gt;사용자는 클라이언트와만 의사소통&lt;/li&gt;
  &lt;li&gt;서버는 항상 대기 상태를 유지&lt;/li&gt;
  &lt;li&gt;클라이언트나 서버는 요청과 응답을 받기 위해 동기화되는 경우를 제외하고 서로 독립적&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--파이프-필터-패턴pipe-filter-pattern&quot;&gt;- 파이프-필터 패턴(Pipe-Filter Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 스트림 절차의 각 단계를 필터 컴포넌트로 캡슐화하여 파이프를 통해 데이터 전송&lt;/li&gt;
  &lt;li&gt;재사용성이 좋고, 추가가 쉬워 확장이 용이&lt;/li&gt;
  &lt;li&gt;재배치하여 다양한 파이프라인 구축 가능&lt;/li&gt;
  &lt;li&gt;데이터 변환, 버퍼링, 동기화 등에 주로 사용&lt;/li&gt;
  &lt;li&gt;Unix의 Shell&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--모델-뷰-컨트롤러-패턴model-view-controller-pattern&quot;&gt;- 모델-뷰-컨트롤러 패턴(Model-View-Controller Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;서브시스템을 3개의 부분으로 구조화&lt;/li&gt;
  &lt;li&gt;모델(Model) : 핵심 기능과 데이터를 보관&lt;/li&gt;
  &lt;li&gt;뷰(View) : 정보를 표시&lt;/li&gt;
  &lt;li&gt;컨트롤러(Controller) : 입력을 처리&lt;/li&gt;
  &lt;li&gt;별도의 컴포넌트로 분리되어 서로 영향을 받지 않고 개발 작업 수행 가능&lt;/li&gt;
  &lt;li&gt;여러 개의 뷰를 만들 수 있으므로 대화형 어플리케이션에 적합&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--마스터-슬레이브-패턴master-slave-pattern&quot;&gt;- 마스터-슬레이브 패턴(Master-Slave Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;장애 허용 시스템, 병렬 컴퓨팅 시스템&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--브로커-패턴broker-pattern&quot;&gt;- 브로커 패턴(Broker Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;분산 환경 시스템&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--피어-투-피어-패턴peer-to-peer-pattern&quot;&gt;- 피어-투-피어 패턴(Peer-To-Peer Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;클라이언트와 서버는 전형적인 멀티스레딩 방식을 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--이벤트-버스-패턴event-bus-pattern&quot;&gt;- 이벤트-버스 패턴(Event-Bus Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;소스, 리스너, 채널, 버스&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--블랙보트-패턴blackboard-pattern&quot;&gt;- 블랙보트 패턴(Blackboard Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;음성 인식, 차량 식별, 신호 해석&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--인터프리터-패턴interpreter-pattern&quot;&gt;- 인터프리터 패턴(Interpreter Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램 코드를 해석하는 컴포넌트를 설계할 때 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-객체지향object-oriented--a&quot;&gt;3. 객체지향(Object-Oriented) – A&lt;/h2&gt;

&lt;h3 id=&quot;--객체지향의-개요&quot;&gt;- 객체지향의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W를 개발할 때 객체들을 조립해서 작성할 수 있는 기법&lt;/li&gt;
  &lt;li&gt;재사용 및 확장 용이, 빠르게 개발할 수 있고 유지보수 쉬움&lt;/li&gt;
  &lt;li&gt;복잡한 구조를 단계적, 계층적으로 표현하고, 멀티미디어 데이터 및 병렬 처리 지원&lt;/li&gt;
  &lt;li&gt;사용자와 개발자가 쉽게 이해할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--객체object&quot;&gt;- 객체(Object)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터와 데이터를 처리하는 함수를 묶어 놓은 하나의 S/W 모듈&lt;/li&gt;
  &lt;li&gt;데이터
    &lt;ul&gt;
      &lt;li&gt;객체가 가지고 있는 정보. 속성이나 상태, 분류 등&lt;/li&gt;
      &lt;li&gt;속성, 상태, 변수, 상수, 자료 구조&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;함수
    &lt;ul&gt;
      &lt;li&gt;객체가 수행하는 기능&lt;/li&gt;
      &lt;li&gt;메소드, 서비스, 동작, 연산&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;객체의 특성
    &lt;ul&gt;
      &lt;li&gt;독립적으로 식별 가능한 이름&lt;/li&gt;
      &lt;li&gt;상태는 시간에 따라 변함&lt;/li&gt;
      &lt;li&gt;상호 연관성에 의한 관계 형성&lt;/li&gt;
      &lt;li&gt;행위의 특징을 나타낼 수 있음&lt;/li&gt;
      &lt;li&gt;일정한 기억장소를 가지고 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--클래스class&quot;&gt;- 클래스(Class)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;공통된 속성과 연산을 갖는 객체의 집합&lt;/li&gt;
  &lt;li&gt;객체들이 갖는 속성과 연산을 정의하고 있는 틀&lt;/li&gt;
  &lt;li&gt;각각의 객체를 인스턴스, 새로운 객체를 생성하는 것을 인스턴스화&lt;/li&gt;
  &lt;li&gt;최상위 클래스는 상위 클래스를 갖지 않는 클래스&lt;/li&gt;
  &lt;li&gt;슈퍼 클래스는 특정 클래스의 부모 클래스&lt;/li&gt;
  &lt;li&gt;서브 클래스는 특정 클래스의 자식 클래스&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--캡슐화encapsulation&quot;&gt;- 캡슐화(Encapsulation)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터와 데이터를 처리하는 함수를 하나로 묶는 것&lt;/li&gt;
  &lt;li&gt;인터페이스를 제외한 세부 내용이 은폐&lt;/li&gt;
  &lt;li&gt;외부 모듈의 변경으로 인한 파급 효과가 적음&lt;/li&gt;
  &lt;li&gt;재사용 용이&lt;/li&gt;
  &lt;li&gt;인터페이스가 단순해지고, 객체 간 결합도 낮아짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--상속inheritance&quot;&gt;- 상속(Inheritance)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;부모 클래스의 모든 속성과 연산을 자식 클래스가 물려 받는 것&lt;/li&gt;
  &lt;li&gt;자식 클래스는 속성과 연산을 다시 정의하지 않고 사용 가능&lt;/li&gt;
  &lt;li&gt;새로운 속성과 연산을 첨가하여 사용 가능&lt;/li&gt;
  &lt;li&gt;재사용을 높임&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--다형성polymorphism&quot;&gt;- 다형성(Polymorphism)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;메시지에 의해 객체가 연산을 수행할 때, 고유한 방법으로 응답할 수 있는 능력&lt;/li&gt;
  &lt;li&gt;객체들은 동일한 메소드명을 사용하며 같은 의미의 응답을 함&lt;/li&gt;
  &lt;li&gt;같은 클래스에 속한 인스턴스처럼 수행할 수 있도록 함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-모듈--a&quot;&gt;4. 모듈 – A&lt;/h2&gt;

&lt;h3 id=&quot;--모듈의-개요&quot;&gt;- 모듈의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모듈화를 통해 분리된 시스템의 각 기능. 서브루틴, 서브시스템 등과 같은 의미로 사용&lt;/li&gt;
  &lt;li&gt;단독으로 컴파일 가능, 재사용 가능&lt;/li&gt;
  &lt;li&gt;모듈의 기능적 독립성은 하나의 기능만을 수행하고 과도한 상호작용을 배재함으로써 달성&lt;/li&gt;
  &lt;li&gt;수정하더라도 다른 모듈에 거의 영향을 미치지 않으며, 오류 발생시 쉽게 발견하고 해결 가능&lt;/li&gt;
  &lt;li&gt;결합도는 약하게, 응집도는 강하게, 모듈의 크기는 작게 만들어야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--결합도coupling&quot;&gt;- 결합도(Coupling)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모듈간 상호 의존하는 정도&lt;/li&gt;
  &lt;li&gt;결합도가 약할수록 품질이 높고, 강할수록 품질이 낮음&lt;/li&gt;
  &lt;li&gt;결합도가 강하면 시스템 구현 및 유지보수 작업이 어려움&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-내용-결합도content-coupling&quot;&gt;@ 내용 결합도(Content Coupling)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;한 모듈이 다른 모듈이 내부 기능 및 그 내부 자료를 직접 참조하거나 수정&lt;/li&gt;
  &lt;li&gt;제어가 이동하는 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-공통공유-결합도common-coupling&quot;&gt;@ 공통(공유) 결합도(Common Coupling)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;공통 데이터 영역을 여러 모듈이 사용할 때의 결합도&lt;/li&gt;
  &lt;li&gt;조금의 변경이 모든 모듈에 영향을 미치므로 모듈의 독립성을 약하게 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-외부-결합도external-coupling&quot;&gt;@ 외부 결합도(External Coupling)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;선언한 데이터를 외부의 다른 모듈에서 참조할 때의 결합도&lt;/li&gt;
  &lt;li&gt;데이터의 범위를 각 모듈에서 제한할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-제어-결합도control-coupling&quot;&gt;@ 제어 결합도(Control Coupling)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;다른 모듈 내부의 논리적 흐름을 제어하기 위해 제어신호를 이용하여 통신&lt;/li&gt;
  &lt;li&gt;다른 모듈의 상세한 처리 절차를 알고 있어 이를 통제하는 경우&lt;/li&gt;
  &lt;li&gt;처리 기능이 두 모듈에 분리되어 설계된 경우&lt;/li&gt;
  &lt;li&gt;하위 모듈이 상위 모듈에게 처리 명령을 내리는 권리 전도현상 발생&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-스탬프-결합도stamp-coupling&quot;&gt;@ 스탬프 결합도(Stamp Coupling)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;배열이나 레코드 등의 자료 구조가 전달될 때의 결합도&lt;/li&gt;
  &lt;li&gt;동일한 자료 구조를 조회하는 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-자료-결합도data-coupling&quot;&gt;@ 자료 결합도(Data Coupling)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;자료 요소로만 구성될 때의 결합도&lt;/li&gt;
  &lt;li&gt;가장 바람직한 결합도&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--응집도cohesion&quot;&gt;- 응집도(Cohesion)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정보 은닉 개념을 확장한 것&lt;/li&gt;
  &lt;li&gt;모듈이 독립적인 기능으로 정의되어 있는 정도&lt;/li&gt;
  &lt;li&gt;응집도가 강할수록 품질이 높고, 약할수록 품질이 낮음&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-기능적-응집도functional-cohesion&quot;&gt;@ 기능적 응집도(Functional Cohesion)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;모든 기능 요소들이 단일 문제와 연관되어 수행될 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-순차적-응집도sequential-cohesion&quot;&gt;@ 순차적 응집도(Sequential Cohesion)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;출력 데이터를 그 다음 활동의 입력 데이터로 사용할 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-교환적-응집도communication-cohesion&quot;&gt;@ 교환적 응집도(Communication Cohesion)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;동일한 입출력을 사용하여 서로 다른 기능을 수행하는 구성요소들이 모였을 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-절차적-응집도procedural-cohesion&quot;&gt;@ 절차적 응집도(Procedural Cohesion)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;다수의 관련 기능을 가질 때 모듈 안의 구성 요소들이 그 기능을 순차적으로 수행할 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-시간적-응집도temporal-cohesion&quot;&gt;@ 시간적 응집도(Temporal Cohesion)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;특정 시간에 처리되는 몇 개의 기능을 모아 하나의 모듈로 작성할 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-논리적-응집도logical-cohesion&quot;&gt;@ 논리적 응집도(Logical Cohesion)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;유사한 성격을 갖거나 특정 형태로 분류되는 처리 요소들로 하나의 모듈이 형성되는 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-우연적-응집도coincidental-cohesion&quot;&gt;@ 우연적 응집도(Coincidental Cohesion)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;각 구성 요소들이 서로 관련 없는 요소로만 구성된 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--팬인fan-in--팬아웃fan-out&quot;&gt;- 팬인(Fan-In) / 팬아웃(Fan-Out)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;팬인은 모듈을 제어하는 모듈의 수. 팬아웃은 모듈에 의해 제어되는 모듈의 수&lt;/li&gt;
  &lt;li&gt;시스템의 복잡도를 알 수 있음&lt;/li&gt;
  &lt;li&gt;팬인이 높다는 것은 재사용 측면에서 설계가 잘 되어있으나, 단일 장애점 발생 가능&lt;/li&gt;
  &lt;li&gt;팬아웃이 높은 경우 불필요하게 다른 모듈을 호출하고 있는지 검토하고 단순화할 수 있는지 검토&lt;/li&gt;
  &lt;li&gt;시스템 복잡도를 최적화하기 위해 팬인을 높게, 팬아웃은 낮게 설계&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-코드--b&quot;&gt;5. 코드 – B&lt;/h2&gt;

&lt;h3 id=&quot;--코드의-개요&quot;&gt;- 코드의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자료의 추출을 쉽게 하기 위해 사용하는 기호&lt;/li&gt;
  &lt;li&gt;신속, 정확, 명료하게 정보 전달&lt;/li&gt;
  &lt;li&gt;일정한 규칙에 따라 작성&lt;/li&gt;
  &lt;li&gt;식별기능, 분류기능, 배열기능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--코드의-종류&quot;&gt;- 코드의 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;순차 코드
    &lt;ul&gt;
      &lt;li&gt;1, 2, 3 ..&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;블록 코드
    &lt;ul&gt;
      &lt;li&gt;1001~1100 : 총무부&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;10진 코드
    &lt;ul&gt;
      &lt;li&gt;1000 : 공학, 1100 : S/W 공학&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;그룹 분류 코드
    &lt;ul&gt;
      &lt;li&gt;1-01-001 : 본사-총무부-인사계&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;연상 코드
    &lt;ul&gt;
      &lt;li&gt;TV-40 : 40인치 TV&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;표의 숫자 코드
    &lt;ul&gt;
      &lt;li&gt;120-720-1500 : 두께x폭x길이가 120x720x1500인 강판&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;합성 코드
    &lt;ul&gt;
      &lt;li&gt;KE-711 : 대한항공 711기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--코드-부여-체계&quot;&gt;- 코드 부여 체계&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이름만으로 개체의 용도와 적용 범위를 알 수 있도록 코드를 부여하는 방식&lt;/li&gt;
  &lt;li&gt;유일한 코드 부여하여 식별 및 추출을 용이하게 함&lt;/li&gt;
  &lt;li&gt;각 단위 시스템의 고유한 코드와 개체를 나타내는 코드 등이 정의되어야 함&lt;/li&gt;
  &lt;li&gt;코드의 자릿수와 구분자, 구조 등을 상세하게 명시&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-디자인-패턴--b&quot;&gt;6. 디자인 패턴 – B&lt;/h2&gt;

&lt;h3 id=&quot;--디자인-패턴의-개요&quot;&gt;- 디자인 패턴의 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;세부적인 구현 방안을 설계할 때 참조할 수 있는 전형적인 해결 방식&lt;/li&gt;
  &lt;li&gt;재사용할 수 있는 기본형 코드들이 포함&lt;/li&gt;
  &lt;li&gt;디자인 패턴을 참고하여 적용하는 것이 더 효율적&lt;/li&gt;
  &lt;li&gt;Don’t reinvent the wheel&lt;/li&gt;
  &lt;li&gt;유사한 형태의 다른 패턴으로 변화되는 특징&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--아키텍처-패턴-vs-디자인-패턴&quot;&gt;- 아키텍처 패턴 vs 디자인 패턴&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;아키택처&lt;/th&gt;
      &lt;th&gt;디자인&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;상위수준 설계&lt;/td&gt;
      &lt;td&gt;하위수준 설계&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;전체 시스템 구조 설계&lt;/td&gt;
      &lt;td&gt;서브시스템에 속하는 컴포넌트들과 그 관계 설계&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;--생성-패턴creational-pattern&quot;&gt;- 생성 패턴(Creational Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;객체의 생성과 관련된 패턴&lt;/li&gt;
  &lt;li&gt;객체의 생성과 참조 과정을 캡슐화하여 프로그램에 유연성을 더해줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-추상-팩토리abstract-factory&quot;&gt;@ 추상 팩토리(Abstract Factory)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;인터페이스를 통해 서료 연관, 의존하는 객체들의 그룹으로 생성하여 추상적으로 표현&lt;/li&gt;
  &lt;li&gt;연관된 서브 클래스를 묶어 한 번에 교체하는 것이 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-빌더builder&quot;&gt;@ 빌더(Builder)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;작게 분리된 인스턴스를 건축 하듯이 조합하여 객체 생성&lt;/li&gt;
  &lt;li&gt;동일한 객체 생성에서도 서로 다른 결과를 만들어 낼 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-팩토리-메소드factory-method&quot;&gt;@ 팩토리 메소드(Factory Method)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;객체 생성을 서브클래스에서 처리하도록 분리하여 캡슐화&lt;/li&gt;
  &lt;li&gt;상위클래스에서는 인터페이스 정의하고 실제 생성은 서브 클래스가 담당&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-프로토타입prototype&quot;&gt;@ 프로토타입(Prototype)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;원본 객체를 복제하는 방법으로 객체를 생성&lt;/li&gt;
  &lt;li&gt;비용이 큰 경우 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-싱글톤singleton&quot;&gt;@ 싱글톤(Singleton)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;객체를 생성하면 어디서든 참조할 수 있지만, 여러 프로세스가 동시 참조 불가&lt;/li&gt;
  &lt;li&gt;클래스 내에서 인스턴스가 하나뿐임을 보장, 불필요한 메모리 낭비 최소화&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--구조-패턴structural-pattern&quot;&gt;- 구조 패턴(Structural Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;클래스나 객체들을 조합하여 더 큰 구조로 만들 수 있게 해주는 패턴&lt;/li&gt;
  &lt;li&gt;구조가 복잡한 시스템을 개발하기 쉽게 도와줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-어댑터adapter&quot;&gt;@ 어댑터(Adapter)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;인터페이스를 다른 클래스가 이용할 수 있도록 변환&lt;/li&gt;
  &lt;li&gt;인터페이스가 일치하지 않을 때 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-브리지bridge&quot;&gt;@ 브리지(Bridge)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;서로가 독립적으로 확장할 수 있도록 구성한 패턴&lt;/li&gt;
  &lt;li&gt;기능과 구현을 두 개의 별도 클래스로 구현&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-컴포지트composite&quot;&gt;@ 컴포지트(Composite)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;복합 객체와 단일 객체를 구분 없이 다루고자 할 때 사용&lt;/li&gt;
  &lt;li&gt;객체를 트리구조로 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-데코레이터decorator&quot;&gt;@ 데코레이터(Decorator)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;객체 간의 결합을 통해 능동적으로 기능들을 확장&lt;/li&gt;
  &lt;li&gt;부가적인 기능을 추가하기 위해 다른 객체들을 덧붙이는 방식&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-퍼싸드facade&quot;&gt;@ 퍼싸드(Facade)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;상위에 인터페이스를 구성함으로써 서브 클래스의 기능을 간편하게 사용할 수 있도록 함&lt;/li&gt;
  &lt;li&gt;통합 인터페이스를 제공하는 Wrapper 객체가 필요&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-플라이웨이트flyweight&quot;&gt;@ 플라이웨이트(Flyweight)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;매번 생성하는 것이 아니고 가능한 한 공유해서 사용해 메모리 절약&lt;/li&gt;
  &lt;li&gt;다수의 유사 객체를 생성하거나 조작할 때 유용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-프록시proxy&quot;&gt;@ 프록시(Proxy)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;접근이 어려운 객체와 여기에 연결하려는 객체 사이에서 인터페이스 역할&lt;/li&gt;
  &lt;li&gt;네트워크 연결, 메모리의 대용량 객체로의 접근 등에 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--행위-패턴behavioral-pattern&quot;&gt;- 행위 패턴(Behavioral Pattern)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;클래스나 객체들이 서로 상호작용하는 방법이나 책임 분배 방법을 정의&lt;/li&gt;
  &lt;li&gt;하나의 객체로 수행할 수 없는 작업을 여러 객체로 분배하면서 결합도를 최소화하도록 도움&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-책임-연쇄chain-of-responsibility&quot;&gt;@ 책임 연쇄(Chain of Responsibility)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;객체가 둘 이상 존재하여 한 객체가 처리하지 못하면 다음 객체로 넘어가는 형태&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-커맨드command&quot;&gt;@ 커맨드(Command)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;요청을 객체의 형태로 캡슐화하여 재이용하거나 취소할 수 있도록 요청에 필요한 정보를 저장&lt;/li&gt;
  &lt;li&gt;추상 클래스와 구체 클래스로 분리하여 단순화&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-인터프리터interpreter&quot;&gt;@ 인터프리터(Interpreter)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;언어에 문법 표현을 정의하는 패턴&lt;/li&gt;
  &lt;li&gt;SQL이나 통신 프로토콜과 같은 것을 개발할 때 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-반복자iterator&quot;&gt;@ 반복자(Iterator)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;접근이 잦은 객체에 대해 동일한 인터페이스를 사용하도록 하는 패턴&lt;/li&gt;
  &lt;li&gt;내부 표현 방법의 노출 없이 순차적인 접근이 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-중재자mediator&quot;&gt;@ 중재자(Mediator)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;복잡한 상호작용을 캡슐화하여 객체로 정의&lt;/li&gt;
  &lt;li&gt;객체 사이의 의존성을 줄여 결합도 감소시킴&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-메멘토memento&quot;&gt;@ 메멘토(Memento)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;객체 내부 상태를 객체화함으로써 객체를 해당 시점의 상태로 돌릴 수 있는 기능 제공&lt;/li&gt;
  &lt;li&gt;Ctrl + Z 같은 기능 개발할 때 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-옵서저observer&quot;&gt;@ 옵서저(Observer)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;객체의 상태가 변화하면 상속되어 있는 다른 객체들에게 변화된 상태를 전달하는 패턴&lt;/li&gt;
  &lt;li&gt;분산 시스템 간에 이벤트를 생성, 발행하고, 이를 수신해야 할 때 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-상태state&quot;&gt;@ 상태(State)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;동일한 동작을 다르게 처리해야 할 때 사용하는 패턴&lt;/li&gt;
  &lt;li&gt;객체 상태를 캡슐화하고 이를 참조하는 방식으로 처리&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-전략strategy&quot;&gt;@ 전략(Strategy)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;동일한 계열의 알고리즘들을 개별적으로 캡슐화하여 상호 교환할 수 있게 정의하는 패턴&lt;/li&gt;
  &lt;li&gt;원하는 알고리즘을 선택하여 사용할 수 있으며, 클라이언트에 영향 없이 알고리즘 변경 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-템플릿-메소드template-method&quot;&gt;@ 템플릿 메소드(Template Method)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;상위 클래스에서 골격을 정의하고, 하위 클래스에서 세부 처리를 구체화하는 패턴&lt;/li&gt;
  &lt;li&gt;코드의 양을 줄이고 유지보수를 용이하게 해줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;-방문자visitor&quot;&gt;@ 방문자(Visitor)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 구조에서 처리 기능을 분리하여 별도의 클래스로 구성하는 패턴&lt;/li&gt;
  &lt;li&gt;분리된 처리 기능은 각 클래스를 방문하여 수행&lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 1과목 3장</summary></entry><entry><title type="html">[정보처리기사 필기] 1-2. 화면 설계</title><link href="https://leewonwoo1.github.io/jckp/etc-jckp2/" rel="alternate" type="text/html" title="[정보처리기사 필기] 1-2. 화면 설계" /><published>2021-07-29T22:00:00+09:00</published><updated>2021-07-30T07:00:00+09:00</updated><id>https://leewonwoo1.github.io/jckp/etc-jckp2</id><content type="html" xml:base="https://leewonwoo1.github.io/jckp/etc-jckp2/">&lt;p class=&quot;notice--primary&quot;&gt;2020 시나공 정보처리기사 필기책 참고&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;주의!&lt;/strong&gt; 중요도가 낮은 항목(C)은 제외&lt;/p&gt;

&lt;h2 id=&quot;1-사용자-인터페이스--a&quot;&gt;1. 사용자 인터페이스 – A&lt;/h2&gt;

&lt;h3 id=&quot;--ui-개요&quot;&gt;- UI 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자 인터페이스(UI)는 사용자와 시스템 간의 상호작용이 원활하도록 돕는 장치나 S/W&lt;/li&gt;
  &lt;li&gt;UI의 3가지 분야
    &lt;ul&gt;
      &lt;li&gt;정보 제공을 위한 물리적 제어&lt;/li&gt;
      &lt;li&gt;콘텐츠의 상세적인 표현과 전체적인 구성&lt;/li&gt;
      &lt;li&gt;모든 사용자가 편리하고 간편하게 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-특징&quot;&gt;- UI 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;S/W 영역 중 변경이 가장 많이 발생&lt;/li&gt;
  &lt;li&gt;편리성과 가독성을 높여 작업 시간을 단축시키고 업무에 대한 이해도 높여줌&lt;/li&gt;
  &lt;li&gt;최소한의 노력으로 원하는 결과 얻을 수 있게 함&lt;/li&gt;
  &lt;li&gt;오류를 줄임&lt;/li&gt;
  &lt;li&gt;구체적인 방법 제시&lt;/li&gt;
  &lt;li&gt;매개 역할&lt;/li&gt;
  &lt;li&gt;UI를 설계하기 위해서는 S/W 아키텍처 반드시 숙지해야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-구분&quot;&gt;- UI 구분&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CLI(Command Line Interface) : 텍스트 형태&lt;/li&gt;
  &lt;li&gt;GUI(Graphical User Interface) : 그래픽 환경&lt;/li&gt;
  &lt;li&gt;NUI(Natural User Interface) : 말이나 행동으로 조작&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-기본-원칙&quot;&gt;- UI 기본 원칙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;직관성&lt;/li&gt;
  &lt;li&gt;유효성&lt;/li&gt;
  &lt;li&gt;학습성&lt;/li&gt;
  &lt;li&gt;유연성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-설계-지침&quot;&gt;- UI 설계 지침&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자 중심&lt;/li&gt;
  &lt;li&gt;일관성&lt;/li&gt;
  &lt;li&gt;단순성&lt;/li&gt;
  &lt;li&gt;결과 예측 가능&lt;/li&gt;
  &lt;li&gt;가시성&lt;/li&gt;
  &lt;li&gt;표준화&lt;/li&gt;
  &lt;li&gt;접근성&lt;/li&gt;
  &lt;li&gt;명확성&lt;/li&gt;
  &lt;li&gt;오류 발생 해결&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-ui-표준-및-지침--b&quot;&gt;2. UI 표준 및 지침 – B&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;기술의 중립성(웹 표준), 표현 보장성(웹 접근성), 기능의 호환성(웹 호환성) 고려 확인&lt;/li&gt;
  &lt;li&gt;UI 표준 : 모든 UI에 공통적으로 적용될 내용&lt;/li&gt;
  &lt;li&gt;UI 지침 : UI 개발 과정에서 꼭 지켜야 할 공통의 조건&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--한국형-웹-콘텐츠-접근성-지침kwcag&quot;&gt;- 한국형 웹 콘텐츠 접근성 지침(KWCAG)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;인식의 용이성
    &lt;ul&gt;
      &lt;li&gt;대체 텍스트&lt;/li&gt;
      &lt;li&gt;멀티미디어 대체 수단&lt;/li&gt;
      &lt;li&gt;명료성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;운용의 용이성
    &lt;ul&gt;
      &lt;li&gt;키보드 접근성&lt;/li&gt;
      &lt;li&gt;충분한 시간 제공&lt;/li&gt;
      &lt;li&gt;광과민성 발작 예방&lt;/li&gt;
      &lt;li&gt;쉬운 내비게이션&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이해의 용이성
    &lt;ul&gt;
      &lt;li&gt;가독성&lt;/li&gt;
      &lt;li&gt;예측 가능성&lt;/li&gt;
      &lt;li&gt;콘텐츠의 논리성&lt;/li&gt;
      &lt;li&gt;입력 도움&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;견고성
    &lt;ul&gt;
      &lt;li&gt;문법 준수&lt;/li&gt;
      &lt;li&gt;접근성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--전자정부-웹-표준-준수-지침&quot;&gt;- 전자정부 웹 표준 준수 지침&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;내용의 문법 준수
    &lt;ul&gt;
      &lt;li&gt;적절한 문서타입 명시&lt;/li&gt;
      &lt;li&gt;문법 준수&lt;/li&gt;
      &lt;li&gt;인코딩 방식 표기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;내용과 표현의 분리
    &lt;ul&gt;
      &lt;li&gt;마크업 언어를 사용해 웹 문서 구조화&lt;/li&gt;
      &lt;li&gt;스타일 언어는 표준 문법 준수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;동작의 기술 중립성 보장
    &lt;ul&gt;
      &lt;li&gt;스크립트의 비표준 문법 확장 배제&lt;/li&gt;
      &lt;li&gt;대체 텍스트나 정보 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;플러그인의 호환성
    &lt;ul&gt;
      &lt;li&gt;다양한 웹 브라우저에서 호환되는 것 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;콘텐츠의 보편적 표현
    &lt;ul&gt;
      &lt;li&gt;메뉴는 다양한 브라우저에서 접근할 수 있어야 함&lt;/li&gt;
      &lt;li&gt;웹 사이트를 다양한 인터페이스로 이용할 수 있어야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;운영체제에 독립적인 콘텐츠 제공
    &lt;ul&gt;
      &lt;li&gt;운영체제에 종속적이지 않은 범용적인 포맷을 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;부가 기능의 호환성 확보
    &lt;ul&gt;
      &lt;li&gt;다양한 브라우저에서 사용할 수 있어야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다양한 프로그램 제공
    &lt;ul&gt;
      &lt;li&gt;다양한 브라우저에서 사용할 수 있어야 함&lt;/li&gt;
      &lt;li&gt;윈도우, 리눅스, 맥킨토시 중 2개 이상의 운영체제를 지원해야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-ui-설계-도구--a&quot;&gt;3. UI 설계 도구 – A&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;UI의 화면 구조나 화면 배치 등을 설계할 때 사용하는 도구&lt;/li&gt;
  &lt;li&gt;기획단계에서 미리 보여주기 위한 용도&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--와이어프레임wireframe&quot;&gt;- 와이어프레임(Wireframe)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;페이지에 대한 개략적인 레아아웃이나 UI 요소 등에 대한 뼈대 설계&lt;/li&gt;
  &lt;li&gt;페이지의 영역 구분, 콘텐츠, 텍스트 배치 등을 화면 단위로 설계&lt;/li&gt;
  &lt;li&gt;레이아웃을 협의하거나 현재 진행 상태 등을 공유하기 위해 사용&lt;/li&gt;
  &lt;li&gt;툴 : 손그림, PPT, 키노트, 스케치, 일러스트, 포토샵 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--목업mockup&quot;&gt;- 목업(Mockup)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;와이어프레임보다 좀 더 실제 화면과 유사하게 만든 정적인 형태의 모형&lt;/li&gt;
  &lt;li&gt;실제로 구현되지는 않음&lt;/li&gt;
  &lt;li&gt;툴 : 파워 목업, 발사믹 목업 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--스토리보드story-board&quot;&gt;- 스토리보드(Story Board)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;와이어프레임에 콘텐츠에 대한 설명, 페이지 간 이동 흐름 등을 추가&lt;/li&gt;
  &lt;li&gt;최종적으로 참고하는 작업 지침서, 서비스 구축을 위한 모든 정보 포함&lt;/li&gt;
  &lt;li&gt;상단이나 우측에는 제목, 작성자 기입, 좌측에는 UI화면, 우측에는 Description 기입&lt;/li&gt;
  &lt;li&gt;Description은 명확하고 세부적으로 작성&lt;/li&gt;
  &lt;li&gt;툴 : PPT, 키노트, 스케치, Axure 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--프로토타입prototype&quot;&gt;- 프로토타입(Prototype)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;와이어프레임이나 스토리보드 등에 인터렉션을 적용한 동적인 형태의 모형&lt;/li&gt;
  &lt;li&gt;작업자 간 서비스 이해를 위해 작성하는 샘플&lt;/li&gt;
  &lt;li&gt;페이퍼 프로토타입과 디지털 프로토타입으로 나뉨&lt;/li&gt;
  &lt;li&gt;툴 : HTML/CSS, Axure, Flinto, 네이버 프로토나우, 카카오 오븐 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--유스케이스use-case&quot;&gt;- 유스케이스(Use Case)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자 측면에서의 요구사항&lt;/li&gt;
  &lt;li&gt;사용자의 요구사항을 파악해 초기에 기능적인 요구를 결정하고 그 결과를 문서화할 수 있음&lt;/li&gt;
  &lt;li&gt;자연어로 작성된 사용자의 요구사항을 구조적으로 표현한 것. 다이어그램 형식으로 묘사&lt;/li&gt;
  &lt;li&gt;유스케이스 다이어그램이 완성되면, 명세서 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4-ui-요구사항-확인--b&quot;&gt;4. UI 요구사항 확인 – B&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;새로 개발할 시스템에 적용할 UI 관련 요구사항을 조사해서 작성하는 단계&lt;/li&gt;
  &lt;li&gt;목표 정의 -&amp;gt; 활동사항 정의 -&amp;gt; UI 요구사항 작성 -&amp;gt; 요구사항 요소 확인 -&amp;gt; 정황 시나리오 작성 -&amp;gt; 요구사항 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-품질-요구사항--b&quot;&gt;5. 품질 요구사항 – B&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;요구사항이 얼마나 충족하는가를 나타내는 S/W 특성의 총체&lt;/li&gt;
  &lt;li&gt;품질은 사용자의 요구사항을 충족시킴으로써 확립&lt;/li&gt;
  &lt;li&gt;ISO/IEC 9126
    &lt;ul&gt;
      &lt;li&gt;품질 특성과 평가를 위한 표준 지침&lt;/li&gt;
      &lt;li&gt;품질에 대한 요구사항을 기술하거나 품질 평가 등에 사용&lt;/li&gt;
      &lt;li&gt;기능성, 신뢰성, 사용성, 효율성, 유지보수성, 이식성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;호환성과 보안성을 강화하여 ISO/IEC 25010으로 개정
    &lt;ul&gt;
      &lt;li&gt;기능적합성, 신뢰성, 사용성, 실행효율성, 유지보수성, 이식성, 호환성, 보안성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--기능성functionality&quot;&gt;- 기능성(Functionality)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 요구사항을 정확하게 만족하는 기능을 제공하는지 여부&lt;/li&gt;
  &lt;li&gt;적절성/정합성(Suitability) : 적절한 기능을 제공&lt;/li&gt;
  &lt;li&gt;정밀성/정확성(Accuracy) : 결과를 정확하게 산출&lt;/li&gt;
  &lt;li&gt;상호 운용성(Interoperability) : 서로 어울려 작업&lt;/li&gt;
  &lt;li&gt;보안성(Security) : 접근을 권한에 따라 허용하거나 차단&lt;/li&gt;
  &lt;li&gt;준수성(Compliance) : 표준, 관례 및 규정을 준수&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--신뢰성reliability&quot;&gt;- 신뢰성(Reliability)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;요구된 기능을 정확하고 일관되게 오류 없이 수행&lt;/li&gt;
  &lt;li&gt;성숙성(Maturity) : 고장을 피해감&lt;/li&gt;
  &lt;li&gt;고장 허용성(Fault Tolerance) : 고장 시 규정된 성능 수준을 유지&lt;/li&gt;
  &lt;li&gt;회복성(Recoverability) : 고장 시 다시 회복하고 데이터를 복구&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--사용성usability&quot;&gt;- 사용성(Usability)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자가 정확하게 이해하고 사용하며, 다시 사용하고 싶은 정도&lt;/li&gt;
  &lt;li&gt;이해성(Understandability) : 사용자가 이해할 수 있는 능력&lt;/li&gt;
  &lt;li&gt;학습성(Learnability) : S/W를 학습할 수 있도록 하는 능력&lt;/li&gt;
  &lt;li&gt;운용성(Operability) : 운용하고 제어할 수 있도록 하는 능력&lt;/li&gt;
  &lt;li&gt;친밀성(Attractiveness) : 다시 사용하고 싶어 하도록 하는 능력&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--효율성efficiency&quot;&gt;- 효율성(Efficiency)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;할당된 시간 동안 한정된 자원으로 얼마나 빨리 처리할 수 있는지 정도&lt;/li&gt;
  &lt;li&gt;시간 효율성(Time Behaviour) : 적절한 반응 시간 및 처리시간, 처리율 제공&lt;/li&gt;
  &lt;li&gt;자원 효율성(Resource Behaviour) : 적절한 자원의 양과 종류를 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--유지-보수성maintainability&quot;&gt;- 유지 보수성(Maintainability)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;환경의 변화에서 S/W를 개선하거나 확장할 수 있는 정도&lt;/li&gt;
  &lt;li&gt;분석성(Analyzability) : 수정될 부분의 식별을 가능하게 하는 능력&lt;/li&gt;
  &lt;li&gt;변경성(Changeability) : 변화로 인한 수정 등을 쉽게 구현&lt;/li&gt;
  &lt;li&gt;안정성(Stability) : 변경으로 인한 예상치 못한 결과를 최소화하는 능력&lt;/li&gt;
  &lt;li&gt;시험성(Testability) : 변경이 검증될 수 있는 능력&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--이식성portability&quot;&gt;- 이식성(Portability)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다른 환경에서도 얼마나 쉽게 적용할 수 있는지 정도&lt;/li&gt;
  &lt;li&gt;적용성(Adaptability) : 다른 환경으로 변경될 수 있는 능력&lt;/li&gt;
  &lt;li&gt;설치성(Installability) : 임의의 환경에 설치할 수 있는 능력&lt;/li&gt;
  &lt;li&gt;대체성(Replaceability) : 다른 S/W를 대신하여 사용될 수 있는 능력&lt;/li&gt;
  &lt;li&gt;공존성(Co-existence) : 다른 S/W와 공존할 수 있는 능력&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-ui-프로토타입-제작-및-검토--a&quot;&gt;6. UI 프로토타입 제작 및 검토 – A&lt;/h2&gt;

&lt;h3 id=&quot;--ui-프로토타입-개요&quot;&gt;- UI 프로토타입 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로토타입은 요구사항을 기반으로 실제 동작하는 것처럼 만든 동적 형태의 모형&lt;/li&gt;
  &lt;li&gt;테스트 가능&lt;/li&gt;
  &lt;li&gt;간단하게 만들어야 함&lt;/li&gt;
  &lt;li&gt;핵심 기능만을 제공하지만, 필요한 기능은 반드시 포함&lt;/li&gt;
  &lt;li&gt;요구사항이 모두 반영될 때까지 개선, 보완&lt;/li&gt;
  &lt;li&gt;실제 사용자를 대상으로 테스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-프로토타입-장단점&quot;&gt;- UI 프로토타입 장단점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;장점&lt;/em&gt;&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;설득, 이해 쉬움&lt;/li&gt;
      &lt;li&gt;혼선 예방으로 개발 시간 단축&lt;/li&gt;
      &lt;li&gt;사전 오류 발견&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;단점&lt;/em&gt;&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;반복적인 개선작업으로 작업 시간 증가, 필요이상으로 자원 소모&lt;/li&gt;
      &lt;li&gt;중요한 작업 생략될 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--프로토타이핑-종류&quot;&gt;- 프로토타이핑 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;페이퍼 프로토타입(Paper Prototype)&lt;/em&gt;&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;아날로그적 방법, 손으로 직접 작성&lt;/li&gt;
      &lt;li&gt;제작기간이 짧고, 업무 협의가 빠른 경우 사용&lt;/li&gt;
      &lt;li&gt;장점
        &lt;ul&gt;
          &lt;li&gt;비용 저렴&lt;/li&gt;
          &lt;li&gt;대화하면서 생성 가능&lt;/li&gt;
          &lt;li&gt;즉시 변경 가능&lt;/li&gt;
          &lt;li&gt;고객이 과다한 기대 안함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;단점
        &lt;ul&gt;
          &lt;li&gt;테스트하기 부적당&lt;/li&gt;
          &lt;li&gt;상호 관계가 많은 경우 나타내기 복잡&lt;/li&gt;
          &lt;li&gt;여러 사람들에게 나눠주거나 공유하기 어렵다&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;디지털 프로토타입(Digital Prototype)&lt;/em&gt;&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;프로그램을 사용하여 작성&lt;/li&gt;
      &lt;li&gt;재사용이 필요한 경우, 숙련된 전문가가 있을 경우 사용&lt;/li&gt;
      &lt;li&gt;장점
        &lt;ul&gt;
          &lt;li&gt;최종 제품과 비슷하게 테스트&lt;/li&gt;
          &lt;li&gt;수정 쉬움&lt;/li&gt;
          &lt;li&gt;재사용 가능&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;단점
        &lt;ul&gt;
          &lt;li&gt;프로그램의 사용법을 알아야 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-프로토타입-제작-단계&quot;&gt;- UI 프로토타입 제작 단계&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;요구사항 분석&lt;/li&gt;
  &lt;li&gt;개발할 시스템의 핵심적인 기능을 페이퍼/디지털 방식으로 작성&lt;/li&gt;
  &lt;li&gt;사용자가 확인하는 단계, 추가 및 수정 의견 제안&lt;/li&gt;
  &lt;li&gt;수정과 합의가 이루어짐&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;7-ui-설계서-작성--b&quot;&gt;7. UI 설계서 작성 – B&lt;/h2&gt;

&lt;h3 id=&quot;--ui-설계서-개요&quot;&gt;- UI 설계서 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;UI 설계를 구체화하여 작성하는 문서. 대표적인 화면들을 설계&lt;/li&gt;
  &lt;li&gt;원활한 의사소통을 위해 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-설계서-표지-작성&quot;&gt;- UI 설계서 표지 작성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;혼동되지 않도록 프로젝트명 또는 시스템명을 포함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-설계서-개정-이력-작성&quot;&gt;- UI 설계서 개정 이력 작성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;UI 설계서가 수정될 때마다 어떤 부분이 수정되었는지 정리해 놓은 문서&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-요구사항-정의서-작성&quot;&gt;- UI 요구사항 정의서 작성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 요구사항을 확인하고 정리한 문서&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--시스템-구조-작성&quot;&gt;- 시스템 구조 작성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;전체 시스템의 구조를 설계한 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--사이트-맵-작성&quot;&gt;- 사이트 맵 작성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사이트에 표시할 콘텐츠를 한 눈에 알아 볼 수 있도록 메뉴별로 구분하여 설계한 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--프로세스-정의서-작성&quot;&gt;- 프로세스 정의서 작성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로세스들을 작업 진행 순서에 맞춰 정리한 것&lt;/li&gt;
  &lt;li&gt;UI 전체적인 흐름 파악 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--화면-설계&quot;&gt;- 화면 설계&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;필요한 화면을 페이지별로 설계&lt;/li&gt;
  &lt;li&gt;와이어프레임을 대략적으로 스케치&lt;/li&gt;
  &lt;li&gt;주요 흐름을 스토리보드 형태로 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-화면-설계의-기본-구성-요소&quot;&gt;- UI 화면 설계의 기본 구성 요소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;윈도우, 메뉴, 아이콘, 포인터&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-ui-상세-설계--b&quot;&gt;8. UI 상세 설계 – B&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;실제 구현을 위해 모든 화면에 대한 자세한 설계를 진행하는 단계. 반드시 시나리오 작성&lt;/li&gt;
  &lt;li&gt;최종 목표를 달성하기 위한 방법이 순차적으로 묘사&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-시나리오-문서-작성-원칙&quot;&gt;- UI 시나리오 문서 작성 원칙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;구체적으로 작성. Tree 구조 또는 Flow Chart 표기법으로 작성&lt;/li&gt;
  &lt;li&gt;공통적으로 적용될 UI 요소와 인터렉션을 일반 규칙으로 정의&lt;/li&gt;
  &lt;li&gt;레이아웃과 속할 기능 정의&lt;/li&gt;
  &lt;li&gt;인터렉션의 순서, 분기, 조건, 루프 등을 명시&lt;/li&gt;
  &lt;li&gt;예외 상황에 대비한 다양한 케이스 정의&lt;/li&gt;
  &lt;li&gt;기능별 상세 기능 시나리오를 정의&lt;/li&gt;
  &lt;li&gt;UI 시나리오 규칙을 지정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-시나리오-문서-작성을-위한-일반-규칙&quot;&gt;- UI 시나리오 문서 작성을 위한 일반 규칙&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;주요 키의 위치와 기능&lt;/li&gt;
  &lt;li&gt;공통 UI 요소&lt;/li&gt;
  &lt;li&gt;기본 스크린 레이아웃&lt;/li&gt;
  &lt;li&gt;기본 인터랙션 규칙&lt;/li&gt;
  &lt;li&gt;공통 단위 태스크 흐름&lt;/li&gt;
  &lt;li&gt;케이스 문서&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-요소&quot;&gt;- UI 요소&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;체크 박스 : 1개 이상의 값을 선택할 수 있는 버튼&lt;/li&gt;
  &lt;li&gt;라디오 버튼 : 하나만 선택할 수 있는 버튼&lt;/li&gt;
  &lt;li&gt;텍스트 박스 : 데이터를 입력하고 수정할 수 있는 상자&lt;/li&gt;
  &lt;li&gt;콤보 상자 : 지정된 목록 상자에 내용을 표시하여 선택하거나 새로 입력할 수 있는 상자&lt;/li&gt;
  &lt;li&gt;목록 상자 : 콤보 상자와 같이 목록을 표시하지만 새로운 내용을 입력할 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-시나리오-문서의-요건&quot;&gt;- UI 시나리오 문서의 요건&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;완정성(Complete)&lt;/li&gt;
  &lt;li&gt;일관성(Consistent)&lt;/li&gt;
  &lt;li&gt;이해성(Understandable)&lt;/li&gt;
  &lt;li&gt;가독성(Readable)&lt;/li&gt;
  &lt;li&gt;수정 용이성(Modifiable)&lt;/li&gt;
  &lt;li&gt;추적 용이성(Traceable)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--ui-시나리오-문서로-인한-기대-효과&quot;&gt;- UI 시나리오 문서로 인한 기대 효과&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;오류 감소&lt;/li&gt;
  &lt;li&gt;재작업 감소, 혼선 최소화&lt;/li&gt;
  &lt;li&gt;불필요한 기능 최소화&lt;/li&gt;
  &lt;li&gt;개발 비용 절감&lt;/li&gt;
  &lt;li&gt;개발 속도 향상&lt;/li&gt;
&lt;/ul&gt;</content><author><name>이원우</name><email>plmplmdnjsdn@naver.com</email></author><category term="JCKP" /><category term="JCKP" /><summary type="html">정보처리기사 필기 1과목 2장</summary></entry></feed>